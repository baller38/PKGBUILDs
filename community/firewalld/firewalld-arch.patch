From b79c6b987ed23c12c3503ca2178066b780dfd00b Mon Sep 17 00:00:00 2001
From: Maxime Gauduin <alucryd@archlinux.org>
Date: Sun, 24 Apr 2016 11:25:47 +0200
Subject: [PATCH] Make sysconfig dir customizable

---
 config/Makefile.am                        |   11 +-
 config/firewalld.service.in               |    2 +-
 configure.ac                              |    5 +
 doc/xml/Makefile.am                       |   10 +-
 doc/xml/firewall-cmd.xml                  | 1857 -----------------------------
 doc/xml/firewall-cmd.xml.in               | 1857 +++++++++++++++++++++++++++++
 doc/xml/firewall-offline-cmd.xml          | 1730 ---------------------------
 doc/xml/firewall-offline-cmd.xml.in       | 1730 +++++++++++++++++++++++++++
 doc/xml/firewalld.xml                     |  237 ----
 doc/xml/firewalld.xml.in                  |  237 ++++
 src/Makefile.am                           |   12 +-
 src/firewall-offline-cmd                  | 1737 ---------------------------
 src/firewall-offline-cmd.in               | 1737 +++++++++++++++++++++++++++
 src/tests/firewall-offline-cmd_test.sh    |  579 ---------
 src/tests/firewall-offline-cmd_test.sh.in |  579 +++++++++
 15 files changed, 6172 insertions(+), 6148 deletions(-)
 delete mode 100644 doc/xml/firewall-cmd.xml
 create mode 100644 doc/xml/firewall-cmd.xml.in
 delete mode 100644 doc/xml/firewall-offline-cmd.xml
 create mode 100644 doc/xml/firewall-offline-cmd.xml.in
 delete mode 100644 doc/xml/firewalld.xml
 create mode 100644 doc/xml/firewalld.xml.in
 delete mode 100755 src/firewall-offline-cmd
 create mode 100755 src/firewall-offline-cmd.in
 delete mode 100755 src/tests/firewall-offline-cmd_test.sh
 create mode 100755 src/tests/firewall-offline-cmd_test.sh.in

diff --git a/config/Makefile.am b/config/Makefile.am
index 6d0e02c..40ccc75 100644
--- a/config/Makefile.am
+++ b/config/Makefile.am
@@ -198,18 +198,19 @@ edit = sed \
 	-e 's|@bindir[@]|$(bindir)|g' \
 	-e 's|@sbindir[@]|$(sbindir)|g' \
 	-e 's|@sysconfdir[@]|$(sysconfdir)|g' \
-	-e 's|@localstatedir[@]|$(localstatedir)|g'
+	-e 's|@localstatedir[@]|$(localstatedir)|g' \
+	-e 's|@SYSCONFIGDIR[@]|$(SYSCONFIGDIR)|g'
 
 firewalld.service: firewalld.service.in
 	$(edit) $< >$@
 
 install-sysconfig:
-	$(MKDIR_P) $(DESTDIR)$(sysconfdir)/sysconfig
-	$(INSTALL_DATA) $(srcdir)/firewalld.sysconfig $(DESTDIR)$(sysconfdir)/sysconfig/firewalld
+	$(MKDIR_P) $(DESTDIR)$(SYSCONFIGDIR)
+	$(INSTALL_DATA) $(srcdir)/firewalld.sysconfig $(DESTDIR)$(SYSCONFIGDIR)/firewalld
 
 uninstall-sysconfig:
-	rm -f $(DESTDIR)$(sysconfdir)/sysconfig/firewalld
-	rmdir $(DESTDIR)$(sysconfdir)/sysconfig || :
+	rm -f $(DESTDIR)$(SYSCONFIGDIR)/firewalld
+	rmdir $(DESTDIR)$(SYSCONFIGDIR) || :
 
 install-rpmmacros:
 	$(MKDIR_P) $(DESTDIR)$(prefix)/lib/rpm/macros.d
diff --git a/config/firewalld.service.in b/config/firewalld.service.in
index 5462864..4f80561 100644
--- a/config/firewalld.service.in
+++ b/config/firewalld.service.in
@@ -9,7 +9,7 @@ Conflicts=iptables.service ip6tables.service ebtables.service ipset.service
 Documentation=man:firewalld(1)
 
 [Service]
-EnvironmentFile=-/etc/sysconfig/firewalld
+EnvironmentFile=-@SYSCONFIGDIR@/firewalld
 ExecStart=@sbindir@/firewalld --nofork --nopid $FIREWALLD_ARGS
 ExecReload=/bin/kill -HUP $MAINPID
 # supress to log debug and error output also to /var/log/messages
diff --git a/configure.ac b/configure.ac
index 10780dd..091e5d1 100644
--- a/configure.ac
+++ b/configure.ac
@@ -62,6 +62,11 @@ AC_ARG_WITH([bashcompletiondir],
        [BASHCOMPLETIONDIR=$withval], [BASHCOMPLETIONDIR="${datadir}/bash-completion/completions"])
 AC_SUBST(BASHCOMPLETIONDIR)
 
+AC_ARG_WITH([sysconfigdir],
+       AS_HELP_STRING([--with-sysconfigdir=DIR], [Sysconfig directory]),
+       [SYSCONFIGDIR=$withval], [SYSCONFIGDIR="${sysconfdir}/sysconfig"])
+AC_SUBST(SYSCONFIGDIR)
+
 # Extend PATH to include /sbin etc in case we are building as non-root
 FW_TOOLS_PATH="$PATH:/usr/local/sbin:/sbin:/usr/sbin"
 
diff --git a/doc/xml/Makefile.am b/doc/xml/Makefile.am
index 50af3c1..bae831f 100644
--- a/doc/xml/Makefile.am
+++ b/doc/xml/Makefile.am
@@ -2,7 +2,8 @@ XSLTPROC = xsltproc
 
 EXTRA_DIST = $(HTMLS:../html/%.html=%.xml) \
 	authors.xml notes.xml seealso.xml errorcodes.xml \
-	transform-man.xsl.in transform-html.xsl.in
+	transform-man.xsl.in transform-html.xsl.in \
+	firewalld.xml.in firewall-cmd.xml.in firewalld-offline-cmd.xml.in
 
 man_MANS = $(man1_MANS) $(man5_MANS)
 HTMLS = $(man1_MANS:../man/man1/%.1=../html/%.html) $(man5_MANS:../man/man5/%.5=../html/%.html)
@@ -65,9 +66,16 @@ errorcodes.xml: ../../src/firewall/errors.py
 edit = sed \
 	-e 's|\@PREFIX\@|$(prefix)|' \
 	-e 's|\@SYSCONFDIR\@|$(sysconfdir)|' \
+	-e 's|\@SYSCONFIGDIR\@|$(SYSCONFIGDIR)|' \
 	-e 's|\@PACKAGE_STRING\@|$(PACKAGE_STRING)|'
 
 transform-man.xsl: transform-man.xsl.in
 	$(edit) $< >$@
 transform-html.xsl: transform-html.xsl.in
 	$(edit) $< >$@
+firewalld.xml: firewalld.xml.in
+	$(edit) $< >$@
+firewall-cmd.xml: firewall-cmd.xml.in
+	$(edit) $< >$@
+firewall-offline-cmd.xml: firewall-offline-cmd.xml.in
+	$(edit) $< >$@
diff --git a/doc/xml/firewall-cmd.xml b/doc/xml/firewall-cmd.xml
deleted file mode 100644
index d6ad60a..0000000
--- a/doc/xml/firewall-cmd.xml
+++ /dev/null
@@ -1,1857 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN" "http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd"
-[
-<!ENTITY authors SYSTEM "authors.xml">
-<!ENTITY seealso SYSTEM "seealso.xml">
-<!ENTITY notes SYSTEM "notes.xml">
-<!ENTITY errorcodes SYSTEM "errorcodes.xml">
-]>
-
-<!--
-  This file is part of firewalld.
-
-  Copyright (C) 2010-2014 Red Hat, Inc.
-  Authors:
-  Thomas Woerner <twoerner@redhat.com>
-
-  This program is free software; you can redistribute it and/or modify
-  it under the terms of the GNU General Public License as published by
-  the Free Software Foundation; either version 2 of the License, or
-  (at your option) any later version.
-
-  This program is distributed in the hope that it will be useful,
-  but WITHOUT ANY WARRANTY; without even the implied warranty of
-  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-  GNU General Public License for more details.
-
-  You should have received a copy of the GNU General Public License
-  along with this program.  If not, see <http://www.gnu.org/licenses/>.
--->
-
-<refentry id="firewall-cmd">
-
-  <refentryinfo>
-    <title>firewall-cmd</title>
-    <productname>firewalld</productname>
-    &authors;
-  </refentryinfo>
-
-  <refmeta>
-    <refentrytitle>firewall-cmd</refentrytitle>
-    <manvolnum>1</manvolnum>
-  </refmeta>
-
-  <refnamediv>
-    <refname>firewall-cmd</refname>
-    <refpurpose>firewalld command line client</refpurpose>
-  </refnamediv>
-
-  <refsynopsisdiv>
-    <cmdsynopsis>
-      <command>firewall-cmd</command> <arg choice="opt" rep="repeat">OPTIONS</arg>
-    </cmdsynopsis>
-  </refsynopsisdiv>
-
-  <refsect1 id="description">
-    <title>Description</title>
-		
-    <para>
-      firewall-cmd is the command line client of the firewalld daemon. It provides interface to manage runtime and permanent configuration.
-    </para>
-
-    <para>
-      The runtime configuration in firewalld is separated from the permanent configuration. This means that things can get changed in the runtime or permanent configuration.
-    </para>
-  </refsect1>
-
-  <refsect1 id="options">
-    <title>Options</title>
-    <para>
-      The following options are supported:
-    </para>
-
-    <refsect2 id="general_options">
-      <title>General Options</title>
-      <variablelist>
-	<varlistentry>
-          <term><option>-h</option></term>
-          <term><option>--help</option></term>
-          <listitem>
-	    <para>
-	      Prints a short help text and exits.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-          <term><option>-V</option></term>
-          <term><option>--version</option></term>
-          <listitem>
-	    <para>
-	      Print the version string of firewalld. This option is not combinable with other options.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-          <term><option>-q</option></term>
-          <term><option>--quiet</option></term>
-          <listitem>
-	    <para>
-	      Do not print status messages.
-	    </para>
-	  </listitem>
-	</varlistentry>
-      </variablelist>
-    </refsect2>
-
-    <refsect2 id="status_options">
-      <title>Status Options</title>
-      <variablelist>
-	<varlistentry>
-	  <term><option>--state</option></term>
-	  <listitem>
-	    <para>
-	      Check whether the firewalld daemon is active (i.e. running). Returns an exit code 0 if it is active, <replaceable>NOT_RUNNING</replaceable> otherwise (see <xref linkend="exit_codes"/>). This will also print the state to <replaceable>STDOUT</replaceable>.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><option>--reload</option></term>
-	  <listitem>
-	    <para>
-	      Reload firewall rules and keep state information.
-	      Current permanent configuration will become new runtime configuration,
-	      i.e. all runtime only changes done until reload are lost with reload
-	      if they have not been also in permanent configuration.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><option>--complete-reload</option></term>
-	  <listitem>
-	    <para>
-	      Reload firewall completely, even netfilter kernel modules. This will most likely terminate active connections, because state information is lost. This option should only be used in case of severe firewall problems. For example if there are state information problems that no connection can be established with correct firewall rules.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><option>--runtime-to-permanent</option></term>
-	  <listitem>
-	    <para>
-	      Save active runtime configuration and overwrite permanent configuration with it.
-	      The way this is supposed to work is that when configuring firewalld you do runtime changes only and
-	      once you're happy with the configuration and you tested that it works the way you want, you save
-	      the configuration to disk.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><option>--get-log-denied</option></term>
-	  <listitem>
-	    <para>
-	      Print the log denied setting.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><option>--set-log-denied</option>=<replaceable>value</replaceable></term>
-	  <listitem>
-	    <para>
-	      Add logging rules right before reject and drop rules in the INPUT, FORWARD and OUTPUT chains for the default rules and also final reject and drop rules in zones for the configured link-layer packet type. The possible values are: <replaceable>all</replaceable>, <replaceable>unicast</replaceable>, <replaceable>broadcast</replaceable>, <replaceable>multicast</replaceable> and <replaceable>off</replaceable>. The default setting is <replaceable>off</replaceable>, which disables the logging.
-	    </para>
-	    <para>
-	      This is a runtime and permanent change and will also reload the firewall to be able to add the logging rules.
-	    </para>
-	  </listitem>
-	</varlistentry>
-      </variablelist>
-    </refsect2>
-
-    <refsect2 id="permanent_options">
-      <title>Permanent Options</title>
-      <variablelist>
-
-	<varlistentry>
-          <term><option>--permanent</option></term>
-          <listitem>
-	    <para>
-	      The permanent option <option>--permanent</option> can be used to set options permanently. These changes are not effective immediately, only after service restart/reload or system reboot. Without the <option>--permanent</option> option, a change will only be part of the runtime configuration.
-	    </para>
-	    <para>If you want to make a change in runtime and permanent configuration, use the same call with and without the <option>--permanent</option> option.
-	    </para>
-	    <para>
-	      The <option>--permanent</option> option can be optionally added to all options further down where it is supported.
-	    </para>
-	  </listitem>
-	</varlistentry>
-      </variablelist>
-    </refsect2>
-
-    <refsect2 id="zone_options">
-      <title>Zone Options</title>
-      <variablelist>
-	<varlistentry>
-	  <term><option>--get-default-zone</option></term>
-	  <listitem>
-	    <para>
-	      Print default zone for connections and interfaces.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><option>--set-default-zone</option>=<replaceable>zone</replaceable></term>
-	  <listitem>
-	    <para>
-	      Set default zone for connections and interfaces where no zone has been selected. Setting the default zone changes the zone for the connections or interfaces, that are using the default zone.
-	    </para>
-	    <para>
-	      This is a runtime and permanent change.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><option>--get-active-zones</option></term>
-	  <listitem>
-	    <para>
-	      Print currently active zones altogether with interfaces and sources used in these zones. Active zones are zones, that have a binding to an interface or source. The output format is:
-	      <programlisting>
-<replaceable>zone1</replaceable>
-  interfaces: <replaceable>interface1</replaceable> <replaceable>interface2</replaceable> ..
-  sources: <replaceable>source1</replaceable> ..
-<replaceable>zone2</replaceable>
-  interfaces: <replaceable>interface3</replaceable> ..
-<replaceable>zone3</replaceable>
-  sources: <replaceable>source2</replaceable> ..
-	      </programlisting>
-	      If there are no interfaces or sources bound to the zone, the corresponding line will be omitted.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <option>--get-zones</option></term>
-	  <listitem>
-	    <para>
-	      Print predefined zones as a space separated list.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <option>--get-services</option></term>
-	  <listitem>
-	    <para>
-	      Print predefined services as a space separated list.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <option>--get-icmptypes</option></term>
-	  <listitem>
-	    <para>
-	      Print predefined icmptypes as a space separated list.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <option>--get-zone-of-interface</option>=<replaceable>interface</replaceable></term>
-	  <listitem>
-	    <para>
-	      Print the name of the zone the <replaceable>interface</replaceable> is bound to or <emphasis>no zone</emphasis>.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <option>--get-zone-of-source</option>=<replaceable>source</replaceable><optional>/<replaceable>mask</replaceable></optional></term>
-	  <listitem>
-	    <para>
-	      Print the name of the zone the <replaceable>source</replaceable><optional>/<replaceable>mask</replaceable></optional> is bound to or <emphasis>no zone</emphasis>.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <option>--info-zone=<replaceable>zone</replaceable></option></term>
-	  <listitem>
-	    <para>
-	      Print information about the zone <replaceable>zone</replaceable>. The output format is:
-	      <programlisting>
-<replaceable>zone</replaceable>
-  interfaces: <replaceable>interface1</replaceable> ..
-  sources: <replaceable>source1</replaceable> ..
-  services: <replaceable>service1</replaceable> ..
-  ports: <replaceable>port1</replaceable> ..
-  protocols: <replaceable>protocol1</replaceable> ..
-  forward-ports:
-        <replaceable>forward-port1</replaceable>
-        ..
-  icmp-blocks: <replaceable>icmp-type1</replaceable> ..
-  rich rules:
-        <replaceable>rich-rule1</replaceable>
-        ..
-              </programlisting>
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <option>--list-all-zones</option></term>
-	  <listitem>
-	    <para>
-	      List everything added for or enabled in all zones. The output format is:
-	      <programlisting>
-<replaceable>zone1</replaceable>
-  interfaces: <replaceable>interface1</replaceable> ..
-  sources: <replaceable>source1</replaceable> ..
-  services: <replaceable>service1</replaceable> ..
-  ports: <replaceable>port1</replaceable> ..
-  protocols: <replaceable>protocol1</replaceable> ..
-  forward-ports:
-        <replaceable>forward-port1</replaceable>
-        ..
-  icmp-blocks: <replaceable>icmp-type1</replaceable> ..
-  rich rules:
-        <replaceable>rich-rule1</replaceable>
-        ..
-..
-              </programlisting>
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-          <term><option>--permanent</option> <option>--new-zone</option>=<replaceable>zone</replaceable></term>
-          <listitem>
-            <para>
-              Add a new permanent zone.
-            </para>
-          </listitem>
-	</varlistentry>
-
-	<varlistentry>
-          <term><option>--permanent</option> <option>--delete-zone</option>=<replaceable>zone</replaceable></term>
-          <listitem>
-            <para>
-              Delete an existing permanent zone.
-            </para>
-          </listitem>
-	</varlistentry>
-
-	<varlistentry>
-         <term><option>--permanent</option> <option>--zone</option>=<replaceable>zone</replaceable> <option>--set-description</option>=<replaceable>description</replaceable></term>
-         <listitem>
-           <para>
-             Set new description to zone
-           </para>
-         </listitem>
-	</varlistentry>
-	<varlistentry>
-         <term><option>--permanent</option> <option>--zone</option>=<replaceable>zone</replaceable> <option>--get-description</option></term>
-         <listitem>
-           <para>
-             Print description for zone
-           </para>
-         </listitem>
-	</varlistentry>
-	<varlistentry>
-         <term><option>--permanent</option> <option>--zone</option>=<replaceable>zone</replaceable> <option>--set-short</option>=<replaceable>description</replaceable></term>
-         <listitem>
-           <para>
-             Set short description to zone
-           </para>
-         </listitem>
-	</varlistentry>
-	<varlistentry>
-         <term><option>--permanent</option> <option>--zone</option>=<replaceable>zone</replaceable> <option>--get-short</option></term>
-         <listitem>
-           <para>
-             Print short description for zone
-           </para>
-         </listitem>
-	</varlistentry>
-	<varlistentry>
-          <term><option>--permanent</option> <optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--get-target</option></term>
-          <listitem>
-            <para>
-              Get the target of a permanent zone.
-            </para>
-          </listitem>
-	</varlistentry>
-
-	<varlistentry>
-          <term><option>--permanent</option> <optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--set-target</option>=<replaceable>target</replaceable></term>
-          <listitem>
-            <para>
-              Set the target of a permanent zone. <replaceable>target</replaceable> is one of: <literal>default</literal>, <literal>ACCEPT</literal>, <literal>DROP</literal>, <literal>REJECT</literal>
-            </para>
-          </listitem>
-	</varlistentry>
-      </variablelist>
-    </refsect2>
-
-    <refsect2 id="options_to_adapt_and_query_zones">
-      <title>Options to Adapt and Query Zones</title>
-      <para>
-	Options in this section affect only one particular zone. If used with <option>--zone</option>=<replaceable>zone</replaceable> option, they affect the zone <replaceable>zone</replaceable>. If the option is omitted, they affect default zone (see <option>--get-default-zone</option>).
-      </para>
-      <variablelist>
-
-	<!-- list-all -->
-
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--list-all</option></term>
-	  <listitem>
-	    <para>
-	      List everything added for or enabled in <replaceable>zone</replaceable>. If zone is omitted, default zone will be used.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<!-- list/add/remove/query service -->
-
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--list-services</option></term>
-	  <listitem>
-	    <para>
-	      List services added for <replaceable>zone</replaceable> as a space separated list. If zone is omitted, default zone will be used.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--add-service</option>=<replaceable>service</replaceable> <optional><option>--timeout</option>=<replaceable>timeval</replaceable></optional></term>
-	  <listitem>
-	    <para>
-	      Add a service for <replaceable>zone</replaceable>. If zone is omitted, default zone will be used. This option can be specified multiple times. If a timeout is supplied, the rule will be active for the specified amount of time and will be removed automatically afterwards.
-	      <replaceable>timeval</replaceable> is either a number (of seconds) or number followed by one of characters <literal>s</literal> (seconds), <literal>m</literal> (minutes), <literal>h</literal> (hours), for example <literal>20m</literal> or <literal>1h</literal>.
-	    </para>
-	    <para>
-	      The service is one of the firewalld provided services. To get a list of the supported services, use <command>firewall-cmd --get-services</command>.
-	    </para>
-	    <para>
-	      The <option>--timeout</option> option is not combinable with the <option>--permanent</option> option.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--remove-service</option>=<replaceable>service</replaceable></term>
-	  <listitem>
-	    <para>
-	      Remove a service from <replaceable>zone</replaceable>. This option can be specified multiple times. If zone is omitted, default zone will be used.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--query-service</option>=<replaceable>service</replaceable></term>
-	  <listitem>
-	    <para>
-	      Return whether <replaceable>service</replaceable> has been added for <replaceable>zone</replaceable>. If zone is omitted, default zone will be used. Returns 0 if true, 1 otherwise.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<!-- list/add/remove/query port -->
-
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--list-ports</option></term>
-	  <listitem>
-	    <para>
-	      List ports added for <replaceable>zone</replaceable> as a space separated list. A port is of the form <replaceable>portid</replaceable><optional>-<replaceable>portid</replaceable></optional>/<replaceable>protocol</replaceable>, it can be either a port and protocol pair or a port range with a protocol. If zone is omitted, default zone will be used.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--add-port</option>=<replaceable>portid</replaceable><optional>-<replaceable>portid</replaceable></optional>/<replaceable>protocol</replaceable> <optional><option>--timeout</option>=<replaceable>timeval</replaceable></optional></term>
-	  <listitem>
-	    <para>
-	      Add the port for <replaceable>zone</replaceable>. If zone is omitted, default zone will be used. This option can be specified multiple times. If a timeout is supplied, the rule will be active for the specified amount of time and will be removed automatically afterwards.
-	      <replaceable>timeval</replaceable> is either a number (of seconds) or number followed by one of characters <literal>s</literal> (seconds), <literal>m</literal> (minutes), <literal>h</literal> (hours), for example <literal>20m</literal> or <literal>1h</literal>.
-	    </para>
-	    <para>
-	      The port can either be a single port number or a port range <replaceable>portid</replaceable>-<replaceable>portid</replaceable>. The protocol can either be <literal>tcp</literal> or <literal>udp</literal>.
-	    </para>
-	    <para>
-	      The <option>--timeout</option> option is not combinable with the <option>--permanent</option> option.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--remove-port</option>=<replaceable>portid</replaceable><optional>-<replaceable>portid</replaceable></optional>/<replaceable>protocol</replaceable></term>
-	  <listitem>
-	    <para>
-	      Remove the port from <replaceable>zone</replaceable>. If zone is omitted, default zone will be used. This option can be specified multiple times.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--query-port</option>=<replaceable>portid</replaceable><optional>-<replaceable>portid</replaceable></optional>/<replaceable>protocol</replaceable></term>
-	  <listitem>
-	    <para>
-	      Return whether the port has been added for <replaceable>zone</replaceable>. If zone is omitted, default zone will be used. Returns 0 if true, 1 otherwise.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<!-- list/add/remove/query protocol -->
-
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--list-protocols</option></term>
-	  <listitem>
-	    <para>
-	      List protocols added for <replaceable>zone</replaceable> as a space separated list. If zone is omitted, default zone will be used.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--add-protocol</option>=<replaceable>protocol</replaceable> <optional><option>--timeout</option>=<replaceable>timeval</replaceable></optional></term>
-	  <listitem>
-	    <para>
-	      Add the protocol for <replaceable>zone</replaceable>. If zone is omitted, default zone will be used. This option can be specified multiple times. If a timeout is supplied, the rule will be active for the specified amount of time and will be removed automatically afterwards.
-	      <replaceable>timeval</replaceable> is either a number (of seconds) or number followed by one of characters <literal>s</literal> (seconds), <literal>m</literal> (minutes), <literal>h</literal> (hours), for example <literal>20m</literal> or <literal>1h</literal>.
-	    </para>
-	    <para>
-	      The protocol can be any protocol supported by the system. Please have a look at <filename>/etc/protocols</filename> for supported protocols.
-	    </para>
-	    <para>
-	      The <option>--timeout</option> option is not combinable with the <option>--permanent</option> option.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--remove-protcol</option>=<replaceable>protocol</replaceable></term>
-	  <listitem>
-	    <para>
-	      Remove the protocol from <replaceable>zone</replaceable>. If zone is omitted, default zone will be used. This option can be specified multiple times.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--query-protocol</option>=<replaceable>protocol</replaceable></term>
-	  <listitem>
-	    <para>
-	      Return whether the protocol has been added for <replaceable>zone</replaceable>. If zone is omitted, default zone will be used. Returns 0 if true, 1 otherwise.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<!-- list/add/remove/query icmp-block -->
-
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--list-icmp-blocks</option></term>
-	  <listitem>
-	    <para>
-	      List Internet Control Message Protocol (ICMP) type blocks added for <replaceable>zone</replaceable> as a space separated list. If zone is omitted, default zone will be used.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--add-icmp-block</option>=<replaceable>icmptype</replaceable> <optional><option>--timeout</option>=<replaceable>timeval</replaceable></optional></term>
-	  <listitem>
-	    <para>
-	      Add an ICMP block for <replaceable>icmptype</replaceable> for <replaceable>zone</replaceable>. If zone is omitted, default zone will be used. This option can be specified multiple times. If a timeout is supplied, the rule will be active for the specified amount of time and will be removed automatically afterwards.
-	      <replaceable>timeval</replaceable> is either a number (of seconds) or number followed by one of characters <literal>s</literal> (seconds), <literal>m</literal> (minutes), <literal>h</literal> (hours), for example <literal>20m</literal> or <literal>1h</literal>.
-	    </para>
-	    <para>
-	      The <replaceable>icmptype</replaceable> is the one of the icmp types firewalld supports. To get a listing of supported icmp types: <command>firewall-cmd --get-icmptypes</command>
-	    </para>
-	    <para>
-	      The <option>--timeout</option> option is not combinable with the <option>--permanent</option> option.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--remove-icmp-block</option>=<replaceable>icmptype</replaceable></term>
-	  <listitem>
-	    <para>
-	      Remove the ICMP block for <replaceable>icmptype</replaceable> from <replaceable>zone</replaceable>. If zone is omitted, default zone will be used. This option can be specified multiple times.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--query-icmp-block</option>=<replaceable>icmptype</replaceable></term>
-	  <listitem>
-	    <para>
-	      Return whether an ICMP block for <replaceable>icmptype</replaceable> has been added for <replaceable>zone</replaceable>. If zone is omitted, default zone will be used. Returns 0 if true, 1 otherwise.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<!-- list/add/remove/query forward-port -->
-
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--list-forward-ports</option></term>
-	  <listitem>
-	    <para>
-	      List <emphasis>IPv4</emphasis> forward ports added for <replaceable>zone</replaceable> as a space separated list. If zone is omitted, default zone will be used.
-	    </para>
-	    <para>
-	      For <emphasis>IPv6</emphasis> forward ports, please use the rich language.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--add-forward-port</option>=port=<replaceable>portid</replaceable><optional>-<replaceable>portid</replaceable></optional>:proto=<replaceable>protocol</replaceable><optional>:toport=<replaceable>portid</replaceable><optional>-<replaceable>portid</replaceable></optional></optional><optional>:toaddr=<replaceable>address</replaceable><optional>/<replaceable>mask</replaceable></optional></optional> <optional><option>--timeout</option>=<replaceable>timeval</replaceable></optional></term>
-	  <listitem>
-	    <para>
-	      Add the <emphasis>IPv4</emphasis> forward port for <replaceable>zone</replaceable>. If zone is omitted, default zone will be used. This option can be specified multiple times. If a timeout is supplied, the rule will be active for the specified amount of time and will be removed automatically afterwards.
-	      <replaceable>timeval</replaceable> is either a number (of seconds) or number followed by one of characters <literal>s</literal> (seconds), <literal>m</literal> (minutes), <literal>h</literal> (hours), for example <literal>20m</literal> or <literal>1h</literal>.
-	    </para>
-	    <para>
-	      The port can either be a single port number <replaceable>portid</replaceable> or a port range <replaceable>portid</replaceable>-<replaceable>portid</replaceable>. The protocol can either be <literal>tcp</literal> or <literal>udp</literal>. The destination address is a simple IP address.
-	    </para>
-	    <para>
-	      The <option>--timeout</option> option is not combinable with the <option>--permanent</option> option.
-	    </para>
-	    <para>
-	      For <emphasis>IPv6</emphasis> forward ports, please use the rich language.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--remove-forward-port</option>=port=<replaceable>portid</replaceable><optional>-<replaceable>portid</replaceable></optional>:proto=<replaceable>protocol</replaceable><optional>:toport=<replaceable>portid</replaceable><optional>-<replaceable>portid</replaceable></optional></optional><optional>:toaddr=<replaceable>address</replaceable><optional>/<replaceable>mask</replaceable></optional></optional></term>
-	  <listitem>
-	    <para>
-	      Remove the <emphasis>IPv4</emphasis> forward port from <replaceable>zone</replaceable>. If zone is omitted, default zone will be used. This option can be specified multiple times.
-	    </para>
-	    <para>
-	      For <emphasis>IPv6</emphasis> forward ports, please use the rich language.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--query-forward-port</option>=port=<replaceable>portid</replaceable><optional>-<replaceable>portid</replaceable></optional>:proto=<replaceable>protocol</replaceable><optional>:toport=<replaceable>portid</replaceable><optional>-<replaceable>portid</replaceable></optional></optional><optional>:toaddr=<replaceable>address</replaceable><optional>/<replaceable>mask</replaceable></optional></optional></term>
-	  <listitem>
-	    <para>
-	      Return whether the <emphasis>IPv4</emphasis> forward port has been added for <replaceable>zone</replaceable>. If zone is omitted, default zone will be used. Returns 0 if true, 1 otherwise.
-	    </para>
-	    <para>
-	      For <emphasis>IPv6</emphasis> forward ports, please use the rich language.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<!-- add/remove/query masquerade -->
-
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--add-masquerade</option> <optional><option>--timeout</option>=<replaceable>timeval</replaceable></optional></term>
-	  <listitem>
-	    <para>
-	      Enable <emphasis>IPv4</emphasis> masquerade for <replaceable>zone</replaceable>. If zone is omitted, default zone will be used. If a timeout is supplied, masquerading will be active for the specified amount of time.
-	      <replaceable>timeval</replaceable> is either a number (of seconds) or number followed by one of characters <literal>s</literal> (seconds), <literal>m</literal> (minutes), <literal>h</literal> (hours), for example <literal>20m</literal> or <literal>1h</literal>.
-	      Masquerading is useful if the machine is a router and machines connected over an interface in another zone should be able to use the first connection.
-	    </para>
-	    <para>
-	      The <option>--timeout</option> option is not combinable with the <option>--permanent</option> option.
-	    </para>
-	    <para>
-	      For <emphasis>IPv6</emphasis> masquerading, please use the rich language.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--remove-masquerade</option></term>
-	  <listitem>
-	    <para>
-	      Disable <emphasis>IPv4</emphasis> masquerade for <replaceable>zone</replaceable>. If zone is omitted, default zone will be used. If the masquerading was enabled with a timeout, it will be disabled also.
-	    </para>
-	    <para>
-	      For <emphasis>IPv6</emphasis> masquerading, please use the rich language.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--query-masquerade</option></term>
-	  <listitem>
-	    <para>
-	      Return whether <emphasis>IPv4</emphasis> masquerading has been enabled for <replaceable>zone</replaceable>. If zone is omitted, default zone will be used. Returns 0 if true, 1 otherwise.
-	    </para>
-	    <para>
-	      For <emphasis>IPv6</emphasis> masquerading, please use the rich language.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<!-- list/add/remove/query rich rule -->
-
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--list-rich-rules</option></term>
-	  <listitem>
-	    <para>
-	      List rich language rules added for <replaceable>zone</replaceable> as a newline separated list. If zone is omitted, default zone will be used.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--add-rich-rule</option>='<replaceable>rule</replaceable>' <optional><option>--timeout</option>=<replaceable>timeval</replaceable></optional></term>
-	  <listitem>
-	    <para>
-	      Add rich language rule '<replaceable>rule</replaceable>' for <replaceable>zone</replaceable>. This option can be specified multiple times. If zone is omitted, default zone will be used. If a timeout is supplied, the <replaceable>rule</replaceable> will be active for the specified amount of time and will be removed automatically afterwards.
-	      <replaceable>timeval</replaceable> is either a number (of seconds) or number followed by one of characters <literal>s</literal> (seconds), <literal>m</literal> (minutes), <literal>h</literal> (hours), for example <literal>20m</literal> or <literal>1h</literal>.
-	    </para>
-	    <para>
-	      For the rich language rule syntax, please have a look at <citerefentry><refentrytitle>firewalld.richlanguage</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
-	    </para>
-	    <para>
-	      The <option>--timeout</option> option is not combinable with the <option>--permanent</option> option.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--remove-rich-rule</option>='<replaceable>rule</replaceable>'</term>
-	  <listitem>
-	    <para>
-	      Remove rich language rule '<replaceable>rule</replaceable>' from <replaceable>zone</replaceable>. This option can be specified multiple times. If zone is omitted, default zone will be used.
-	    </para>
-	    <para>
-	      For the rich language rule syntax, please have a look at <citerefentry><refentrytitle>firewalld.richlanguage</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--query-rich-rule</option>='<replaceable>rule</replaceable>'</term>
-	  <listitem>
-	    <para>
-	      Return whether a rich language rule '<replaceable>rule</replaceable>' has been added for <replaceable>zone</replaceable>. If zone is omitted, default zone will be used. Returns 0 if true, 1 otherwise.
-	    </para>
-	    <para>
-	      For the rich language rule syntax, please have a look at <citerefentry><refentrytitle>firewalld.richlanguage</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-      </variablelist>
-    </refsect2>
-
-    <refsect2 id="options_to_handle_bindings_of_interfaces">
-      <title>Options to Handle Bindings of Interfaces</title>
-      <para>
-	Binding an interface to a zone means that this zone settings are used to restrict traffic via the interface.
-      </para>
-      <para>
-	Options in this section affect only one particular zone. If used with <option>--zone</option>=<replaceable>zone</replaceable> option, they affect the zone <replaceable>zone</replaceable>. If the option is omitted, they affect default zone (see <option>--get-default-zone</option>).
-      </para>
-      <para>
-	For a list of predefined zones use <command>firewall-cmd --get-zones</command>.
-      </para>
-      <para>
-	An interface name is a string up to 16 characters long, that may not contain <option>' '</option>, <option>'/'</option>, <option>'!'</option> and <option>'*'</option>.
-      </para>
-      <variablelist>
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--list-interfaces</option></term>
-	  <listitem>
-	    <para>
-	      List interfaces that are bound to zone <replaceable>zone</replaceable> as a space separated list. If zone is omitted, default zone will be used.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--add-interface</option>=<replaceable>interface</replaceable></term>
-	  <listitem>
-	    <para>
-	      Bind interface <replaceable>interface</replaceable> to zone <replaceable>zone</replaceable>. If zone is omitted, default zone will be used.
-	    </para>
-	    <para>
-	      As a end user you don't need this in most cases, because NetworkManager (or legacy network service) adds interfaces into zones automatically (according to <option>ZONE=</option> option from ifcfg-<replaceable>interface</replaceable> file) if <replaceable>NM_CONTROLLED=no</replaceable> is not set.
-	      You should do it only if there's no /etc/sysconfig/network-scripts/ifcfg-<replaceable>interface</replaceable> file.
-	      If there is such file and you add interface to zone with this <option>--add-interface</option> option, make sure the zone is the same in both cases, otherwise the behaviour would be undefined.
-	      Please also have a look at the <citerefentry><refentrytitle>firewalld</refentrytitle><manvolnum>1</manvolnum></citerefentry> man page in the <replaceable>Concepts</replaceable> section.
-	      For permanent association of interface with a zone, see also 'How to set or change a zone for a connection?' in <citerefentry><refentrytitle>firewalld.zones</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--change-interface</option>=<replaceable>interface</replaceable></term>
-	  <listitem>
-	    <para>
-	      Change zone the interface <replaceable>interface</replaceable> is bound to to zone <replaceable>zone</replaceable>.
-	      It's basically <option>--remove-interface</option> followed by <option>--add-interface</option>.
-	      If the interface has not been bound to a zone before, it behaves like <option>--add-interface</option>.
-	      If zone is omitted, default zone will be used.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--query-interface</option>=<replaceable>interface</replaceable></term>
-	  <listitem>
-	    <para>
-	      Query whether interface <replaceable>interface</replaceable> is bound to zone <replaceable>zone</replaceable>. Returns 0 if true, 1 otherwise.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <option>--remove-interface</option>=<replaceable>interface</replaceable></term>
-	  <listitem>
-	    <para>
-	      Remove binding of interface <replaceable>interface</replaceable> from zone it was previously added to.
-	    </para>
-	  </listitem>
-	</varlistentry>
-      </variablelist>
-    </refsect2>
-
-    <refsect2 id="options_to_handle_bindings_of_sources">
-      <title>Options to Handle Bindings of Sources</title>
-      <para>
-	Binding a source to a zone means that this zone settings will be used to restrict traffic from this source.
-      </para>
-      <para>
-	A source address or address range is either an IP address or a network IP address with a mask for IPv4 or IPv6 or a MAC address (no mask). For IPv4, the mask can be a network mask or a plain number. For IPv6 the mask is a plain number. The use of host names is not supported.
-      </para>
-      <para>
-	Options in this section affect only one particular zone. If used with <option>--zone</option>=<replaceable>zone</replaceable> option, they affect the zone <replaceable>zone</replaceable>. If the option is omitted, they affect default zone (see <option>--get-default-zone</option>).
-      </para>
-      <para>
-	For a list of predefined zones use <command>firewall-cmd <optional><option>--permanent</option></optional> --get-zones</command>.
-      </para>
-      <variablelist>
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--list-sources</option></term>
-	  <listitem>
-	    <para>
-	      List sources that are bound to zone <replaceable>zone</replaceable> as a space separated list. If zone is omitted, default zone will be used.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--add-source</option>=<replaceable>source</replaceable><optional>/<replaceable>mask</replaceable></optional></term>
-	  <listitem>
-	    <para>
-	      Bind source <replaceable>source</replaceable><optional>/<replaceable>mask</replaceable></optional> to zone <replaceable>zone</replaceable>. If zone is omitted, default zone will be used.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--change-source</option>=<replaceable>source</replaceable><optional>/<replaceable>mask</replaceable></optional></term>
-	  <listitem>
-	    <para>
-	      Change zone the source <replaceable>source</replaceable><optional>/<replaceable>mask</replaceable></optional> is bound to to zone <replaceable>zone</replaceable>.
-	      It's basically <option>--remove-source</option> followed by <option>--add-source</option>.
-	      If the source has not been bound to a zone before, it behaves like <option>--add-source</option>.
-	      If zone is omitted, default zone will be used.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--query-source</option>=<replaceable>source</replaceable><optional>/<replaceable>mask</replaceable></optional></term>
-	  <listitem>
-	    <para>
-	      Query whether the source <replaceable>source</replaceable><optional>/<replaceable>mask</replaceable></optional> is bound to the zone <replaceable>zone</replaceable>. Returns 0 if true, 1 otherwise.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <option>--remove-source</option>=<replaceable>source</replaceable><optional>/<replaceable>mask</replaceable></optional></term>
-	  <listitem>
-	    <para>
-	      Remove binding of source <replaceable>source</replaceable><optional>/<replaceable>mask</replaceable></optional> from zone it was previously added to.
-	    </para>
-	  </listitem>
-	</varlistentry>
-      </variablelist>
-    </refsect2>
-
-    <refsect2 id="ipset_options">
-      <title>IPSet Options</title>
-      <variablelist>
-	<varlistentry>
-         <term><option>--permanent</option> <option>--new-ipset</option>=<replaceable>ipset</replaceable> <option>--type</option>=<replaceable>ipset type</replaceable> <optional><option>--option</option>=<replaceable>ipset option</replaceable><optional>=<replaceable>value</replaceable></optional></optional></term>
-         <listitem>
-           <para>
-             Add a new permanent ipset with specifying the type and optional options.
-           </para>
-         </listitem>
-       </varlistentry>
-       <varlistentry>
-         <term><option>--permanent</option> <option>--delete-ipset</option>=<replaceable>ipset</replaceable></term>
-         <listitem>
-           <para>
-             Delete an existing permanent ipset.
-           </para>
-         </listitem>
-       </varlistentry>
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <option>--info-ipset=<replaceable>ipset</replaceable></option></term>
-	  <listitem>
-	    <para>
-	      Print information about the ipset <replaceable>ipset</replaceable>. The output format is:
-	      <programlisting>
-<replaceable>ipset</replaceable>
-  type: <replaceable>type</replaceable>
-  options: <replaceable>option1[=value1]</replaceable> ..
-  entries: <replaceable>entry1</replaceable> ..
-              </programlisting>
-	    </para>
-	  </listitem>
-	</varlistentry>
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <option>--get-ipsets</option></term>
-	  <listitem>
-	    <para>
-	      Print predefined ipsets as a space separated list.
-	    </para>
-	  </listitem>
-	</varlistentry>
-	<varlistentry>
-         <term><option>--permanent</option> <option>--ipset</option>=<replaceable>ipset</replaceable> <option>--set-description</option>=<replaceable>description</replaceable></term>
-         <listitem>
-           <para>
-             Set new description to ipset
-           </para>
-         </listitem>
-	</varlistentry>
-	<varlistentry>
-         <term><option>--permanent</option> <option>--ipset</option>=<replaceable>ipset</replaceable> <option>--get-description</option></term>
-         <listitem>
-           <para>
-             Print description for ipset
-           </para>
-         </listitem>
-	</varlistentry>
-	<varlistentry>
-         <term><option>--permanent</option> <option>--ipset</option>=<replaceable>ipset</replaceable> <option>--set-short</option>=<replaceable>description</replaceable></term>
-         <listitem>
-           <para>
-             Set short description to ipset
-           </para>
-         </listitem>
-	</varlistentry>
-	<varlistentry>
-         <term><option>--permanent</option> <option>--ipset</option>=<replaceable>ipset</replaceable> <option>--get-short</option></term>
-         <listitem>
-           <para>
-             Print short description for ipset
-           </para>
-         </listitem>
-	</varlistentry>
-	<varlistentry>
-         <term><optional><option>--permanent</option></optional> <option>--ipset</option>=<replaceable>ipset</replaceable> <option>--add-entry</option>=<replaceable>entry</replaceable></term>
-         <listitem>
-           <para>
-             Add a new entry to the ipset.
-           </para>
-         </listitem>
-       </varlistentry>
-
-	<varlistentry>
-         <term><optional><option>--permanent</option></optional> <option>--ipset</option>=<replaceable>ipset</replaceable> <option>--remove-entry</option>=<replaceable>entry</replaceable></term>
-         <listitem>
-           <para>
-             Remove an entry from the ipset.
-           </para>
-         </listitem>
-       </varlistentry>
-
-	<varlistentry>
-         <term><optional><option>--permanent</option></optional> <option>--ipset</option>=<replaceable>ipset</replaceable> <option>--query-entry</option>=<replaceable>entry</replaceable></term>
-         <listitem>
-           <para>
-	     Return whether the entry has been added to an ipset. Returns 0 if true, 1 otherwise.
-           </para>
-         </listitem>
-       </varlistentry>
-
-	<varlistentry>
-         <term><optional><option>--permanent</option></optional> <option>--ipset</option>=<replaceable>ipset</replaceable> <option>--get-entries</option></term>
-         <listitem>
-           <para>
-             List all entries of the ipset.
-           </para>
-         </listitem>
-       </varlistentry>
-
-	<varlistentry>
-         <term><optional><option>--permanent</option></optional> <option>--ipset</option>=<replaceable>ipset</replaceable> <option>--add-entries-from-file</option>=<replaceable>filename</replaceable></term>
-         <listitem>
-           <para>
-             Add a new entries to the ipset from the file. For all entries that are listed in the file but already in the ipset, a warning will be printed.
-           </para>
-           <para>
-	     The file should contain an entry per line. Lines starting with an hash or semicolon are ignored. Also empty lines.
-           </para>
-         </listitem>
-       </varlistentry>
-
-	<varlistentry>
-         <term><optional><option>--permanent</option></optional> <option>--ipset</option>=<replaceable>ipset</replaceable> <option>--remove-entries-from-file</option>=<replaceable>filename</replaceable></term>
-         <listitem>
-           <para>
-             Remove existing entries from the ipset from the file. For all entries that are listed in the file but not in the ipset, a warning will be printed.
-           </para>
-           <para>
-	     The file should contain an entry per line. Lines starting with an hash or semicolon are ignored. Also empty lines.
-           </para>
-         </listitem>
-       </varlistentry>
-     </variablelist>
-    </refsect2>
-
-    <refsect2 id="service_options">
-      <title>Service Options</title>
-      <para>
-	Options in this section affect only one particular service.
-      </para>
-      <variablelist>
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <option>--info-service=<replaceable>service</replaceable></option></term>
-	  <listitem>
-	    <para>
-	      Print information about the service <replaceable>service</replaceable>. The output format is:
-	      <programlisting>
-<replaceable>service</replaceable>
-  ports: <replaceable>port1</replaceable> ..
-  protocols: <replaceable>protocol1</replaceable> ..
-  modules: <replaceable>module1</replaceable> ..
-  destination: <replaceable>ipv1</replaceable>:<replaceable>address1</replaceable> ..
-              </programlisting>
-	    </para>
-	  </listitem>
-	</varlistentry>
-      </variablelist>
-      <para>
-	The following options are only usable in the permanent configuration.
-      </para>
-      <variablelist>
-       <varlistentry>
-         <term><option>--permanent</option> <option>--new-service</option>=<replaceable>service</replaceable></term>
-         <listitem>
-           <para>
-             Add a new permanent service.
-           </para>
-         </listitem>
-       </varlistentry>
-       <varlistentry>
-         <term><option>--permanent</option> <option>--delete-service</option>=<replaceable>service</replaceable></term>
-         <listitem>
-           <para>
-             Delete an existing permanent service.
-           </para>
-         </listitem>
-       </varlistentry>
-       <varlistentry>
-         <term><option>--permanent</option> <option>--service</option>=<replaceable>service</replaceable> <option>--set-description</option>=<replaceable>description</replaceable></term>
-         <listitem>
-           <para>
-             Set new description to service
-           </para>
-         </listitem>
-       </varlistentry>
-       <varlistentry>
-         <term><option>--permanent</option> <option>--service</option>=<replaceable>service</replaceable> <option>--get-description</option></term>
-         <listitem>
-           <para>
-             Print description for service
-           </para>
-         </listitem>
-       </varlistentry>
-       <varlistentry>
-         <term><option>--permanent</option> <option>--service</option>=<replaceable>service</replaceable> <option>--set-short</option>=<replaceable>description</replaceable></term>
-         <listitem>
-           <para>
-             Set short description to service
-           </para>
-         </listitem>
-       </varlistentry>
-       <varlistentry>
-         <term><option>--permanent</option> <option>--service</option>=<replaceable>service</replaceable> <option>--get-short</option></term>
-         <listitem>
-           <para>
-             Print short description for service
-           </para>
-         </listitem>
-       </varlistentry>
-       <varlistentry>
-         <term><option>--permanent</option> <option>--service</option>=<replaceable>service</replaceable> <option>--add-port</option>=<replaceable>portid</replaceable><optional>-<replaceable>portid</replaceable></optional>/<replaceable>protocol</replaceable></term>
-         <listitem>
-           <para>
-             Add a new port to the permanent service.
-           </para>
-         </listitem>
-       </varlistentry>
-       <varlistentry>
-         <term><option>--permanent</option> <option>--service</option>=<replaceable>service</replaceable> <option>--remove-port</option>=<replaceable>portid</replaceable><optional>-<replaceable>portid</replaceable></optional>/<replaceable>protocol</replaceable></term>
-         <listitem>
-           <para>
-             Remove a port from the permanent service.
-           </para>
-         </listitem>
-       </varlistentry>
-       <varlistentry>
-         <term><option>--permanent</option> <option>--service</option>=<replaceable>service</replaceable> <option>--query-port</option>=<replaceable>portid</replaceable><optional>-<replaceable>portid</replaceable></optional>/<replaceable>protocol</replaceable></term>
-         <listitem>
-           <para>
-             Return wether the port has been added to the permanent service.
-           </para>
-         </listitem>
-       </varlistentry>
-       <varlistentry>
-         <term><option>--permanent</option> <option>--service</option>=<replaceable>service</replaceable> <option>--get-ports</option></term>
-         <listitem>
-           <para>
-             List ports added to the permanent service.
-           </para>
-         </listitem>
-       </varlistentry>
-
-       <varlistentry>
-         <term><option>--permanent</option> <option>--service</option>=<replaceable>service</replaceable> <option>--add-protocol</option>=<replaceable>protocol</replaceable></term>
-         <listitem>
-           <para>
-             Add a new protocol to the permanent service.
-           </para>
-         </listitem>
-       </varlistentry>
-       <varlistentry>
-         <term><option>--permanent</option> <option>--service</option>=<replaceable>service</replaceable> <option>--remove-protocol</option>=<replaceable>protocol</replaceable></term>
-         <listitem>
-           <para>
-             Remove a protocol from the permanent service.
-           </para>
-         </listitem>
-       </varlistentry>
-       <varlistentry>
-         <term><option>--permanent</option> <option>--service</option>=<replaceable>service</replaceable> <option>--query-protocol</option>=<replaceable>protocol</replaceable></term>
-         <listitem>
-           <para>
-             Return wether the protocol has been added to the permanent service.
-           </para>
-         </listitem>
-       </varlistentry>
-       <varlistentry>
-         <term><option>--permanent</option> <option>--service</option>=<replaceable>service</replaceable> <option>--get-protocols</option></term>
-         <listitem>
-           <para>
-             List protocols added to the permanent service.
-           </para>
-         </listitem>
-       </varlistentry>
-
-       <varlistentry>
-         <term><option>--permanent</option> <option>--service</option>=<replaceable>service</replaceable> <option>--add-module</option>=<replaceable>module</replaceable></term>
-         <listitem>
-           <para>
-             Add a new module to the permanent service.
-           </para>
-         </listitem>
-       </varlistentry>
-       <varlistentry>
-         <term><option>--permanent</option> <option>--service</option>=<replaceable>service</replaceable> <option>--remove-module</option>=<replaceable>module</replaceable></term>
-         <listitem>
-           <para>
-             Remove a module from the permanent service.
-           </para>
-         </listitem>
-       </varlistentry>
-       <varlistentry>
-         <term><option>--permanent</option> <option>--service</option>=<replaceable>service</replaceable> <option>--query-module</option>=<replaceable>module</replaceable></term>
-         <listitem>
-           <para>
-             Return wether the module has been added to the permanent service.
-           </para>
-         </listitem>
-       </varlistentry>
-       <varlistentry>
-         <term><option>--permanent</option> <option>--service</option>=<replaceable>service</replaceable> <option>--get-modules</option></term>
-         <listitem>
-           <para>
-             List modules added to the permanent service.
-           </para>
-         </listitem>
-       </varlistentry>
-
-       <varlistentry>
-         <term><option>--permanent</option> <option>--service</option>=<replaceable>service</replaceable> <option>--add-destination</option>=<replaceable>ipv</replaceable>:<replaceable>address</replaceable><optional>/<replaceable>mask</replaceable></optional></term>
-         <listitem>
-           <para>
-             Set destination for ipv to address[/mask] in the permanent service.
-           </para>
-         </listitem>
-       </varlistentry>
-       <varlistentry>
-         <term><option>--permanent</option> <option>--service</option>=<replaceable>service</replaceable> <option>--remove-destination</option>=<replaceable>ipv</replaceable></term>
-         <listitem>
-           <para>
-             Remove the destination for ipv from the permanent service.
-           </para>
-         </listitem>
-       </varlistentry>
-       <varlistentry>
-         <term><option>--permanent</option> <option>--service</option>=<replaceable>service</replaceable> <option>--query-destination</option>=<replaceable>ipv</replaceable>:<replaceable>address</replaceable><optional>/<replaceable>mask</replaceable></optional></term>
-         <listitem>
-           <para>
-             Return wether the destination ipv to address[/mask] has been set in the permanent service.
-           </para>
-         </listitem>
-       </varlistentry>
-       <varlistentry>
-         <term><option>--permanent</option> <option>--service</option>=<replaceable>service</replaceable> <option>--get-destinations</option></term>
-         <listitem>
-           <para>
-             List destinations added to the permanent service.
-           </para>
-         </listitem>
-       </varlistentry>
-      </variablelist>
-    </refsect2>
-
-    <refsect2 id="icmptype_options">
-      <title>Internet Control Message Protocol (ICMP) type Options</title>
-      <para>
-	Options in this section affect only one particular icmptype.
-      </para>
-      <variablelist>
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <option>--info-icmptype=<replaceable>icmptype</replaceable></option></term>
-	  <listitem>
-	    <para>
-	      Print information about the icmptype <replaceable>icmptype</replaceable>. The output format is:
-	      <programlisting>
-<replaceable>icmptype</replaceable>
-  destination: <replaceable>ipv1</replaceable> ..
-              </programlisting>
-	    </para>
-	  </listitem>
-	</varlistentry>
-      </variablelist>
-      <para>
-	The following options are only usable in the permanent configuration.
-      </para>
-      <variablelist>
-       <varlistentry>
-         <term><option>--permanent</option> <option>--new-icmptype</option>=<replaceable>icmptype</replaceable></term>
-         <listitem>
-           <para>
-             Add a new permanent icmptype.
-           </para>
-         </listitem>
-       </varlistentry>
-       <varlistentry>
-         <term><option>--permanent</option> <option>--delete-icmptype</option>=<replaceable>icmptype</replaceable></term>
-         <listitem>
-           <para>
-             Delete an existing permanent icmptype.
-           </para>
-         </listitem>
-       </varlistentry>
-
-       <varlistentry>
-         <term><option>--permanent</option> <option>--icmptype</option>=<replaceable>icmptype</replaceable> <option>--set-description</option>=<replaceable>description</replaceable></term>
-         <listitem>
-           <para>
-             Set new description to icmptype
-           </para>
-         </listitem>
-       </varlistentry>
-       <varlistentry>
-         <term><option>--permanent</option> <option>--icmptype</option>=<replaceable>icmptype</replaceable> <option>--get-description</option></term>
-         <listitem>
-           <para>
-             Print description for icmptype
-           </para>
-         </listitem>
-       </varlistentry>
-       <varlistentry>
-         <term><option>--permanent</option> <option>--icmptype</option>=<replaceable>icmptype</replaceable> <option>--set-short</option>=<replaceable>description</replaceable></term>
-         <listitem>
-           <para>
-             Set short description to icmptype
-           </para>
-         </listitem>
-       </varlistentry>
-       <varlistentry>
-         <term><option>--permanent</option> <option>--icmptype</option>=<replaceable>icmptype</replaceable> <option>--get-short</option></term>
-         <listitem>
-           <para>
-             Print short description for icmptype
-           </para>
-         </listitem>
-       </varlistentry>
-
-       <varlistentry>
-         <term><option>--permanent</option> <option>--icmptype</option>=<replaceable>icmptype</replaceable> <option>--add-destination</option>=<replaceable>ipv</replaceable></term>
-         <listitem>
-           <para>
-             Enable destination for ipv in permanent icmptype. ipv is one of <literal>ipv4</literal> or <literal>ipv6</literal>.
-           </para>
-         </listitem>
-       </varlistentry>
-       <varlistentry>
-         <term><option>--permanent</option> <option>--icmptype</option>=<replaceable>icmptype</replaceable> <option>--remove-destination</option>=<replaceable>ipv</replaceable></term>
-         <listitem>
-           <para>
-             Disable destination for ipv in permanent icmptype. ipv is one of <literal>ipv4</literal> or <literal>ipv6</literal>.
-           </para>
-         </listitem>
-       </varlistentry>
-       <varlistentry>
-         <term><option>--permanent</option> <option>--icmptype</option>=<replaceable>icmptype</replaceable> <option>--query-destination</option>=<replaceable>ipv</replaceable></term>
-         <listitem>
-           <para>
-             Return whether destination for ipv is enabled in permanent icmptype. ipv is one of <literal>ipv4</literal> or <literal>ipv6</literal>.
-           </para>
-         </listitem>
-       </varlistentry>
-       <varlistentry>
-         <term><option>--permanent</option> <option>--icmptype</option>=<replaceable>icmptype</replaceable> <option>--get-destinations</option></term>
-         <listitem>
-           <para>
-              List destinations in permanent icmptype.
-           </para>
-         </listitem>
-       </varlistentry>
-      </variablelist>
-    </refsect2>
-
-    <refsect2 id="direct_options">
-      <title>Direct Options</title>
-      <para>
-	The direct options give a more direct access to the firewall. These options require user to know basic iptables concepts, i.e. <literal>table</literal> (filter/mangle/nat/...), <literal>chain</literal> (INPUT/OUTPUT/FORWARD/...), <literal>commands</literal> (-A/-D/-I/...), <literal>parameters</literal> (-p/-s/-d/-j/...) and <literal>targets</literal> (ACCEPT/DROP/REJECT/...).
-      </para>
-      <para>
-	Direct options should be used only as a last resort when it's not possible to use for example <option>--add-service</option>=<replaceable>service</replaceable> or <option>--add-rich-rule</option>='<replaceable>rule</replaceable>'.
-      </para>
-      <para>
-	The first argument of each option has to be <literal>ipv4</literal> or <literal>ipv6</literal> or <literal>eb</literal>. With <literal>ipv4</literal> it will be for IPv4 (<citerefentry><refentrytitle>iptables</refentrytitle><manvolnum>8</manvolnum></citerefentry>), with <literal>ipv6</literal> for IPv6 (<citerefentry><refentrytitle>ip6tables</refentrytitle><manvolnum>8</manvolnum></citerefentry>) and with <literal>eb</literal> for ethernet bridges (<citerefentry><refentrytitle>ebtables</refentrytitle><manvolnum>8</manvolnum></citerefentry>).
-      </para>
-      <variablelist>
-
-	<!-- direct chain -->
-
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <option>--direct</option> <option>--get-all-chains</option></term>
-	  <listitem>
-	    <para>
-	      Get all chains added to all tables.
-	      This option concerns only chains previously added with <option>--direct --add-chain</option>.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <option>--direct</option> <option>--get-chains</option> { <literal>ipv4</literal> | <literal>ipv6</literal> | <literal>eb</literal> } <replaceable>table</replaceable></term>
-	  <listitem>
-	    <para>
-	      Get all chains added to table <replaceable>table</replaceable> as a space separated list.
-	      This option concerns only chains previously added with <option>--direct --add-chain</option>.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <option>--direct</option> <option>--add-chain</option> { <literal>ipv4</literal> | <literal>ipv6</literal> | <literal>eb</literal> } <replaceable>table</replaceable> <replaceable>chain</replaceable></term>
-	  <listitem>
-	    <para>
-	      Add a new chain with name <replaceable>chain</replaceable> to table <replaceable>table</replaceable>. Make sure there's no other chain with this name already.
-	    </para>
-	    <para>
-	      There already exist basic chains to use with direct options, for example <literal>INPUT_direct</literal> chain (see <literal>iptables-save | grep direct</literal> output for all of them).
-	      These chains are jumped into before chains for zones, i.e. every rule put into <literal>INPUT_direct</literal> will be checked before rules in zones.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <option>--direct</option> <option>--remove-chain</option> { <literal>ipv4</literal> | <literal>ipv6</literal> | <literal>eb</literal> } <replaceable>table</replaceable> <replaceable>chain</replaceable></term>
-	  <listitem>
-	    <para>
-	      Remove chain with name <replaceable>chain</replaceable> from table <replaceable>table</replaceable>.
-	      Only chains previously added with <option>--direct --add-chain</option> can be removed this way.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <option>--direct</option> <option>--query-chain</option> { <literal>ipv4</literal> | <literal>ipv6</literal> | <literal>eb</literal> } <replaceable>table</replaceable> <replaceable>chain</replaceable></term>
-	  <listitem>
-	    <para>
-	      Return whether a chain with name <replaceable>chain</replaceable> exists in table <replaceable>table</replaceable>. Returns 0 if true, 1 otherwise.
-	      This option concerns only chains previously added with <option>--direct --add-chain</option>.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<!-- direct rule -->
-
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <option>--direct</option> <option>--get-all-rules</option></term>
-	  <listitem>
-	    <para>
-	      Get all rules added to all chains in all tables as a newline separated list of the priority and arguments.
-	      This option concerns only rules previously added with <option>--direct --add-rule</option>.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <option>--direct</option> <option>--get-rules</option> { <literal>ipv4</literal> | <literal>ipv6</literal> | <literal>eb</literal> } <replaceable>table</replaceable> <replaceable>chain</replaceable></term>
-	  <listitem>
-	    <para>
-	      Get all rules added to chain <replaceable>chain</replaceable> in table <replaceable>table</replaceable> as a newline separated list of the priority and arguments.
-	      This option concerns only rules previously added with <option>--direct --add-rule</option>.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <option>--direct</option> <option>--add-rule</option> { <literal>ipv4</literal> | <literal>ipv6</literal> | <literal>eb</literal> } <replaceable>table</replaceable> <replaceable>chain</replaceable> <replaceable>priority</replaceable> <replaceable>args</replaceable></term>
-	  <listitem>
-	    <para>
-	      Add a rule with the arguments <replaceable>args</replaceable> to chain <replaceable>chain</replaceable> in table <replaceable>table</replaceable> with priority <replaceable>priority</replaceable>.
-	    </para>
-	    <para>
-	      The <replaceable>priority</replaceable> is used to order rules. Priority 0 means add rule on top of the chain, with a higher priority the rule will be added further down. Rules with the same priority are on the same level and the order of these rules is not fixed and may change. If you want to make sure that a rule will be added after another one, use a low priority for the first and a higher for the following.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <option>--direct</option> <option>--remove-rule</option> { <literal>ipv4</literal> | <literal>ipv6</literal> | <literal>eb</literal> } <replaceable>table</replaceable> <replaceable>chain</replaceable> <replaceable>priority</replaceable> <replaceable>args</replaceable></term>
-	  <listitem>
-	    <para>
-	      Remove a rule with <replaceable>priority</replaceable> and the arguments <replaceable>args</replaceable> from chain <replaceable>chain</replaceable> in table <replaceable>table</replaceable>.
-	      Only rules previously added with <option>--direct --add-rule</option> can be removed this way.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <option>--direct</option> <option>--remove-rules</option> { <literal>ipv4</literal> | <literal>ipv6</literal> | <literal>eb</literal> } <replaceable>table</replaceable> <replaceable>chain</replaceable></term>
-	  <listitem>
-	    <para>
-	      Remove all rules in the chain with name <replaceable>chain</replaceable> exists in table <replaceable>table</replaceable>.
-	      This option concerns only rules previously added with <option>--direct --add-rule</option> in this chain.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <option>--direct</option> <option>--query-rule</option> { <literal>ipv4</literal> | <literal>ipv6</literal> | <literal>eb</literal> } <replaceable>table</replaceable> <replaceable>chain</replaceable> <replaceable>priority</replaceable> <replaceable>args</replaceable></term>
-	  <listitem>
-	    <para>
-	      Return whether a rule with <replaceable>priority</replaceable> and the arguments <replaceable>args</replaceable> exists in chain <replaceable>chain</replaceable> in table <replaceable>table</replaceable>.
-	      Returns 0 if true, 1 otherwise. This option concerns only rules previously added with <option>--direct --add-rule</option>.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<!-- direct untracked passthrough -->
-
-	<varlistentry>
-	  <term><option>--direct</option> <option>--passthrough</option> { <literal>ipv4</literal> | <literal>ipv6</literal> | <literal>eb</literal> } <replaceable>args</replaceable></term>
-	  <listitem>
-	    <para>
-	      Pass a command through to the firewall. <replaceable>args</replaceable> can be all <command>iptables</command>, <command>ip6tables</command> and <command>ebtables</command> command line arguments. This command is untracked, which means that firewalld is not able to provide information about this command later on, also not a listing of the untracked passthoughs.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<!-- direct tracked passthrough -->
-
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <option>--direct</option> <option>--get-all-passthroughs</option></term>
-	  <listitem>
-	    <para>
-	      Get all passthrough rules as a newline separated list of the ipv value and arguments.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <option>--direct</option> <option>--get-passthroughs</option> { <literal>ipv4</literal> | <literal>ipv6</literal> | <literal>eb</literal> }</term>
-	  <listitem>
-	    <para>
-	      Get all passthrough rules for the ipv value as a newline separated list of the priority and arguments.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <option>--direct</option> <option>--add-passthrough</option> { <literal>ipv4</literal> | <literal>ipv6</literal> | <literal>eb</literal> } <replaceable>args</replaceable></term>
-	  <listitem>
-	    <para>
-	      Add a passthrough rule with the arguments <replaceable>args</replaceable> for the ipv value.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <option>--direct</option> <option>--remove-passthrough</option> { <literal>ipv4</literal> | <literal>ipv6</literal> | <literal>eb</literal> } <replaceable>args</replaceable></term>
-	  <listitem>
-	    <para>
-	      Remove a passthrough rule with the arguments <replaceable>args</replaceable> for the ipv value.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <option>--direct</option> <option>--query-passthrough</option> { <literal>ipv4</literal> | <literal>ipv6</literal> | <literal>eb</literal> } <replaceable>args</replaceable></term>
-	  <listitem>
-	    <para>
-	      Return whether a passthrough rule with the arguments <replaceable>args</replaceable> exists for the ipv value. Returns 0 if true, 1 otherwise.
-	    </para>
-	  </listitem>
-	</varlistentry>
-      </variablelist>
-    </refsect2>
-
-    <refsect2 id="lockdown_options">
-      <title>Lockdown Options</title>
-      <para>
-	Local applications or services are able to change the firewall configuration if they are running as root (example: libvirt) or are authenticated using PolicyKit. With this feature administrators can lock the firewall configuration so that only applications on lockdown whitelist are able to request firewall changes.
-      </para>
-      <para>
-	The lockdown access check limits D-Bus methods that are changing firewall rules. Query, list and get methods are not limited.
-      </para>
-      <para>
-	The lockdown feature is a very light version of user and application policies for firewalld and is turned off by default.
-      </para>
-      <variablelist>
-	<varlistentry>
-	  <term><option>--lockdown-on</option></term>
-	  <listitem>
-	    <para>
-	      Enable lockdown. Be careful - if firewall-cmd is not on lockdown whitelist when you enable lockdown you won't be able to disable it again with firewall-cmd, you would need to edit firewalld.conf.
-	    </para>
-	    <para>
-	      This is a runtime and permanent change.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><option>--lockdown-off</option></term>
-	  <listitem>
-	    <para>
-	      Disable lockdown.
-	    </para>
-	    <para>
-	      This is a runtime and permanent change.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><option>--query-lockdown</option></term>
-	  <listitem>
-	    <para>
-	      Query whether lockdown is enabled. Returns 0 if lockdown is enabled, 1 otherwise.
-	    </para>
-	  </listitem>
-	</varlistentry>
-      </variablelist>
-    </refsect2>
-
-    <refsect2 id="lockdown_whitelist_options">
-      <title>Lockdown Whitelist Options</title>
-      <para>
-	The lockdown whitelist can contain <replaceable>commands</replaceable>, <replaceable>contexts</replaceable>, <replaceable>users</replaceable> and <replaceable>user ids</replaceable>.
-      </para>
-      <para>
-	If a command entry on the whitelist ends with an asterisk '*', then all command lines starting with the command will match. If the '*' is not there the absolute command inclusive arguments must match.
-      </para>
-      <para>
-	Commands for user root and others is not always the same. Example: As root <command>/bin/firewall-cmd</command> is used, as a normal user <command>/usr/bin/firewall-cmd</command> is be used on Fedora. 
-      </para>
-      <para>
-	The context is the security (SELinux) context of a running application or service. To get the context of a running application use <command>ps -e --context</command>.
-      </para>
-      <para>
-	<emphasis role="bold">Warning:</emphasis> If the context is unconfined, then this will open access for more than the desired application. 
-      </para>
-      <para>
-	The lockdown whitelist entries are checked in the following order:
-	<simplelist columns="1">
-	  <member>1. <replaceable>context</replaceable></member>
-	  <member>2. <replaceable>uid</replaceable></member>
-	  <member>3. <replaceable>user</replaceable></member>
-	  <member>4. <replaceable>command</replaceable></member>
-	</simplelist>
-      </para>
-      <variablelist>
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <option>--list-lockdown-whitelist-commands</option></term>
-	  <listitem>
-	    <para>
-	      List all command lines that are on the whitelist.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <option>--add-lockdown-whitelist-command</option>=<replaceable>command</replaceable></term>
-	  <listitem>
-	    <para>
-	      Add the <replaceable>command</replaceable> to the whitelist.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <option>--remove-lockdown-whitelist-command</option>=<replaceable>command</replaceable></term>
-	  <listitem>
-	    <para>
-	      Remove the <replaceable>command</replaceable> from the whitelist.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <option>--query-lockdown-whitelist-command</option>=<replaceable>command</replaceable></term>
-	  <listitem>
-	    <para>
-	      Query whether the <replaceable>command</replaceable> is on the whitelist. Returns 0 if true, 1 otherwise.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <option>--list-lockdown-whitelist-contexts</option></term>
-	  <listitem>
-	    <para>
-	      List all contexts that are on the whitelist.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <option>--add-lockdown-whitelist-context</option>=<replaceable>context</replaceable></term>
-	  <listitem>
-	    <para>
-	      Add the context <replaceable>context</replaceable> to the whitelist.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <option>--remove-lockdown-whitelist-context</option>=<replaceable>context</replaceable></term>
-	  <listitem>
-	    <para>
-	      Remove the <replaceable>context</replaceable> from the whitelist.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <option>--query-lockdown-whitelist-context</option>=<replaceable>context</replaceable></term>
-	  <listitem>
-	    <para>
-	      Query whether the <replaceable>context</replaceable> is on the whitelist. Returns 0 if true, 1 otherwise.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <option>--list-lockdown-whitelist-uids</option></term>
-	  <listitem>
-	    <para>
-	      List all user ids that are on the whitelist.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <option>--add-lockdown-whitelist-uid</option>=<replaceable>uid</replaceable></term>
-	  <listitem>
-	    <para>
-	      Add the user id <replaceable>uid</replaceable> to the whitelist.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <option>--remove-lockdown-whitelist-uid</option>=<replaceable>uid</replaceable></term>
-	  <listitem>
-	    <para>
-	      Remove the user id <replaceable>uid</replaceable> from the whitelist.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <option>--query-lockdown-whitelist-uid</option>=<replaceable>uid</replaceable></term>
-	  <listitem>
-	    <para>
-	      Query whether the user id <replaceable>uid</replaceable> is on the whitelist. Returns 0 if true, 1 otherwise.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <option>--list-lockdown-whitelist-users</option></term>
-	  <listitem>
-	    <para>
-	      List all user names that are on the whitelist.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <option>--add-lockdown-whitelist-user</option>=<replaceable>user</replaceable></term>
-	  <listitem>
-	    <para>
-	      Add the user name <replaceable>user</replaceable> to the whitelist.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <option>--remove-lockdown-whitelist-user</option>=<replaceable>user</replaceable></term>
-	  <listitem>
-	    <para>
-	      Remove the user name <replaceable>user</replaceable> from the whitelist.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--permanent</option></optional> <option>--query-lockdown-whitelist-user</option>=<replaceable>user</replaceable></term>
-	  <listitem>
-	    <para>
-	      Query whether the user name <replaceable>user</replaceable> is on the whitelist. Returns 0 if true, 1 otherwise.
-	    </para>
-	  </listitem>
-	</varlistentry>
-      </variablelist>
-    </refsect2>
-  </refsect1>
-
-    <refsect2 id="panic_options">
-      <title>Panic Options</title>
-      <variablelist>
-	<varlistentry>
-	  <term><option>--panic-on</option></term>
-	  <listitem>
-	    <para>
-	      Enable panic mode. All incoming and outgoing packets are dropped, active connections will expire. Enable this only if there are serious problems with your network environment. For example if the machine is getting hacked in.
-	    </para>
-	    <para>
-	      This is a runtime only change.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><option>--panic-off</option></term>
-	  <listitem>
-	    <para>
-	      Disable panic mode. After disabling panic mode established connections might work again, if panic mode was enabled for a short period of time.
-	    </para>
-	    <para>
-	      This is a runtime only change.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><option>--query-panic</option></term>
-	  <listitem>
-	    <para>
-	      Returns 0 if panic mode is enabled, 1 otherwise.
-	    </para>
-	  </listitem>
-	</varlistentry>
-      </variablelist>
-    </refsect2>
-
-  <refsect1>
-    <title>Examples</title>
-      <para>
-	For more examples see <ulink url="http://fedoraproject.org/wiki/FirewallD"></ulink>
-      </para>
-
-    <refsect2>
-      <title>Example 1</title>
-      <para>
-	Enable http service in default zone. This is runtime only change, i.e. effective until restart.
-      </para>
-      <para>
-	<programlisting>
-firewall-cmd --add-service=http
-	</programlisting>
-      </para>
-    </refsect2>
-
-    <refsect2>
-      <title>Example 2</title>
-      <para>
-	Enable port 443/tcp immediately and permanently in default zone.
-	To make the change effective immediately and also after restart we need two commands.
-	The first command makes the change in runtime configuration, i.e. makes it effective immediately, until restart.
-	The second command makes the change in permanent configuration, i.e. makes it effective after restart.
-      </para>
-      <para>
-	<programlisting>
-firewall-cmd --add-port=443/tcp
-firewall-cmd --permanent --add-port=443/tcp
-	</programlisting>
-      </para>
-    </refsect2>
-  </refsect1>
-
-  <refsect1 id="exit_codes">
-    <title>Exit Codes</title>
-    <para>
-      On success 0 is returned.
-      On failure the output is red colored and exit code is either 2 in case of wrong command-line option usage or one of the following error codes in other cases:
-
-      <informaltable frame="all">
-	<tgroup cols="2" colsep="1" rowsep="1">
-	  <colspec align="left"/>
-	  <colspec align="right"/>
-	  <thead>
-	    <row>
-	      <entry>String</entry>
-	      <entry>Code</entry>
-	    </row>
-	  </thead>
-	  <tbody>
-	    &errorcodes;
-	  </tbody>
-	</tgroup>
-      </informaltable>
-    </para>
-  </refsect1>
-
-  &seealso;
-
-  &notes;
-
-</refentry>
diff --git a/doc/xml/firewall-cmd.xml.in b/doc/xml/firewall-cmd.xml.in
new file mode 100644
index 0000000..d3070a0
--- /dev/null
+++ b/doc/xml/firewall-cmd.xml.in
@@ -0,0 +1,1857 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN" "http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd"
+[
+<!ENTITY authors SYSTEM "authors.xml">
+<!ENTITY seealso SYSTEM "seealso.xml">
+<!ENTITY notes SYSTEM "notes.xml">
+<!ENTITY errorcodes SYSTEM "errorcodes.xml">
+]>
+
+<!--
+  This file is part of firewalld.
+
+  Copyright (C) 2010-2014 Red Hat, Inc.
+  Authors:
+  Thomas Woerner <twoerner@redhat.com>
+
+  This program is free software; you can redistribute it and/or modify
+  it under the terms of the GNU General Public License as published by
+  the Free Software Foundation; either version 2 of the License, or
+  (at your option) any later version.
+
+  This program is distributed in the hope that it will be useful,
+  but WITHOUT ANY WARRANTY; without even the implied warranty of
+  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+  GNU General Public License for more details.
+
+  You should have received a copy of the GNU General Public License
+  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+-->
+
+<refentry id="firewall-cmd">
+
+  <refentryinfo>
+    <title>firewall-cmd</title>
+    <productname>firewalld</productname>
+    &authors;
+  </refentryinfo>
+
+  <refmeta>
+    <refentrytitle>firewall-cmd</refentrytitle>
+    <manvolnum>1</manvolnum>
+  </refmeta>
+
+  <refnamediv>
+    <refname>firewall-cmd</refname>
+    <refpurpose>firewalld command line client</refpurpose>
+  </refnamediv>
+
+  <refsynopsisdiv>
+    <cmdsynopsis>
+      <command>firewall-cmd</command> <arg choice="opt" rep="repeat">OPTIONS</arg>
+    </cmdsynopsis>
+  </refsynopsisdiv>
+
+  <refsect1 id="description">
+    <title>Description</title>
+		
+    <para>
+      firewall-cmd is the command line client of the firewalld daemon. It provides interface to manage runtime and permanent configuration.
+    </para>
+
+    <para>
+      The runtime configuration in firewalld is separated from the permanent configuration. This means that things can get changed in the runtime or permanent configuration.
+    </para>
+  </refsect1>
+
+  <refsect1 id="options">
+    <title>Options</title>
+    <para>
+      The following options are supported:
+    </para>
+
+    <refsect2 id="general_options">
+      <title>General Options</title>
+      <variablelist>
+	<varlistentry>
+          <term><option>-h</option></term>
+          <term><option>--help</option></term>
+          <listitem>
+	    <para>
+	      Prints a short help text and exits.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+          <term><option>-V</option></term>
+          <term><option>--version</option></term>
+          <listitem>
+	    <para>
+	      Print the version string of firewalld. This option is not combinable with other options.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+          <term><option>-q</option></term>
+          <term><option>--quiet</option></term>
+          <listitem>
+	    <para>
+	      Do not print status messages.
+	    </para>
+	  </listitem>
+	</varlistentry>
+      </variablelist>
+    </refsect2>
+
+    <refsect2 id="status_options">
+      <title>Status Options</title>
+      <variablelist>
+	<varlistentry>
+	  <term><option>--state</option></term>
+	  <listitem>
+	    <para>
+	      Check whether the firewalld daemon is active (i.e. running). Returns an exit code 0 if it is active, <replaceable>NOT_RUNNING</replaceable> otherwise (see <xref linkend="exit_codes"/>). This will also print the state to <replaceable>STDOUT</replaceable>.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><option>--reload</option></term>
+	  <listitem>
+	    <para>
+	      Reload firewall rules and keep state information.
+	      Current permanent configuration will become new runtime configuration,
+	      i.e. all runtime only changes done until reload are lost with reload
+	      if they have not been also in permanent configuration.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><option>--complete-reload</option></term>
+	  <listitem>
+	    <para>
+	      Reload firewall completely, even netfilter kernel modules. This will most likely terminate active connections, because state information is lost. This option should only be used in case of severe firewall problems. For example if there are state information problems that no connection can be established with correct firewall rules.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><option>--runtime-to-permanent</option></term>
+	  <listitem>
+	    <para>
+	      Save active runtime configuration and overwrite permanent configuration with it.
+	      The way this is supposed to work is that when configuring firewalld you do runtime changes only and
+	      once you're happy with the configuration and you tested that it works the way you want, you save
+	      the configuration to disk.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><option>--get-log-denied</option></term>
+	  <listitem>
+	    <para>
+	      Print the log denied setting.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><option>--set-log-denied</option>=<replaceable>value</replaceable></term>
+	  <listitem>
+	    <para>
+	      Add logging rules right before reject and drop rules in the INPUT, FORWARD and OUTPUT chains for the default rules and also final reject and drop rules in zones for the configured link-layer packet type. The possible values are: <replaceable>all</replaceable>, <replaceable>unicast</replaceable>, <replaceable>broadcast</replaceable>, <replaceable>multicast</replaceable> and <replaceable>off</replaceable>. The default setting is <replaceable>off</replaceable>, which disables the logging.
+	    </para>
+	    <para>
+	      This is a runtime and permanent change and will also reload the firewall to be able to add the logging rules.
+	    </para>
+	  </listitem>
+	</varlistentry>
+      </variablelist>
+    </refsect2>
+
+    <refsect2 id="permanent_options">
+      <title>Permanent Options</title>
+      <variablelist>
+
+	<varlistentry>
+          <term><option>--permanent</option></term>
+          <listitem>
+	    <para>
+	      The permanent option <option>--permanent</option> can be used to set options permanently. These changes are not effective immediately, only after service restart/reload or system reboot. Without the <option>--permanent</option> option, a change will only be part of the runtime configuration.
+	    </para>
+	    <para>If you want to make a change in runtime and permanent configuration, use the same call with and without the <option>--permanent</option> option.
+	    </para>
+	    <para>
+	      The <option>--permanent</option> option can be optionally added to all options further down where it is supported.
+	    </para>
+	  </listitem>
+	</varlistentry>
+      </variablelist>
+    </refsect2>
+
+    <refsect2 id="zone_options">
+      <title>Zone Options</title>
+      <variablelist>
+	<varlistentry>
+	  <term><option>--get-default-zone</option></term>
+	  <listitem>
+	    <para>
+	      Print default zone for connections and interfaces.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><option>--set-default-zone</option>=<replaceable>zone</replaceable></term>
+	  <listitem>
+	    <para>
+	      Set default zone for connections and interfaces where no zone has been selected. Setting the default zone changes the zone for the connections or interfaces, that are using the default zone.
+	    </para>
+	    <para>
+	      This is a runtime and permanent change.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><option>--get-active-zones</option></term>
+	  <listitem>
+	    <para>
+	      Print currently active zones altogether with interfaces and sources used in these zones. Active zones are zones, that have a binding to an interface or source. The output format is:
+	      <programlisting>
+<replaceable>zone1</replaceable>
+  interfaces: <replaceable>interface1</replaceable> <replaceable>interface2</replaceable> ..
+  sources: <replaceable>source1</replaceable> ..
+<replaceable>zone2</replaceable>
+  interfaces: <replaceable>interface3</replaceable> ..
+<replaceable>zone3</replaceable>
+  sources: <replaceable>source2</replaceable> ..
+	      </programlisting>
+	      If there are no interfaces or sources bound to the zone, the corresponding line will be omitted.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <option>--get-zones</option></term>
+	  <listitem>
+	    <para>
+	      Print predefined zones as a space separated list.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <option>--get-services</option></term>
+	  <listitem>
+	    <para>
+	      Print predefined services as a space separated list.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <option>--get-icmptypes</option></term>
+	  <listitem>
+	    <para>
+	      Print predefined icmptypes as a space separated list.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <option>--get-zone-of-interface</option>=<replaceable>interface</replaceable></term>
+	  <listitem>
+	    <para>
+	      Print the name of the zone the <replaceable>interface</replaceable> is bound to or <emphasis>no zone</emphasis>.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <option>--get-zone-of-source</option>=<replaceable>source</replaceable><optional>/<replaceable>mask</replaceable></optional></term>
+	  <listitem>
+	    <para>
+	      Print the name of the zone the <replaceable>source</replaceable><optional>/<replaceable>mask</replaceable></optional> is bound to or <emphasis>no zone</emphasis>.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <option>--info-zone=<replaceable>zone</replaceable></option></term>
+	  <listitem>
+	    <para>
+	      Print information about the zone <replaceable>zone</replaceable>. The output format is:
+	      <programlisting>
+<replaceable>zone</replaceable>
+  interfaces: <replaceable>interface1</replaceable> ..
+  sources: <replaceable>source1</replaceable> ..
+  services: <replaceable>service1</replaceable> ..
+  ports: <replaceable>port1</replaceable> ..
+  protocols: <replaceable>protocol1</replaceable> ..
+  forward-ports:
+        <replaceable>forward-port1</replaceable>
+        ..
+  icmp-blocks: <replaceable>icmp-type1</replaceable> ..
+  rich rules:
+        <replaceable>rich-rule1</replaceable>
+        ..
+              </programlisting>
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <option>--list-all-zones</option></term>
+	  <listitem>
+	    <para>
+	      List everything added for or enabled in all zones. The output format is:
+	      <programlisting>
+<replaceable>zone1</replaceable>
+  interfaces: <replaceable>interface1</replaceable> ..
+  sources: <replaceable>source1</replaceable> ..
+  services: <replaceable>service1</replaceable> ..
+  ports: <replaceable>port1</replaceable> ..
+  protocols: <replaceable>protocol1</replaceable> ..
+  forward-ports:
+        <replaceable>forward-port1</replaceable>
+        ..
+  icmp-blocks: <replaceable>icmp-type1</replaceable> ..
+  rich rules:
+        <replaceable>rich-rule1</replaceable>
+        ..
+..
+              </programlisting>
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+          <term><option>--permanent</option> <option>--new-zone</option>=<replaceable>zone</replaceable></term>
+          <listitem>
+            <para>
+              Add a new permanent zone.
+            </para>
+          </listitem>
+	</varlistentry>
+
+	<varlistentry>
+          <term><option>--permanent</option> <option>--delete-zone</option>=<replaceable>zone</replaceable></term>
+          <listitem>
+            <para>
+              Delete an existing permanent zone.
+            </para>
+          </listitem>
+	</varlistentry>
+
+	<varlistentry>
+         <term><option>--permanent</option> <option>--zone</option>=<replaceable>zone</replaceable> <option>--set-description</option>=<replaceable>description</replaceable></term>
+         <listitem>
+           <para>
+             Set new description to zone
+           </para>
+         </listitem>
+	</varlistentry>
+	<varlistentry>
+         <term><option>--permanent</option> <option>--zone</option>=<replaceable>zone</replaceable> <option>--get-description</option></term>
+         <listitem>
+           <para>
+             Print description for zone
+           </para>
+         </listitem>
+	</varlistentry>
+	<varlistentry>
+         <term><option>--permanent</option> <option>--zone</option>=<replaceable>zone</replaceable> <option>--set-short</option>=<replaceable>description</replaceable></term>
+         <listitem>
+           <para>
+             Set short description to zone
+           </para>
+         </listitem>
+	</varlistentry>
+	<varlistentry>
+         <term><option>--permanent</option> <option>--zone</option>=<replaceable>zone</replaceable> <option>--get-short</option></term>
+         <listitem>
+           <para>
+             Print short description for zone
+           </para>
+         </listitem>
+	</varlistentry>
+	<varlistentry>
+          <term><option>--permanent</option> <optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--get-target</option></term>
+          <listitem>
+            <para>
+              Get the target of a permanent zone.
+            </para>
+          </listitem>
+	</varlistentry>
+
+	<varlistentry>
+          <term><option>--permanent</option> <optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--set-target</option>=<replaceable>target</replaceable></term>
+          <listitem>
+            <para>
+              Set the target of a permanent zone. <replaceable>target</replaceable> is one of: <literal>default</literal>, <literal>ACCEPT</literal>, <literal>DROP</literal>, <literal>REJECT</literal>
+            </para>
+          </listitem>
+	</varlistentry>
+      </variablelist>
+    </refsect2>
+
+    <refsect2 id="options_to_adapt_and_query_zones">
+      <title>Options to Adapt and Query Zones</title>
+      <para>
+	Options in this section affect only one particular zone. If used with <option>--zone</option>=<replaceable>zone</replaceable> option, they affect the zone <replaceable>zone</replaceable>. If the option is omitted, they affect default zone (see <option>--get-default-zone</option>).
+      </para>
+      <variablelist>
+
+	<!-- list-all -->
+
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--list-all</option></term>
+	  <listitem>
+	    <para>
+	      List everything added for or enabled in <replaceable>zone</replaceable>. If zone is omitted, default zone will be used.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<!-- list/add/remove/query service -->
+
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--list-services</option></term>
+	  <listitem>
+	    <para>
+	      List services added for <replaceable>zone</replaceable> as a space separated list. If zone is omitted, default zone will be used.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--add-service</option>=<replaceable>service</replaceable> <optional><option>--timeout</option>=<replaceable>timeval</replaceable></optional></term>
+	  <listitem>
+	    <para>
+	      Add a service for <replaceable>zone</replaceable>. If zone is omitted, default zone will be used. This option can be specified multiple times. If a timeout is supplied, the rule will be active for the specified amount of time and will be removed automatically afterwards.
+	      <replaceable>timeval</replaceable> is either a number (of seconds) or number followed by one of characters <literal>s</literal> (seconds), <literal>m</literal> (minutes), <literal>h</literal> (hours), for example <literal>20m</literal> or <literal>1h</literal>.
+	    </para>
+	    <para>
+	      The service is one of the firewalld provided services. To get a list of the supported services, use <command>firewall-cmd --get-services</command>.
+	    </para>
+	    <para>
+	      The <option>--timeout</option> option is not combinable with the <option>--permanent</option> option.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--remove-service</option>=<replaceable>service</replaceable></term>
+	  <listitem>
+	    <para>
+	      Remove a service from <replaceable>zone</replaceable>. This option can be specified multiple times. If zone is omitted, default zone will be used.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--query-service</option>=<replaceable>service</replaceable></term>
+	  <listitem>
+	    <para>
+	      Return whether <replaceable>service</replaceable> has been added for <replaceable>zone</replaceable>. If zone is omitted, default zone will be used. Returns 0 if true, 1 otherwise.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<!-- list/add/remove/query port -->
+
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--list-ports</option></term>
+	  <listitem>
+	    <para>
+	      List ports added for <replaceable>zone</replaceable> as a space separated list. A port is of the form <replaceable>portid</replaceable><optional>-<replaceable>portid</replaceable></optional>/<replaceable>protocol</replaceable>, it can be either a port and protocol pair or a port range with a protocol. If zone is omitted, default zone will be used.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--add-port</option>=<replaceable>portid</replaceable><optional>-<replaceable>portid</replaceable></optional>/<replaceable>protocol</replaceable> <optional><option>--timeout</option>=<replaceable>timeval</replaceable></optional></term>
+	  <listitem>
+	    <para>
+	      Add the port for <replaceable>zone</replaceable>. If zone is omitted, default zone will be used. This option can be specified multiple times. If a timeout is supplied, the rule will be active for the specified amount of time and will be removed automatically afterwards.
+	      <replaceable>timeval</replaceable> is either a number (of seconds) or number followed by one of characters <literal>s</literal> (seconds), <literal>m</literal> (minutes), <literal>h</literal> (hours), for example <literal>20m</literal> or <literal>1h</literal>.
+	    </para>
+	    <para>
+	      The port can either be a single port number or a port range <replaceable>portid</replaceable>-<replaceable>portid</replaceable>. The protocol can either be <literal>tcp</literal> or <literal>udp</literal>.
+	    </para>
+	    <para>
+	      The <option>--timeout</option> option is not combinable with the <option>--permanent</option> option.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--remove-port</option>=<replaceable>portid</replaceable><optional>-<replaceable>portid</replaceable></optional>/<replaceable>protocol</replaceable></term>
+	  <listitem>
+	    <para>
+	      Remove the port from <replaceable>zone</replaceable>. If zone is omitted, default zone will be used. This option can be specified multiple times.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--query-port</option>=<replaceable>portid</replaceable><optional>-<replaceable>portid</replaceable></optional>/<replaceable>protocol</replaceable></term>
+	  <listitem>
+	    <para>
+	      Return whether the port has been added for <replaceable>zone</replaceable>. If zone is omitted, default zone will be used. Returns 0 if true, 1 otherwise.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<!-- list/add/remove/query protocol -->
+
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--list-protocols</option></term>
+	  <listitem>
+	    <para>
+	      List protocols added for <replaceable>zone</replaceable> as a space separated list. If zone is omitted, default zone will be used.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--add-protocol</option>=<replaceable>protocol</replaceable> <optional><option>--timeout</option>=<replaceable>timeval</replaceable></optional></term>
+	  <listitem>
+	    <para>
+	      Add the protocol for <replaceable>zone</replaceable>. If zone is omitted, default zone will be used. This option can be specified multiple times. If a timeout is supplied, the rule will be active for the specified amount of time and will be removed automatically afterwards.
+	      <replaceable>timeval</replaceable> is either a number (of seconds) or number followed by one of characters <literal>s</literal> (seconds), <literal>m</literal> (minutes), <literal>h</literal> (hours), for example <literal>20m</literal> or <literal>1h</literal>.
+	    </para>
+	    <para>
+	      The protocol can be any protocol supported by the system. Please have a look at <filename>/etc/protocols</filename> for supported protocols.
+	    </para>
+	    <para>
+	      The <option>--timeout</option> option is not combinable with the <option>--permanent</option> option.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--remove-protcol</option>=<replaceable>protocol</replaceable></term>
+	  <listitem>
+	    <para>
+	      Remove the protocol from <replaceable>zone</replaceable>. If zone is omitted, default zone will be used. This option can be specified multiple times.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--query-protocol</option>=<replaceable>protocol</replaceable></term>
+	  <listitem>
+	    <para>
+	      Return whether the protocol has been added for <replaceable>zone</replaceable>. If zone is omitted, default zone will be used. Returns 0 if true, 1 otherwise.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<!-- list/add/remove/query icmp-block -->
+
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--list-icmp-blocks</option></term>
+	  <listitem>
+	    <para>
+	      List Internet Control Message Protocol (ICMP) type blocks added for <replaceable>zone</replaceable> as a space separated list. If zone is omitted, default zone will be used.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--add-icmp-block</option>=<replaceable>icmptype</replaceable> <optional><option>--timeout</option>=<replaceable>timeval</replaceable></optional></term>
+	  <listitem>
+	    <para>
+	      Add an ICMP block for <replaceable>icmptype</replaceable> for <replaceable>zone</replaceable>. If zone is omitted, default zone will be used. This option can be specified multiple times. If a timeout is supplied, the rule will be active for the specified amount of time and will be removed automatically afterwards.
+	      <replaceable>timeval</replaceable> is either a number (of seconds) or number followed by one of characters <literal>s</literal> (seconds), <literal>m</literal> (minutes), <literal>h</literal> (hours), for example <literal>20m</literal> or <literal>1h</literal>.
+	    </para>
+	    <para>
+	      The <replaceable>icmptype</replaceable> is the one of the icmp types firewalld supports. To get a listing of supported icmp types: <command>firewall-cmd --get-icmptypes</command>
+	    </para>
+	    <para>
+	      The <option>--timeout</option> option is not combinable with the <option>--permanent</option> option.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--remove-icmp-block</option>=<replaceable>icmptype</replaceable></term>
+	  <listitem>
+	    <para>
+	      Remove the ICMP block for <replaceable>icmptype</replaceable> from <replaceable>zone</replaceable>. If zone is omitted, default zone will be used. This option can be specified multiple times.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--query-icmp-block</option>=<replaceable>icmptype</replaceable></term>
+	  <listitem>
+	    <para>
+	      Return whether an ICMP block for <replaceable>icmptype</replaceable> has been added for <replaceable>zone</replaceable>. If zone is omitted, default zone will be used. Returns 0 if true, 1 otherwise.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<!-- list/add/remove/query forward-port -->
+
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--list-forward-ports</option></term>
+	  <listitem>
+	    <para>
+	      List <emphasis>IPv4</emphasis> forward ports added for <replaceable>zone</replaceable> as a space separated list. If zone is omitted, default zone will be used.
+	    </para>
+	    <para>
+	      For <emphasis>IPv6</emphasis> forward ports, please use the rich language.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--add-forward-port</option>=port=<replaceable>portid</replaceable><optional>-<replaceable>portid</replaceable></optional>:proto=<replaceable>protocol</replaceable><optional>:toport=<replaceable>portid</replaceable><optional>-<replaceable>portid</replaceable></optional></optional><optional>:toaddr=<replaceable>address</replaceable><optional>/<replaceable>mask</replaceable></optional></optional> <optional><option>--timeout</option>=<replaceable>timeval</replaceable></optional></term>
+	  <listitem>
+	    <para>
+	      Add the <emphasis>IPv4</emphasis> forward port for <replaceable>zone</replaceable>. If zone is omitted, default zone will be used. This option can be specified multiple times. If a timeout is supplied, the rule will be active for the specified amount of time and will be removed automatically afterwards.
+	      <replaceable>timeval</replaceable> is either a number (of seconds) or number followed by one of characters <literal>s</literal> (seconds), <literal>m</literal> (minutes), <literal>h</literal> (hours), for example <literal>20m</literal> or <literal>1h</literal>.
+	    </para>
+	    <para>
+	      The port can either be a single port number <replaceable>portid</replaceable> or a port range <replaceable>portid</replaceable>-<replaceable>portid</replaceable>. The protocol can either be <literal>tcp</literal> or <literal>udp</literal>. The destination address is a simple IP address.
+	    </para>
+	    <para>
+	      The <option>--timeout</option> option is not combinable with the <option>--permanent</option> option.
+	    </para>
+	    <para>
+	      For <emphasis>IPv6</emphasis> forward ports, please use the rich language.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--remove-forward-port</option>=port=<replaceable>portid</replaceable><optional>-<replaceable>portid</replaceable></optional>:proto=<replaceable>protocol</replaceable><optional>:toport=<replaceable>portid</replaceable><optional>-<replaceable>portid</replaceable></optional></optional><optional>:toaddr=<replaceable>address</replaceable><optional>/<replaceable>mask</replaceable></optional></optional></term>
+	  <listitem>
+	    <para>
+	      Remove the <emphasis>IPv4</emphasis> forward port from <replaceable>zone</replaceable>. If zone is omitted, default zone will be used. This option can be specified multiple times.
+	    </para>
+	    <para>
+	      For <emphasis>IPv6</emphasis> forward ports, please use the rich language.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--query-forward-port</option>=port=<replaceable>portid</replaceable><optional>-<replaceable>portid</replaceable></optional>:proto=<replaceable>protocol</replaceable><optional>:toport=<replaceable>portid</replaceable><optional>-<replaceable>portid</replaceable></optional></optional><optional>:toaddr=<replaceable>address</replaceable><optional>/<replaceable>mask</replaceable></optional></optional></term>
+	  <listitem>
+	    <para>
+	      Return whether the <emphasis>IPv4</emphasis> forward port has been added for <replaceable>zone</replaceable>. If zone is omitted, default zone will be used. Returns 0 if true, 1 otherwise.
+	    </para>
+	    <para>
+	      For <emphasis>IPv6</emphasis> forward ports, please use the rich language.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<!-- add/remove/query masquerade -->
+
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--add-masquerade</option> <optional><option>--timeout</option>=<replaceable>timeval</replaceable></optional></term>
+	  <listitem>
+	    <para>
+	      Enable <emphasis>IPv4</emphasis> masquerade for <replaceable>zone</replaceable>. If zone is omitted, default zone will be used. If a timeout is supplied, masquerading will be active for the specified amount of time.
+	      <replaceable>timeval</replaceable> is either a number (of seconds) or number followed by one of characters <literal>s</literal> (seconds), <literal>m</literal> (minutes), <literal>h</literal> (hours), for example <literal>20m</literal> or <literal>1h</literal>.
+	      Masquerading is useful if the machine is a router and machines connected over an interface in another zone should be able to use the first connection.
+	    </para>
+	    <para>
+	      The <option>--timeout</option> option is not combinable with the <option>--permanent</option> option.
+	    </para>
+	    <para>
+	      For <emphasis>IPv6</emphasis> masquerading, please use the rich language.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--remove-masquerade</option></term>
+	  <listitem>
+	    <para>
+	      Disable <emphasis>IPv4</emphasis> masquerade for <replaceable>zone</replaceable>. If zone is omitted, default zone will be used. If the masquerading was enabled with a timeout, it will be disabled also.
+	    </para>
+	    <para>
+	      For <emphasis>IPv6</emphasis> masquerading, please use the rich language.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--query-masquerade</option></term>
+	  <listitem>
+	    <para>
+	      Return whether <emphasis>IPv4</emphasis> masquerading has been enabled for <replaceable>zone</replaceable>. If zone is omitted, default zone will be used. Returns 0 if true, 1 otherwise.
+	    </para>
+	    <para>
+	      For <emphasis>IPv6</emphasis> masquerading, please use the rich language.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<!-- list/add/remove/query rich rule -->
+
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--list-rich-rules</option></term>
+	  <listitem>
+	    <para>
+	      List rich language rules added for <replaceable>zone</replaceable> as a newline separated list. If zone is omitted, default zone will be used.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--add-rich-rule</option>='<replaceable>rule</replaceable>' <optional><option>--timeout</option>=<replaceable>timeval</replaceable></optional></term>
+	  <listitem>
+	    <para>
+	      Add rich language rule '<replaceable>rule</replaceable>' for <replaceable>zone</replaceable>. This option can be specified multiple times. If zone is omitted, default zone will be used. If a timeout is supplied, the <replaceable>rule</replaceable> will be active for the specified amount of time and will be removed automatically afterwards.
+	      <replaceable>timeval</replaceable> is either a number (of seconds) or number followed by one of characters <literal>s</literal> (seconds), <literal>m</literal> (minutes), <literal>h</literal> (hours), for example <literal>20m</literal> or <literal>1h</literal>.
+	    </para>
+	    <para>
+	      For the rich language rule syntax, please have a look at <citerefentry><refentrytitle>firewalld.richlanguage</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
+	    </para>
+	    <para>
+	      The <option>--timeout</option> option is not combinable with the <option>--permanent</option> option.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--remove-rich-rule</option>='<replaceable>rule</replaceable>'</term>
+	  <listitem>
+	    <para>
+	      Remove rich language rule '<replaceable>rule</replaceable>' from <replaceable>zone</replaceable>. This option can be specified multiple times. If zone is omitted, default zone will be used.
+	    </para>
+	    <para>
+	      For the rich language rule syntax, please have a look at <citerefentry><refentrytitle>firewalld.richlanguage</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--query-rich-rule</option>='<replaceable>rule</replaceable>'</term>
+	  <listitem>
+	    <para>
+	      Return whether a rich language rule '<replaceable>rule</replaceable>' has been added for <replaceable>zone</replaceable>. If zone is omitted, default zone will be used. Returns 0 if true, 1 otherwise.
+	    </para>
+	    <para>
+	      For the rich language rule syntax, please have a look at <citerefentry><refentrytitle>firewalld.richlanguage</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+      </variablelist>
+    </refsect2>
+
+    <refsect2 id="options_to_handle_bindings_of_interfaces">
+      <title>Options to Handle Bindings of Interfaces</title>
+      <para>
+	Binding an interface to a zone means that this zone settings are used to restrict traffic via the interface.
+      </para>
+      <para>
+	Options in this section affect only one particular zone. If used with <option>--zone</option>=<replaceable>zone</replaceable> option, they affect the zone <replaceable>zone</replaceable>. If the option is omitted, they affect default zone (see <option>--get-default-zone</option>).
+      </para>
+      <para>
+	For a list of predefined zones use <command>firewall-cmd --get-zones</command>.
+      </para>
+      <para>
+	An interface name is a string up to 16 characters long, that may not contain <option>' '</option>, <option>'/'</option>, <option>'!'</option> and <option>'*'</option>.
+      </para>
+      <variablelist>
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--list-interfaces</option></term>
+	  <listitem>
+	    <para>
+	      List interfaces that are bound to zone <replaceable>zone</replaceable> as a space separated list. If zone is omitted, default zone will be used.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--add-interface</option>=<replaceable>interface</replaceable></term>
+	  <listitem>
+	    <para>
+	      Bind interface <replaceable>interface</replaceable> to zone <replaceable>zone</replaceable>. If zone is omitted, default zone will be used.
+	    </para>
+	    <para>
+	      As a end user you don't need this in most cases, because NetworkManager (or legacy network service) adds interfaces into zones automatically (according to <option>ZONE=</option> option from ifcfg-<replaceable>interface</replaceable> file) if <replaceable>NM_CONTROLLED=no</replaceable> is not set.
+	      You should do it only if there's no @SYSCONFIGDIR@/network-scripts/ifcfg-<replaceable>interface</replaceable> file.
+	      If there is such file and you add interface to zone with this <option>--add-interface</option> option, make sure the zone is the same in both cases, otherwise the behaviour would be undefined.
+	      Please also have a look at the <citerefentry><refentrytitle>firewalld</refentrytitle><manvolnum>1</manvolnum></citerefentry> man page in the <replaceable>Concepts</replaceable> section.
+	      For permanent association of interface with a zone, see also 'How to set or change a zone for a connection?' in <citerefentry><refentrytitle>firewalld.zones</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--change-interface</option>=<replaceable>interface</replaceable></term>
+	  <listitem>
+	    <para>
+	      Change zone the interface <replaceable>interface</replaceable> is bound to to zone <replaceable>zone</replaceable>.
+	      It's basically <option>--remove-interface</option> followed by <option>--add-interface</option>.
+	      If the interface has not been bound to a zone before, it behaves like <option>--add-interface</option>.
+	      If zone is omitted, default zone will be used.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--query-interface</option>=<replaceable>interface</replaceable></term>
+	  <listitem>
+	    <para>
+	      Query whether interface <replaceable>interface</replaceable> is bound to zone <replaceable>zone</replaceable>. Returns 0 if true, 1 otherwise.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <option>--remove-interface</option>=<replaceable>interface</replaceable></term>
+	  <listitem>
+	    <para>
+	      Remove binding of interface <replaceable>interface</replaceable> from zone it was previously added to.
+	    </para>
+	  </listitem>
+	</varlistentry>
+      </variablelist>
+    </refsect2>
+
+    <refsect2 id="options_to_handle_bindings_of_sources">
+      <title>Options to Handle Bindings of Sources</title>
+      <para>
+	Binding a source to a zone means that this zone settings will be used to restrict traffic from this source.
+      </para>
+      <para>
+	A source address or address range is either an IP address or a network IP address with a mask for IPv4 or IPv6 or a MAC address (no mask). For IPv4, the mask can be a network mask or a plain number. For IPv6 the mask is a plain number. The use of host names is not supported.
+      </para>
+      <para>
+	Options in this section affect only one particular zone. If used with <option>--zone</option>=<replaceable>zone</replaceable> option, they affect the zone <replaceable>zone</replaceable>. If the option is omitted, they affect default zone (see <option>--get-default-zone</option>).
+      </para>
+      <para>
+	For a list of predefined zones use <command>firewall-cmd <optional><option>--permanent</option></optional> --get-zones</command>.
+      </para>
+      <variablelist>
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--list-sources</option></term>
+	  <listitem>
+	    <para>
+	      List sources that are bound to zone <replaceable>zone</replaceable> as a space separated list. If zone is omitted, default zone will be used.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--add-source</option>=<replaceable>source</replaceable><optional>/<replaceable>mask</replaceable></optional></term>
+	  <listitem>
+	    <para>
+	      Bind source <replaceable>source</replaceable><optional>/<replaceable>mask</replaceable></optional> to zone <replaceable>zone</replaceable>. If zone is omitted, default zone will be used.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--change-source</option>=<replaceable>source</replaceable><optional>/<replaceable>mask</replaceable></optional></term>
+	  <listitem>
+	    <para>
+	      Change zone the source <replaceable>source</replaceable><optional>/<replaceable>mask</replaceable></optional> is bound to to zone <replaceable>zone</replaceable>.
+	      It's basically <option>--remove-source</option> followed by <option>--add-source</option>.
+	      If the source has not been bound to a zone before, it behaves like <option>--add-source</option>.
+	      If zone is omitted, default zone will be used.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--query-source</option>=<replaceable>source</replaceable><optional>/<replaceable>mask</replaceable></optional></term>
+	  <listitem>
+	    <para>
+	      Query whether the source <replaceable>source</replaceable><optional>/<replaceable>mask</replaceable></optional> is bound to the zone <replaceable>zone</replaceable>. Returns 0 if true, 1 otherwise.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <option>--remove-source</option>=<replaceable>source</replaceable><optional>/<replaceable>mask</replaceable></optional></term>
+	  <listitem>
+	    <para>
+	      Remove binding of source <replaceable>source</replaceable><optional>/<replaceable>mask</replaceable></optional> from zone it was previously added to.
+	    </para>
+	  </listitem>
+	</varlistentry>
+      </variablelist>
+    </refsect2>
+
+    <refsect2 id="ipset_options">
+      <title>IPSet Options</title>
+      <variablelist>
+	<varlistentry>
+         <term><option>--permanent</option> <option>--new-ipset</option>=<replaceable>ipset</replaceable> <option>--type</option>=<replaceable>ipset type</replaceable> <optional><option>--option</option>=<replaceable>ipset option</replaceable><optional>=<replaceable>value</replaceable></optional></optional></term>
+         <listitem>
+           <para>
+             Add a new permanent ipset with specifying the type and optional options.
+           </para>
+         </listitem>
+       </varlistentry>
+       <varlistentry>
+         <term><option>--permanent</option> <option>--delete-ipset</option>=<replaceable>ipset</replaceable></term>
+         <listitem>
+           <para>
+             Delete an existing permanent ipset.
+           </para>
+         </listitem>
+       </varlistentry>
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <option>--info-ipset=<replaceable>ipset</replaceable></option></term>
+	  <listitem>
+	    <para>
+	      Print information about the ipset <replaceable>ipset</replaceable>. The output format is:
+	      <programlisting>
+<replaceable>ipset</replaceable>
+  type: <replaceable>type</replaceable>
+  options: <replaceable>option1[=value1]</replaceable> ..
+  entries: <replaceable>entry1</replaceable> ..
+              </programlisting>
+	    </para>
+	  </listitem>
+	</varlistentry>
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <option>--get-ipsets</option></term>
+	  <listitem>
+	    <para>
+	      Print predefined ipsets as a space separated list.
+	    </para>
+	  </listitem>
+	</varlistentry>
+	<varlistentry>
+         <term><option>--permanent</option> <option>--ipset</option>=<replaceable>ipset</replaceable> <option>--set-description</option>=<replaceable>description</replaceable></term>
+         <listitem>
+           <para>
+             Set new description to ipset
+           </para>
+         </listitem>
+	</varlistentry>
+	<varlistentry>
+         <term><option>--permanent</option> <option>--ipset</option>=<replaceable>ipset</replaceable> <option>--get-description</option></term>
+         <listitem>
+           <para>
+             Print description for ipset
+           </para>
+         </listitem>
+	</varlistentry>
+	<varlistentry>
+         <term><option>--permanent</option> <option>--ipset</option>=<replaceable>ipset</replaceable> <option>--set-short</option>=<replaceable>description</replaceable></term>
+         <listitem>
+           <para>
+             Set short description to ipset
+           </para>
+         </listitem>
+	</varlistentry>
+	<varlistentry>
+         <term><option>--permanent</option> <option>--ipset</option>=<replaceable>ipset</replaceable> <option>--get-short</option></term>
+         <listitem>
+           <para>
+             Print short description for ipset
+           </para>
+         </listitem>
+	</varlistentry>
+	<varlistentry>
+         <term><optional><option>--permanent</option></optional> <option>--ipset</option>=<replaceable>ipset</replaceable> <option>--add-entry</option>=<replaceable>entry</replaceable></term>
+         <listitem>
+           <para>
+             Add a new entry to the ipset.
+           </para>
+         </listitem>
+       </varlistentry>
+
+	<varlistentry>
+         <term><optional><option>--permanent</option></optional> <option>--ipset</option>=<replaceable>ipset</replaceable> <option>--remove-entry</option>=<replaceable>entry</replaceable></term>
+         <listitem>
+           <para>
+             Remove an entry from the ipset.
+           </para>
+         </listitem>
+       </varlistentry>
+
+	<varlistentry>
+         <term><optional><option>--permanent</option></optional> <option>--ipset</option>=<replaceable>ipset</replaceable> <option>--query-entry</option>=<replaceable>entry</replaceable></term>
+         <listitem>
+           <para>
+	     Return whether the entry has been added to an ipset. Returns 0 if true, 1 otherwise.
+           </para>
+         </listitem>
+       </varlistentry>
+
+	<varlistentry>
+         <term><optional><option>--permanent</option></optional> <option>--ipset</option>=<replaceable>ipset</replaceable> <option>--get-entries</option></term>
+         <listitem>
+           <para>
+             List all entries of the ipset.
+           </para>
+         </listitem>
+       </varlistentry>
+
+	<varlistentry>
+         <term><optional><option>--permanent</option></optional> <option>--ipset</option>=<replaceable>ipset</replaceable> <option>--add-entries-from-file</option>=<replaceable>filename</replaceable></term>
+         <listitem>
+           <para>
+             Add a new entries to the ipset from the file. For all entries that are listed in the file but already in the ipset, a warning will be printed.
+           </para>
+           <para>
+	     The file should contain an entry per line. Lines starting with an hash or semicolon are ignored. Also empty lines.
+           </para>
+         </listitem>
+       </varlistentry>
+
+	<varlistentry>
+         <term><optional><option>--permanent</option></optional> <option>--ipset</option>=<replaceable>ipset</replaceable> <option>--remove-entries-from-file</option>=<replaceable>filename</replaceable></term>
+         <listitem>
+           <para>
+             Remove existing entries from the ipset from the file. For all entries that are listed in the file but not in the ipset, a warning will be printed.
+           </para>
+           <para>
+	     The file should contain an entry per line. Lines starting with an hash or semicolon are ignored. Also empty lines.
+           </para>
+         </listitem>
+       </varlistentry>
+     </variablelist>
+    </refsect2>
+
+    <refsect2 id="service_options">
+      <title>Service Options</title>
+      <para>
+	Options in this section affect only one particular service.
+      </para>
+      <variablelist>
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <option>--info-service=<replaceable>service</replaceable></option></term>
+	  <listitem>
+	    <para>
+	      Print information about the service <replaceable>service</replaceable>. The output format is:
+	      <programlisting>
+<replaceable>service</replaceable>
+  ports: <replaceable>port1</replaceable> ..
+  protocols: <replaceable>protocol1</replaceable> ..
+  modules: <replaceable>module1</replaceable> ..
+  destination: <replaceable>ipv1</replaceable>:<replaceable>address1</replaceable> ..
+              </programlisting>
+	    </para>
+	  </listitem>
+	</varlistentry>
+      </variablelist>
+      <para>
+	The following options are only usable in the permanent configuration.
+      </para>
+      <variablelist>
+       <varlistentry>
+         <term><option>--permanent</option> <option>--new-service</option>=<replaceable>service</replaceable></term>
+         <listitem>
+           <para>
+             Add a new permanent service.
+           </para>
+         </listitem>
+       </varlistentry>
+       <varlistentry>
+         <term><option>--permanent</option> <option>--delete-service</option>=<replaceable>service</replaceable></term>
+         <listitem>
+           <para>
+             Delete an existing permanent service.
+           </para>
+         </listitem>
+       </varlistentry>
+       <varlistentry>
+         <term><option>--permanent</option> <option>--service</option>=<replaceable>service</replaceable> <option>--set-description</option>=<replaceable>description</replaceable></term>
+         <listitem>
+           <para>
+             Set new description to service
+           </para>
+         </listitem>
+       </varlistentry>
+       <varlistentry>
+         <term><option>--permanent</option> <option>--service</option>=<replaceable>service</replaceable> <option>--get-description</option></term>
+         <listitem>
+           <para>
+             Print description for service
+           </para>
+         </listitem>
+       </varlistentry>
+       <varlistentry>
+         <term><option>--permanent</option> <option>--service</option>=<replaceable>service</replaceable> <option>--set-short</option>=<replaceable>description</replaceable></term>
+         <listitem>
+           <para>
+             Set short description to service
+           </para>
+         </listitem>
+       </varlistentry>
+       <varlistentry>
+         <term><option>--permanent</option> <option>--service</option>=<replaceable>service</replaceable> <option>--get-short</option></term>
+         <listitem>
+           <para>
+             Print short description for service
+           </para>
+         </listitem>
+       </varlistentry>
+       <varlistentry>
+         <term><option>--permanent</option> <option>--service</option>=<replaceable>service</replaceable> <option>--add-port</option>=<replaceable>portid</replaceable><optional>-<replaceable>portid</replaceable></optional>/<replaceable>protocol</replaceable></term>
+         <listitem>
+           <para>
+             Add a new port to the permanent service.
+           </para>
+         </listitem>
+       </varlistentry>
+       <varlistentry>
+         <term><option>--permanent</option> <option>--service</option>=<replaceable>service</replaceable> <option>--remove-port</option>=<replaceable>portid</replaceable><optional>-<replaceable>portid</replaceable></optional>/<replaceable>protocol</replaceable></term>
+         <listitem>
+           <para>
+             Remove a port from the permanent service.
+           </para>
+         </listitem>
+       </varlistentry>
+       <varlistentry>
+         <term><option>--permanent</option> <option>--service</option>=<replaceable>service</replaceable> <option>--query-port</option>=<replaceable>portid</replaceable><optional>-<replaceable>portid</replaceable></optional>/<replaceable>protocol</replaceable></term>
+         <listitem>
+           <para>
+             Return wether the port has been added to the permanent service.
+           </para>
+         </listitem>
+       </varlistentry>
+       <varlistentry>
+         <term><option>--permanent</option> <option>--service</option>=<replaceable>service</replaceable> <option>--get-ports</option></term>
+         <listitem>
+           <para>
+             List ports added to the permanent service.
+           </para>
+         </listitem>
+       </varlistentry>
+
+       <varlistentry>
+         <term><option>--permanent</option> <option>--service</option>=<replaceable>service</replaceable> <option>--add-protocol</option>=<replaceable>protocol</replaceable></term>
+         <listitem>
+           <para>
+             Add a new protocol to the permanent service.
+           </para>
+         </listitem>
+       </varlistentry>
+       <varlistentry>
+         <term><option>--permanent</option> <option>--service</option>=<replaceable>service</replaceable> <option>--remove-protocol</option>=<replaceable>protocol</replaceable></term>
+         <listitem>
+           <para>
+             Remove a protocol from the permanent service.
+           </para>
+         </listitem>
+       </varlistentry>
+       <varlistentry>
+         <term><option>--permanent</option> <option>--service</option>=<replaceable>service</replaceable> <option>--query-protocol</option>=<replaceable>protocol</replaceable></term>
+         <listitem>
+           <para>
+             Return wether the protocol has been added to the permanent service.
+           </para>
+         </listitem>
+       </varlistentry>
+       <varlistentry>
+         <term><option>--permanent</option> <option>--service</option>=<replaceable>service</replaceable> <option>--get-protocols</option></term>
+         <listitem>
+           <para>
+             List protocols added to the permanent service.
+           </para>
+         </listitem>
+       </varlistentry>
+
+       <varlistentry>
+         <term><option>--permanent</option> <option>--service</option>=<replaceable>service</replaceable> <option>--add-module</option>=<replaceable>module</replaceable></term>
+         <listitem>
+           <para>
+             Add a new module to the permanent service.
+           </para>
+         </listitem>
+       </varlistentry>
+       <varlistentry>
+         <term><option>--permanent</option> <option>--service</option>=<replaceable>service</replaceable> <option>--remove-module</option>=<replaceable>module</replaceable></term>
+         <listitem>
+           <para>
+             Remove a module from the permanent service.
+           </para>
+         </listitem>
+       </varlistentry>
+       <varlistentry>
+         <term><option>--permanent</option> <option>--service</option>=<replaceable>service</replaceable> <option>--query-module</option>=<replaceable>module</replaceable></term>
+         <listitem>
+           <para>
+             Return wether the module has been added to the permanent service.
+           </para>
+         </listitem>
+       </varlistentry>
+       <varlistentry>
+         <term><option>--permanent</option> <option>--service</option>=<replaceable>service</replaceable> <option>--get-modules</option></term>
+         <listitem>
+           <para>
+             List modules added to the permanent service.
+           </para>
+         </listitem>
+       </varlistentry>
+
+       <varlistentry>
+         <term><option>--permanent</option> <option>--service</option>=<replaceable>service</replaceable> <option>--add-destination</option>=<replaceable>ipv</replaceable>:<replaceable>address</replaceable><optional>/<replaceable>mask</replaceable></optional></term>
+         <listitem>
+           <para>
+             Set destination for ipv to address[/mask] in the permanent service.
+           </para>
+         </listitem>
+       </varlistentry>
+       <varlistentry>
+         <term><option>--permanent</option> <option>--service</option>=<replaceable>service</replaceable> <option>--remove-destination</option>=<replaceable>ipv</replaceable></term>
+         <listitem>
+           <para>
+             Remove the destination for ipv from the permanent service.
+           </para>
+         </listitem>
+       </varlistentry>
+       <varlistentry>
+         <term><option>--permanent</option> <option>--service</option>=<replaceable>service</replaceable> <option>--query-destination</option>=<replaceable>ipv</replaceable>:<replaceable>address</replaceable><optional>/<replaceable>mask</replaceable></optional></term>
+         <listitem>
+           <para>
+             Return wether the destination ipv to address[/mask] has been set in the permanent service.
+           </para>
+         </listitem>
+       </varlistentry>
+       <varlistentry>
+         <term><option>--permanent</option> <option>--service</option>=<replaceable>service</replaceable> <option>--get-destinations</option></term>
+         <listitem>
+           <para>
+             List destinations added to the permanent service.
+           </para>
+         </listitem>
+       </varlistentry>
+      </variablelist>
+    </refsect2>
+
+    <refsect2 id="icmptype_options">
+      <title>Internet Control Message Protocol (ICMP) type Options</title>
+      <para>
+	Options in this section affect only one particular icmptype.
+      </para>
+      <variablelist>
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <option>--info-icmptype=<replaceable>icmptype</replaceable></option></term>
+	  <listitem>
+	    <para>
+	      Print information about the icmptype <replaceable>icmptype</replaceable>. The output format is:
+	      <programlisting>
+<replaceable>icmptype</replaceable>
+  destination: <replaceable>ipv1</replaceable> ..
+              </programlisting>
+	    </para>
+	  </listitem>
+	</varlistentry>
+      </variablelist>
+      <para>
+	The following options are only usable in the permanent configuration.
+      </para>
+      <variablelist>
+       <varlistentry>
+         <term><option>--permanent</option> <option>--new-icmptype</option>=<replaceable>icmptype</replaceable></term>
+         <listitem>
+           <para>
+             Add a new permanent icmptype.
+           </para>
+         </listitem>
+       </varlistentry>
+       <varlistentry>
+         <term><option>--permanent</option> <option>--delete-icmptype</option>=<replaceable>icmptype</replaceable></term>
+         <listitem>
+           <para>
+             Delete an existing permanent icmptype.
+           </para>
+         </listitem>
+       </varlistentry>
+
+       <varlistentry>
+         <term><option>--permanent</option> <option>--icmptype</option>=<replaceable>icmptype</replaceable> <option>--set-description</option>=<replaceable>description</replaceable></term>
+         <listitem>
+           <para>
+             Set new description to icmptype
+           </para>
+         </listitem>
+       </varlistentry>
+       <varlistentry>
+         <term><option>--permanent</option> <option>--icmptype</option>=<replaceable>icmptype</replaceable> <option>--get-description</option></term>
+         <listitem>
+           <para>
+             Print description for icmptype
+           </para>
+         </listitem>
+       </varlistentry>
+       <varlistentry>
+         <term><option>--permanent</option> <option>--icmptype</option>=<replaceable>icmptype</replaceable> <option>--set-short</option>=<replaceable>description</replaceable></term>
+         <listitem>
+           <para>
+             Set short description to icmptype
+           </para>
+         </listitem>
+       </varlistentry>
+       <varlistentry>
+         <term><option>--permanent</option> <option>--icmptype</option>=<replaceable>icmptype</replaceable> <option>--get-short</option></term>
+         <listitem>
+           <para>
+             Print short description for icmptype
+           </para>
+         </listitem>
+       </varlistentry>
+
+       <varlistentry>
+         <term><option>--permanent</option> <option>--icmptype</option>=<replaceable>icmptype</replaceable> <option>--add-destination</option>=<replaceable>ipv</replaceable></term>
+         <listitem>
+           <para>
+             Enable destination for ipv in permanent icmptype. ipv is one of <literal>ipv4</literal> or <literal>ipv6</literal>.
+           </para>
+         </listitem>
+       </varlistentry>
+       <varlistentry>
+         <term><option>--permanent</option> <option>--icmptype</option>=<replaceable>icmptype</replaceable> <option>--remove-destination</option>=<replaceable>ipv</replaceable></term>
+         <listitem>
+           <para>
+             Disable destination for ipv in permanent icmptype. ipv is one of <literal>ipv4</literal> or <literal>ipv6</literal>.
+           </para>
+         </listitem>
+       </varlistentry>
+       <varlistentry>
+         <term><option>--permanent</option> <option>--icmptype</option>=<replaceable>icmptype</replaceable> <option>--query-destination</option>=<replaceable>ipv</replaceable></term>
+         <listitem>
+           <para>
+             Return whether destination for ipv is enabled in permanent icmptype. ipv is one of <literal>ipv4</literal> or <literal>ipv6</literal>.
+           </para>
+         </listitem>
+       </varlistentry>
+       <varlistentry>
+         <term><option>--permanent</option> <option>--icmptype</option>=<replaceable>icmptype</replaceable> <option>--get-destinations</option></term>
+         <listitem>
+           <para>
+              List destinations in permanent icmptype.
+           </para>
+         </listitem>
+       </varlistentry>
+      </variablelist>
+    </refsect2>
+
+    <refsect2 id="direct_options">
+      <title>Direct Options</title>
+      <para>
+	The direct options give a more direct access to the firewall. These options require user to know basic iptables concepts, i.e. <literal>table</literal> (filter/mangle/nat/...), <literal>chain</literal> (INPUT/OUTPUT/FORWARD/...), <literal>commands</literal> (-A/-D/-I/...), <literal>parameters</literal> (-p/-s/-d/-j/...) and <literal>targets</literal> (ACCEPT/DROP/REJECT/...).
+      </para>
+      <para>
+	Direct options should be used only as a last resort when it's not possible to use for example <option>--add-service</option>=<replaceable>service</replaceable> or <option>--add-rich-rule</option>='<replaceable>rule</replaceable>'.
+      </para>
+      <para>
+	The first argument of each option has to be <literal>ipv4</literal> or <literal>ipv6</literal> or <literal>eb</literal>. With <literal>ipv4</literal> it will be for IPv4 (<citerefentry><refentrytitle>iptables</refentrytitle><manvolnum>8</manvolnum></citerefentry>), with <literal>ipv6</literal> for IPv6 (<citerefentry><refentrytitle>ip6tables</refentrytitle><manvolnum>8</manvolnum></citerefentry>) and with <literal>eb</literal> for ethernet bridges (<citerefentry><refentrytitle>ebtables</refentrytitle><manvolnum>8</manvolnum></citerefentry>).
+      </para>
+      <variablelist>
+
+	<!-- direct chain -->
+
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <option>--direct</option> <option>--get-all-chains</option></term>
+	  <listitem>
+	    <para>
+	      Get all chains added to all tables.
+	      This option concerns only chains previously added with <option>--direct --add-chain</option>.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <option>--direct</option> <option>--get-chains</option> { <literal>ipv4</literal> | <literal>ipv6</literal> | <literal>eb</literal> } <replaceable>table</replaceable></term>
+	  <listitem>
+	    <para>
+	      Get all chains added to table <replaceable>table</replaceable> as a space separated list.
+	      This option concerns only chains previously added with <option>--direct --add-chain</option>.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <option>--direct</option> <option>--add-chain</option> { <literal>ipv4</literal> | <literal>ipv6</literal> | <literal>eb</literal> } <replaceable>table</replaceable> <replaceable>chain</replaceable></term>
+	  <listitem>
+	    <para>
+	      Add a new chain with name <replaceable>chain</replaceable> to table <replaceable>table</replaceable>. Make sure there's no other chain with this name already.
+	    </para>
+	    <para>
+	      There already exist basic chains to use with direct options, for example <literal>INPUT_direct</literal> chain (see <literal>iptables-save | grep direct</literal> output for all of them).
+	      These chains are jumped into before chains for zones, i.e. every rule put into <literal>INPUT_direct</literal> will be checked before rules in zones.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <option>--direct</option> <option>--remove-chain</option> { <literal>ipv4</literal> | <literal>ipv6</literal> | <literal>eb</literal> } <replaceable>table</replaceable> <replaceable>chain</replaceable></term>
+	  <listitem>
+	    <para>
+	      Remove chain with name <replaceable>chain</replaceable> from table <replaceable>table</replaceable>.
+	      Only chains previously added with <option>--direct --add-chain</option> can be removed this way.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <option>--direct</option> <option>--query-chain</option> { <literal>ipv4</literal> | <literal>ipv6</literal> | <literal>eb</literal> } <replaceable>table</replaceable> <replaceable>chain</replaceable></term>
+	  <listitem>
+	    <para>
+	      Return whether a chain with name <replaceable>chain</replaceable> exists in table <replaceable>table</replaceable>. Returns 0 if true, 1 otherwise.
+	      This option concerns only chains previously added with <option>--direct --add-chain</option>.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<!-- direct rule -->
+
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <option>--direct</option> <option>--get-all-rules</option></term>
+	  <listitem>
+	    <para>
+	      Get all rules added to all chains in all tables as a newline separated list of the priority and arguments.
+	      This option concerns only rules previously added with <option>--direct --add-rule</option>.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <option>--direct</option> <option>--get-rules</option> { <literal>ipv4</literal> | <literal>ipv6</literal> | <literal>eb</literal> } <replaceable>table</replaceable> <replaceable>chain</replaceable></term>
+	  <listitem>
+	    <para>
+	      Get all rules added to chain <replaceable>chain</replaceable> in table <replaceable>table</replaceable> as a newline separated list of the priority and arguments.
+	      This option concerns only rules previously added with <option>--direct --add-rule</option>.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <option>--direct</option> <option>--add-rule</option> { <literal>ipv4</literal> | <literal>ipv6</literal> | <literal>eb</literal> } <replaceable>table</replaceable> <replaceable>chain</replaceable> <replaceable>priority</replaceable> <replaceable>args</replaceable></term>
+	  <listitem>
+	    <para>
+	      Add a rule with the arguments <replaceable>args</replaceable> to chain <replaceable>chain</replaceable> in table <replaceable>table</replaceable> with priority <replaceable>priority</replaceable>.
+	    </para>
+	    <para>
+	      The <replaceable>priority</replaceable> is used to order rules. Priority 0 means add rule on top of the chain, with a higher priority the rule will be added further down. Rules with the same priority are on the same level and the order of these rules is not fixed and may change. If you want to make sure that a rule will be added after another one, use a low priority for the first and a higher for the following.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <option>--direct</option> <option>--remove-rule</option> { <literal>ipv4</literal> | <literal>ipv6</literal> | <literal>eb</literal> } <replaceable>table</replaceable> <replaceable>chain</replaceable> <replaceable>priority</replaceable> <replaceable>args</replaceable></term>
+	  <listitem>
+	    <para>
+	      Remove a rule with <replaceable>priority</replaceable> and the arguments <replaceable>args</replaceable> from chain <replaceable>chain</replaceable> in table <replaceable>table</replaceable>.
+	      Only rules previously added with <option>--direct --add-rule</option> can be removed this way.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <option>--direct</option> <option>--remove-rules</option> { <literal>ipv4</literal> | <literal>ipv6</literal> | <literal>eb</literal> } <replaceable>table</replaceable> <replaceable>chain</replaceable></term>
+	  <listitem>
+	    <para>
+	      Remove all rules in the chain with name <replaceable>chain</replaceable> exists in table <replaceable>table</replaceable>.
+	      This option concerns only rules previously added with <option>--direct --add-rule</option> in this chain.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <option>--direct</option> <option>--query-rule</option> { <literal>ipv4</literal> | <literal>ipv6</literal> | <literal>eb</literal> } <replaceable>table</replaceable> <replaceable>chain</replaceable> <replaceable>priority</replaceable> <replaceable>args</replaceable></term>
+	  <listitem>
+	    <para>
+	      Return whether a rule with <replaceable>priority</replaceable> and the arguments <replaceable>args</replaceable> exists in chain <replaceable>chain</replaceable> in table <replaceable>table</replaceable>.
+	      Returns 0 if true, 1 otherwise. This option concerns only rules previously added with <option>--direct --add-rule</option>.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<!-- direct untracked passthrough -->
+
+	<varlistentry>
+	  <term><option>--direct</option> <option>--passthrough</option> { <literal>ipv4</literal> | <literal>ipv6</literal> | <literal>eb</literal> } <replaceable>args</replaceable></term>
+	  <listitem>
+	    <para>
+	      Pass a command through to the firewall. <replaceable>args</replaceable> can be all <command>iptables</command>, <command>ip6tables</command> and <command>ebtables</command> command line arguments. This command is untracked, which means that firewalld is not able to provide information about this command later on, also not a listing of the untracked passthoughs.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<!-- direct tracked passthrough -->
+
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <option>--direct</option> <option>--get-all-passthroughs</option></term>
+	  <listitem>
+	    <para>
+	      Get all passthrough rules as a newline separated list of the ipv value and arguments.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <option>--direct</option> <option>--get-passthroughs</option> { <literal>ipv4</literal> | <literal>ipv6</literal> | <literal>eb</literal> }</term>
+	  <listitem>
+	    <para>
+	      Get all passthrough rules for the ipv value as a newline separated list of the priority and arguments.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <option>--direct</option> <option>--add-passthrough</option> { <literal>ipv4</literal> | <literal>ipv6</literal> | <literal>eb</literal> } <replaceable>args</replaceable></term>
+	  <listitem>
+	    <para>
+	      Add a passthrough rule with the arguments <replaceable>args</replaceable> for the ipv value.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <option>--direct</option> <option>--remove-passthrough</option> { <literal>ipv4</literal> | <literal>ipv6</literal> | <literal>eb</literal> } <replaceable>args</replaceable></term>
+	  <listitem>
+	    <para>
+	      Remove a passthrough rule with the arguments <replaceable>args</replaceable> for the ipv value.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <option>--direct</option> <option>--query-passthrough</option> { <literal>ipv4</literal> | <literal>ipv6</literal> | <literal>eb</literal> } <replaceable>args</replaceable></term>
+	  <listitem>
+	    <para>
+	      Return whether a passthrough rule with the arguments <replaceable>args</replaceable> exists for the ipv value. Returns 0 if true, 1 otherwise.
+	    </para>
+	  </listitem>
+	</varlistentry>
+      </variablelist>
+    </refsect2>
+
+    <refsect2 id="lockdown_options">
+      <title>Lockdown Options</title>
+      <para>
+	Local applications or services are able to change the firewall configuration if they are running as root (example: libvirt) or are authenticated using PolicyKit. With this feature administrators can lock the firewall configuration so that only applications on lockdown whitelist are able to request firewall changes.
+      </para>
+      <para>
+	The lockdown access check limits D-Bus methods that are changing firewall rules. Query, list and get methods are not limited.
+      </para>
+      <para>
+	The lockdown feature is a very light version of user and application policies for firewalld and is turned off by default.
+      </para>
+      <variablelist>
+	<varlistentry>
+	  <term><option>--lockdown-on</option></term>
+	  <listitem>
+	    <para>
+	      Enable lockdown. Be careful - if firewall-cmd is not on lockdown whitelist when you enable lockdown you won't be able to disable it again with firewall-cmd, you would need to edit firewalld.conf.
+	    </para>
+	    <para>
+	      This is a runtime and permanent change.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><option>--lockdown-off</option></term>
+	  <listitem>
+	    <para>
+	      Disable lockdown.
+	    </para>
+	    <para>
+	      This is a runtime and permanent change.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><option>--query-lockdown</option></term>
+	  <listitem>
+	    <para>
+	      Query whether lockdown is enabled. Returns 0 if lockdown is enabled, 1 otherwise.
+	    </para>
+	  </listitem>
+	</varlistentry>
+      </variablelist>
+    </refsect2>
+
+    <refsect2 id="lockdown_whitelist_options">
+      <title>Lockdown Whitelist Options</title>
+      <para>
+	The lockdown whitelist can contain <replaceable>commands</replaceable>, <replaceable>contexts</replaceable>, <replaceable>users</replaceable> and <replaceable>user ids</replaceable>.
+      </para>
+      <para>
+	If a command entry on the whitelist ends with an asterisk '*', then all command lines starting with the command will match. If the '*' is not there the absolute command inclusive arguments must match.
+      </para>
+      <para>
+	Commands for user root and others is not always the same. Example: As root <command>/bin/firewall-cmd</command> is used, as a normal user <command>/usr/bin/firewall-cmd</command> is be used on Fedora. 
+      </para>
+      <para>
+	The context is the security (SELinux) context of a running application or service. To get the context of a running application use <command>ps -e --context</command>.
+      </para>
+      <para>
+	<emphasis role="bold">Warning:</emphasis> If the context is unconfined, then this will open access for more than the desired application. 
+      </para>
+      <para>
+	The lockdown whitelist entries are checked in the following order:
+	<simplelist columns="1">
+	  <member>1. <replaceable>context</replaceable></member>
+	  <member>2. <replaceable>uid</replaceable></member>
+	  <member>3. <replaceable>user</replaceable></member>
+	  <member>4. <replaceable>command</replaceable></member>
+	</simplelist>
+      </para>
+      <variablelist>
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <option>--list-lockdown-whitelist-commands</option></term>
+	  <listitem>
+	    <para>
+	      List all command lines that are on the whitelist.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <option>--add-lockdown-whitelist-command</option>=<replaceable>command</replaceable></term>
+	  <listitem>
+	    <para>
+	      Add the <replaceable>command</replaceable> to the whitelist.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <option>--remove-lockdown-whitelist-command</option>=<replaceable>command</replaceable></term>
+	  <listitem>
+	    <para>
+	      Remove the <replaceable>command</replaceable> from the whitelist.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <option>--query-lockdown-whitelist-command</option>=<replaceable>command</replaceable></term>
+	  <listitem>
+	    <para>
+	      Query whether the <replaceable>command</replaceable> is on the whitelist. Returns 0 if true, 1 otherwise.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <option>--list-lockdown-whitelist-contexts</option></term>
+	  <listitem>
+	    <para>
+	      List all contexts that are on the whitelist.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <option>--add-lockdown-whitelist-context</option>=<replaceable>context</replaceable></term>
+	  <listitem>
+	    <para>
+	      Add the context <replaceable>context</replaceable> to the whitelist.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <option>--remove-lockdown-whitelist-context</option>=<replaceable>context</replaceable></term>
+	  <listitem>
+	    <para>
+	      Remove the <replaceable>context</replaceable> from the whitelist.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <option>--query-lockdown-whitelist-context</option>=<replaceable>context</replaceable></term>
+	  <listitem>
+	    <para>
+	      Query whether the <replaceable>context</replaceable> is on the whitelist. Returns 0 if true, 1 otherwise.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <option>--list-lockdown-whitelist-uids</option></term>
+	  <listitem>
+	    <para>
+	      List all user ids that are on the whitelist.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <option>--add-lockdown-whitelist-uid</option>=<replaceable>uid</replaceable></term>
+	  <listitem>
+	    <para>
+	      Add the user id <replaceable>uid</replaceable> to the whitelist.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <option>--remove-lockdown-whitelist-uid</option>=<replaceable>uid</replaceable></term>
+	  <listitem>
+	    <para>
+	      Remove the user id <replaceable>uid</replaceable> from the whitelist.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <option>--query-lockdown-whitelist-uid</option>=<replaceable>uid</replaceable></term>
+	  <listitem>
+	    <para>
+	      Query whether the user id <replaceable>uid</replaceable> is on the whitelist. Returns 0 if true, 1 otherwise.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <option>--list-lockdown-whitelist-users</option></term>
+	  <listitem>
+	    <para>
+	      List all user names that are on the whitelist.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <option>--add-lockdown-whitelist-user</option>=<replaceable>user</replaceable></term>
+	  <listitem>
+	    <para>
+	      Add the user name <replaceable>user</replaceable> to the whitelist.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <option>--remove-lockdown-whitelist-user</option>=<replaceable>user</replaceable></term>
+	  <listitem>
+	    <para>
+	      Remove the user name <replaceable>user</replaceable> from the whitelist.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--permanent</option></optional> <option>--query-lockdown-whitelist-user</option>=<replaceable>user</replaceable></term>
+	  <listitem>
+	    <para>
+	      Query whether the user name <replaceable>user</replaceable> is on the whitelist. Returns 0 if true, 1 otherwise.
+	    </para>
+	  </listitem>
+	</varlistentry>
+      </variablelist>
+    </refsect2>
+  </refsect1>
+
+    <refsect2 id="panic_options">
+      <title>Panic Options</title>
+      <variablelist>
+	<varlistentry>
+	  <term><option>--panic-on</option></term>
+	  <listitem>
+	    <para>
+	      Enable panic mode. All incoming and outgoing packets are dropped, active connections will expire. Enable this only if there are serious problems with your network environment. For example if the machine is getting hacked in.
+	    </para>
+	    <para>
+	      This is a runtime only change.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><option>--panic-off</option></term>
+	  <listitem>
+	    <para>
+	      Disable panic mode. After disabling panic mode established connections might work again, if panic mode was enabled for a short period of time.
+	    </para>
+	    <para>
+	      This is a runtime only change.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><option>--query-panic</option></term>
+	  <listitem>
+	    <para>
+	      Returns 0 if panic mode is enabled, 1 otherwise.
+	    </para>
+	  </listitem>
+	</varlistentry>
+      </variablelist>
+    </refsect2>
+
+  <refsect1>
+    <title>Examples</title>
+      <para>
+	For more examples see <ulink url="http://fedoraproject.org/wiki/FirewallD"></ulink>
+      </para>
+
+    <refsect2>
+      <title>Example 1</title>
+      <para>
+	Enable http service in default zone. This is runtime only change, i.e. effective until restart.
+      </para>
+      <para>
+	<programlisting>
+firewall-cmd --add-service=http
+	</programlisting>
+      </para>
+    </refsect2>
+
+    <refsect2>
+      <title>Example 2</title>
+      <para>
+	Enable port 443/tcp immediately and permanently in default zone.
+	To make the change effective immediately and also after restart we need two commands.
+	The first command makes the change in runtime configuration, i.e. makes it effective immediately, until restart.
+	The second command makes the change in permanent configuration, i.e. makes it effective after restart.
+      </para>
+      <para>
+	<programlisting>
+firewall-cmd --add-port=443/tcp
+firewall-cmd --permanent --add-port=443/tcp
+	</programlisting>
+      </para>
+    </refsect2>
+  </refsect1>
+
+  <refsect1 id="exit_codes">
+    <title>Exit Codes</title>
+    <para>
+      On success 0 is returned.
+      On failure the output is red colored and exit code is either 2 in case of wrong command-line option usage or one of the following error codes in other cases:
+
+      <informaltable frame="all">
+	<tgroup cols="2" colsep="1" rowsep="1">
+	  <colspec align="left"/>
+	  <colspec align="right"/>
+	  <thead>
+	    <row>
+	      <entry>String</entry>
+	      <entry>Code</entry>
+	    </row>
+	  </thead>
+	  <tbody>
+	    &errorcodes;
+	  </tbody>
+	</tgroup>
+      </informaltable>
+    </para>
+  </refsect1>
+
+  &seealso;
+
+  &notes;
+
+</refentry>
diff --git a/doc/xml/firewall-offline-cmd.xml b/doc/xml/firewall-offline-cmd.xml
deleted file mode 100644
index 77310b9..0000000
--- a/doc/xml/firewall-offline-cmd.xml
+++ /dev/null
@@ -1,1730 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN" "http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd"
-[
-<!ENTITY authors SYSTEM "authors.xml">
-<!ENTITY seealso SYSTEM "seealso.xml">
-<!ENTITY notes SYSTEM "notes.xml">
-<!ENTITY errorcodes SYSTEM "errorcodes.xml">
-]>
-
-<!--
-  This file is part of firewalld.
-
-  Copyright (C) 2010-2013 Red Hat, Inc.
-  Authors:
-  Thomas Woerner <twoerner@redhat.com>
-
-  This program is free software; you can redistribute it and/or modify
-  it under the terms of the GNU General Public License as published by
-  the Free Software Foundation; either version 2 of the License, or
-  (at your option) any later version.
-
-  This program is distributed in the hope that it will be useful,
-  but WITHOUT ANY WARRANTY; without even the implied warranty of
-  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-  GNU General Public License for more details.
-
-  You should have received a copy of the GNU General Public License
-  along with this program.  If not, see <http://www.gnu.org/licenses/>.
--->
-
-<refentry id="firewall-offline-cmd">
-
-  <refentryinfo>
-    <title>firewall-offline-cmd</title>
-    <productname>firewalld</productname>
-    &authors;
-  </refentryinfo>
-
-  <refmeta>
-    <refentrytitle>firewall-offline-cmd</refentrytitle>
-    <manvolnum>1</manvolnum>
-  </refmeta>
-
-  <refnamediv>
-    <refname>firewall-offline-cmd</refname>
-    <refpurpose>firewalld offline command line client</refpurpose>
-  </refnamediv>
-
-  <refsynopsisdiv>
-    <cmdsynopsis>
-      <command>firewall-offline-cmd</command> <arg choice="opt" rep="repeat">OPTIONS</arg>
-    </cmdsynopsis>
-  </refsynopsisdiv>
-
-  <refsect1 id="description">
-    <title>Description</title>
-    <para>
-      firewall-offline-cmd is an offline command line client of the firewalld daemon. It should be used only if the firewalld service is not running. For example to migrate from system-config-firewall/lokkit or in the install environment to configure firewall settings with kickstart.
-    </para>
-    <para>
-      Some lokkit options can not be automatically converted for firewalld, they will result in an error or warning message. This tool tries to convert as much as possible, but there are limitations for example with custom rules, modules and masquerading.
-    </para>
-    <para>
-      Check the firewall configuration after using this tool.
-    </para>
-  </refsect1>
-
-  <refsect1 id="options">
-    <title>Options</title>
-    <para>
-      If no options are given, configuration from <command>/etc/sysconfig/system-config-firewall</command> will be migrated.
-    </para>
-    <para>
-      The following options are supported:
-    </para>
-
-    <refsect2 id="help_options">
-      <title>Help Options</title>
-      <variablelist>
-	<varlistentry>
-          <term><option>-h</option></term>
-          <term><option>--help</option></term>
-          <listitem>
-	    <para>
-	      Prints a short help text and exists.
-	    </para>
-	  </listitem>
-	</varlistentry>
-      </variablelist>
-    </refsect2>
-
-    <refsect2 id="status_options">
-      <title>Status Options</title>
-      <variablelist>
-	<varlistentry>
-	  <term><option>--enabled</option></term>
-	  <listitem>
-	    <para>
-	      Enable the firewall. This option is a default option and will activate the firewall if not already enabled as long as the option <option>--disabled</option> is not given.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><option>--disabled</option></term>
-	  <listitem>
-	    <para>
-	      Disable the firewall by disabling the firewalld service.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-      </variablelist>
-    </refsect2>
-
-    <refsect2 id="genernal_options">
-      <title>Lokkit Compatibility Options</title>
-      <para>
-        These options are nearly identical to the options of <command>lokkit</command>.
-      </para>
-      <variablelist>
-	<varlistentry>
-	  <term><option>--addmodule</option>=<replaceable>module</replaceable></term>
-	  <listitem>
-	    <para>
-	      This option will result in a warning message and will be ignored.
-	    </para>
-	    <para>
-	      Handling of netfilter helpers has been merged into services completely. Adding or removing netfilter helpers outside of services is therefore not needed anymore. For more information on handling netfilter helpers in services, please have a look at <citerefentry><refentrytitle>firewalld.zone</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><option>--removemodule</option></term>
-	  <listitem>
-	    <para>
-	      This option will result in a warning message and will be ignored.
-	    </para>
-	    <para>
-	      Handling of netfilter helpers has been merged into services completely. Adding or removing netfilter helpers outside of services is therefore not needed anymore. For more information on handling netfilter helpers in services, please have a look at <citerefentry><refentrytitle>firewalld.zone</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-          <term><option>--remove-service</option>=<replaceable>service</replaceable></term>
-          <listitem>
-	    <para>
-	      Remove a service from the default zone. This option can be specified multiple times. 
-	    </para>
-	    <para>
-	      The service is one of the firewalld provided services. To get a list of the supported services, use <command>firewall-cmd --get-services</command>.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-          <term><option>-s</option> <replaceable>service</replaceable></term>
-          <term><option>--service</option>=<replaceable>service</replaceable></term>
-          <listitem>
-	    <para>
-	      Add a service to the default zone. This option can be specified multiple times. 
-	    </para>
-	    <para>
-	      The service is one of the firewalld provided services. To get a list of the supported services, use <command>firewall-cmd --get-services</command>.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-          <term><option>-p</option> <replaceable>portid</replaceable><optional>-<replaceable>portid</replaceable></optional>:<replaceable>protocol</replaceable></term>
-          <term><option>--port</option>=<replaceable>portid</replaceable><optional>-<replaceable>portid</replaceable></optional>:<replaceable>protocol</replaceable></term>
-          <listitem>
-	    <para>
-	      Add the port to the default zone. This option can be specified multiple times.
-	    </para>
-	    <para>
-	      The port can either be a single port number or a port range <replaceable>portid</replaceable>-<replaceable>portid</replaceable>. The protocol can either be <literal>tcp</literal> or <literal>udp</literal>.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-          <term><option>-t</option> <replaceable>interface</replaceable></term>
-          <term><option>--trust</option>=<replaceable>interface</replaceable></term>
-          <listitem>
-	    <para>
-	      This option will result in a warning message.
-	    </para>
-	    <para>
-	      Mark an interface as trusted. This option can be specified multiple times. The interface will be bound to the trusted zone.
-	    </para>
-	    <para>
-	      If the interface is used in a NetworkManager managed connection or if there is an ifcfg file for this interface, the zone will be changed to the zone defined in the configuration as soon as it gets activated. To change the zone of a connection use <command>nm-connection-editor</command> and set the zone to trusted, for an ifcfg file, use an editor and add "ZONE=trusted". If the zone is not defined in the ifcfg file, the firewalld default zone will be used.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-          <term><option>-m</option> <replaceable>interface</replaceable></term>
-          <term><option>--masq</option>=<replaceable>interface</replaceable></term>
-          <listitem>
-	    <para>
-	      This option will result in a warning message.
-	    </para>
-	    <para>
-	      Masquerading will be enabled in the default zone. The interface argument will be ignored. This is for <emphasis>IPv4</emphasis> only.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-          <term><option>--custom-rules</option>=<optional><replaceable>type</replaceable>:</optional><optional><replaceable>table</replaceable>:</optional><replaceable>filename</replaceable></term>
-          <listitem>
-	    <para>
-	      This option will result in a warning message and will be ignored.
-	    </para>
-	    <para>
-	      Custom rule files are not supported by firewalld.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-          <term><option>--forward-port</option>=if=<replaceable>interface</replaceable>:port=<replaceable>port</replaceable>:proto=<replaceable>protocol</replaceable><optional>:toport=<replaceable>destination port</replaceable>:</optional><optional>:toaddr=<replaceable>destination address</replaceable></optional></term>
-          <listitem>
-	    <para>
-	      This option will result in a warning message.
-	    </para>
-	    <para>
-	      Add the <emphasis>IPv4</emphasis> forward port in the default zone. This option can be specified multiple times. 
-	    </para>
-	    <para>
-	      The port can either be a single port number <replaceable>portid</replaceable> or a port range <replaceable>portid</replaceable>-<replaceable>portid</replaceable>. The protocol can either be <literal>tcp</literal> or <literal>udp</literal>. The destination address is an IP address.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-          <term><option>--block-icmp</option>=<replaceable>icmptype</replaceable></term>
-          <listitem>
-	    <para>
-	      This option will result in a warning message.
-	    </para>
-	    <para>
-	      Add an ICMP block for <replaceable>icmptype</replaceable> in the default zone. This option can be specified multiple times.
-	    </para>
-	    <para>
-	      The <replaceable>icmptype</replaceable> is the one of the icmp types firewalld supports. To get a listing of supported icmp types: <command>firewall-cmd --get-icmptypes</command>
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-      </variablelist>
-    </refsect2>
-
-    <refsect2 id="zone_options">
-      <title>Zone Options</title>
-      <variablelist>
-	<varlistentry>
-	  <term><option>--get-default-zone</option></term>
-	  <listitem>
-	    <para>
-	      Print default zone for connections and interfaces.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><option>--set-default-zone</option>=<replaceable>zone</replaceable></term>
-	  <listitem>
-	    <para>
-	      Set default zone for connections and interfaces where no zone has been selected. Setting the default zone changes the zone for the connections or interfaces, that are using the default zone.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><option>--get-zones</option></term>
-	  <listitem>
-	    <para>
-	      Print predefined zones as a space separated list.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><option>--get-services</option></term>
-	  <listitem>
-	    <para>
-	      Print predefined services as a space separated list.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><option>--get-icmptypes</option></term>
-	  <listitem>
-	    <para>
-	      Print predefined icmptypes as a space separated list.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><option>--get-zone-of-interface</option>=<replaceable>interface</replaceable></term>
-	  <listitem>
-	    <para>
-	      Print the name of the zone the <replaceable>interface</replaceable> is bound to or <emphasis>no zone</emphasis>.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><option>--get-zone-of-source</option>=<replaceable>source</replaceable><optional>/<replaceable>mask</replaceable></optional></term>
-	  <listitem>
-	    <para>
-	      Print the name of the zone the <replaceable>source</replaceable><optional>/<replaceable>mask</replaceable></optional> is bound to or <emphasis>no zone</emphasis>.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><option>--info-zone=<replaceable>zone</replaceable></option></term>
-	  <listitem>
-	    <para>
-	      Print information about the zone <replaceable>zone</replaceable>. The output format is:
-	      <programlisting>
-<replaceable>zone</replaceable>
-  interfaces: <replaceable>interface1</replaceable> ..
-  sources: <replaceable>source1</replaceable> ..
-  services: <replaceable>service1</replaceable> ..
-  ports: <replaceable>port1</replaceable> ..
-  protocols: <replaceable>protocol1</replaceable> ..
-  forward-ports:
-        <replaceable>forward-port1</replaceable>
-        ..
-  icmp-blocks: <replaceable>icmp-type1</replaceable> ..
-  rich rules:
-        <replaceable>rich-rule1</replaceable>
-        ..
-              </programlisting>
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><option>--list-all-zones</option></term>
-	  <listitem>
-	    <para>
-	      List everything added for or enabled in all zones. The output format is:
-	      <programlisting>
-<replaceable>zone1</replaceable>
-  interfaces: <replaceable>interface1</replaceable> ..
-  sources: <replaceable>source1</replaceable> ..
-  services: <replaceable>service1</replaceable> ..
-  ports: <replaceable>port1</replaceable> ..
-  protocols: <replaceable>protocol1</replaceable> ..
-  forward-ports:
-        <replaceable>forward-port1</replaceable>
-        ..
-  icmp-blocks: <replaceable>icmp-type1</replaceable> ..
-  rich rules:
-        <replaceable>rich-rule1</replaceable>
-        ..
-..
-              </programlisting>
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-          <term><option>--new-zone</option>=<replaceable>zone</replaceable></term>
-          <listitem>
-            <para>
-              Add a new permanent zone.
-            </para>
-          </listitem>
-	</varlistentry>
-
-	<varlistentry>
-          <term><option>--delete-zone</option>=<replaceable>zone</replaceable></term>
-          <listitem>
-            <para>
-              Delete an existing permanent zone.
-            </para>
-          </listitem>
-	</varlistentry>
-	<varlistentry>
-         <term><option>--zone</option>=<replaceable>zone</replaceable> <option>--set-description</option>=<replaceable>description</replaceable></term>
-         <listitem>
-           <para>
-             Set new description to zone
-           </para>
-         </listitem>
-	</varlistentry>
-	<varlistentry>
-         <term><option>--zone</option>=<replaceable>zone</replaceable> <option>--get-description</option></term>
-         <listitem>
-           <para>
-             Print description for zone
-           </para>
-         </listitem>
-	</varlistentry>
-	<varlistentry>
-         <term><option>--zone</option>=<replaceable>zone</replaceable> <option>--set-short</option>=<replaceable>description</replaceable></term>
-         <listitem>
-           <para>
-             Set short description to zone
-           </para>
-         </listitem>
-	</varlistentry>
-	<varlistentry>
-         <term><option>--zone</option>=<replaceable>zone</replaceable> <option>--get-short</option></term>
-         <listitem>
-           <para>
-             Print short description for zone
-           </para>
-         </listitem>
-	</varlistentry>
-
-	<varlistentry>
-          <term><option>--zone</option>=<replaceable>zone</replaceable> <option>--get-target</option></term>
-          <listitem>
-            <para>
-              Get the target of a permanent zone.
-            </para>
-          </listitem>
-	</varlistentry>
-
-	<varlistentry>
-          <term><option>--zone</option>=<replaceable>zone</replaceable> <option>--set-target</option>=<replaceable>zone</replaceable></term>
-          <listitem>
-            <para>
-              Set the target of a permanent zone.
-            </para>
-          </listitem>
-	</varlistentry>
-      </variablelist>
-    </refsect2>
-
-    <refsect2 id="options_to_adapt_and_query_zones">
-      <title>Options to Adapt and Query Zones</title>
-      <para>
-	Options in this section affect only one particular zone. If used with <option>--zone</option>=<replaceable>zone</replaceable> option, they affect the zone <replaceable>zone</replaceable>. If the option is omitted, they affect default zone (see <option>--get-default-zone</option>).
-      </para>
-      <variablelist>
-
-	<!-- list-all -->
-
-	<varlistentry>
-	  <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--list-all</option></term>
-	  <listitem>
-	    <para>
-	      List everything added for or enabled in <replaceable>zone</replaceable>. If zone is omitted, default zone will be used.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<!-- list/add/remove/query service -->
-
-	<varlistentry>
-	  <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--list-services</option></term>
-	  <listitem>
-	    <para>
-	      List services added for <replaceable>zone</replaceable> as a space separated list. If zone is omitted, default zone will be used.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--add-service</option>=<replaceable>service</replaceable></term>
-	  <listitem>
-	    <para>
-	      Add a service for <replaceable>zone</replaceable>. If zone is omitted, default zone will be used. This option can be specified multiple times.
-	    </para>
-	    <para>
-	      The service is one of the firewalld provided services. To get a list of the supported services, use <command>firewall-cmd --get-services</command>.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--remove-service-from-zone</option>=<replaceable>service</replaceable></term>
-	  <listitem>
-	    <para>
-	      Remove a service from <replaceable>zone</replaceable>. This option can be specified multiple times. If zone is omitted, default zone will be used.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--query-service</option>=<replaceable>service</replaceable></term>
-	  <listitem>
-	    <para>
-	      Return whether <replaceable>service</replaceable> has been added for <replaceable>zone</replaceable>. If zone is omitted, default zone will be used. Returns 0 if true, 1 otherwise.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<!-- list/add/remove/query port -->
-
-	<varlistentry>
-	  <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--list-ports</option></term>
-	  <listitem>
-	    <para>
-	      List ports added for <replaceable>zone</replaceable> as a space separated list. A port is of the form <replaceable>portid</replaceable><optional>-<replaceable>portid</replaceable></optional>/<replaceable>protocol</replaceable>, it can be either a port and protocol pair or a port range with a protocol. If zone is omitted, default zone will be used.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--add-port</option>=<replaceable>portid</replaceable><optional>-<replaceable>portid</replaceable></optional>/<replaceable>protocol</replaceable></term>
-	  <listitem>
-	    <para>
-	      Add the port for <replaceable>zone</replaceable>. If zone is omitted, default zone will be used. This option can be specified multiple times.
-	    </para>
-	    <para>
-	      The port can either be a single port number or a port range <replaceable>portid</replaceable>-<replaceable>portid</replaceable>. The protocol can either be <literal>tcp</literal> or <literal>udp</literal>.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--remove-port</option>=<replaceable>portid</replaceable><optional>-<replaceable>portid</replaceable></optional>/<replaceable>protocol</replaceable></term>
-	  <listitem>
-	    <para>
-	      Remove the port from <replaceable>zone</replaceable>. If zone is omitted, default zone will be used. This option can be specified multiple times.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--query-port</option>=<replaceable>portid</replaceable><optional>-<replaceable>portid</replaceable></optional>/<replaceable>protocol</replaceable></term>
-	  <listitem>
-	    <para>
-	      Return whether the port has been added for <replaceable>zone</replaceable>. If zone is omitted, default zone will be used. Returns 0 if true, 1 otherwise.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<!-- list/add/remove/query protocol -->
-
-       <varlistentry>
-         <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--list-protocols</option></term>
-         <listitem>
-           <para>
-             List protocols added for <replaceable>zone</replaceable> as a space separated list. If zone is omitted, default zone will be used.
-           </para>
-         </listitem>
-       </varlistentry>
-
-       <varlistentry>
-         <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--add-protocol</option>=<replaceable>protocol</replaceable></term>
-         <listitem>
-           <para>
-             Add the protocol for <replaceable>zone</replaceable>. If zone is omitted, default zone will be used. This option can be specified multiple times. If a timeout is supplied, the rule will be active for the specified amount of time and will be removed automatically afterwards.
-             <replaceable>timeval</replaceable> is either a number (of seconds) or number followed by one of characters <literal>s</literal> (seconds), <literal>m</literal> (minutes), <literal>h</literal> (hours), for example <literal>20m</literal> or <literal>1h</literal>.
-           </para>
-           <para>
-             The protocol can be any protocol supported by the system. Please have a look at <filename>/etc/protocols</filename> for supported protocols.
-           </para>
-         </listitem>
-       </varlistentry>
-
-       <varlistentry>
-         <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--remove-protcol</option>=<replaceable>protocol</replaceable></term>
-         <listitem>
-           <para>
-             Remove the protocol from <replaceable>zone</replaceable>. If zone is omitted, default zone will be used. This option can be specified multiple times.
-           </para>
-         </listitem>
-       </varlistentry>
-
-       <varlistentry>
-         <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--query-protocol</option>=<replaceable>protocol</replaceable></term>
-         <listitem>
-           <para>
-             Return whether the protocol has been added for <replaceable>zone</replaceable>. If zone is omitted, default zone will be used. Returns 0 if true, 1 otherwise.
-           </para>
-         </listitem>
-       </varlistentry>
-
-	<!-- list/add/remove/query icmp-block -->
-
-	<varlistentry>
-	  <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--list-icmp-blocks</option></term>
-	  <listitem>
-	    <para>
-	      List Internet Control Message Protocol (ICMP) type blocks added for <replaceable>zone</replaceable> as a space separated list. If zone is omitted, default zone will be used.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--add-icmp-block</option>=<replaceable>icmptype</replaceable></term>
-	  <listitem>
-	    <para>
-	      Add an ICMP block for <replaceable>icmptype</replaceable> for <replaceable>zone</replaceable>. If zone is omitted, default zone will be used. This option can be specified multiple times.
-	    </para>
-	    <para>
-	      The <replaceable>icmptype</replaceable> is the one of the icmp types firewalld supports. To get a listing of supported icmp types: <command>firewall-cmd --get-icmptypes</command>
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--remove-icmp-block</option>=<replaceable>icmptype</replaceable></term>
-	  <listitem>
-	    <para>
-	      Remove the ICMP block for <replaceable>icmptype</replaceable> from <replaceable>zone</replaceable>. If zone is omitted, default zone will be used. This option can be specified multiple times.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--query-icmp-block</option>=<replaceable>icmptype</replaceable></term>
-	  <listitem>
-	    <para>
-	      Return whether an ICMP block for <replaceable>icmptype</replaceable> has been added for <replaceable>zone</replaceable>. If zone is omitted, default zone will be used. Returns 0 if true, 1 otherwise.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<!-- list/add/remove/query forward-port -->
-
-	<varlistentry>
-	  <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--list-forward-ports</option></term>
-	  <listitem>
-	    <para>
-	      List <emphasis>IPv4</emphasis> forward ports added for <replaceable>zone</replaceable> as a space separated list. If zone is omitted, default zone will be used.
-	    </para>
-	    <para>
-	      For <emphasis>IPv6</emphasis> forward ports, please use the rich language.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--add-forward-port</option>=port=<replaceable>portid</replaceable><optional>-<replaceable>portid</replaceable></optional>:proto=<replaceable>protocol</replaceable><optional>:toport=<replaceable>portid</replaceable><optional>-<replaceable>portid</replaceable></optional></optional><optional>:toaddr=<replaceable>address</replaceable><optional>/<replaceable>mask</replaceable></optional></optional></term>
-	  <listitem>
-	    <para>
-	      Add the <emphasis>IPv4</emphasis> forward port for <replaceable>zone</replaceable>. If zone is omitted, default zone will be used. This option can be specified multiple times.
-	    </para>
-	    <para>
-	      The port can either be a single port number <replaceable>portid</replaceable> or a port range <replaceable>portid</replaceable>-<replaceable>portid</replaceable>. The protocol can either be <literal>tcp</literal> or <literal>udp</literal>. The destination address is a simple IP address.
-	    </para>
-	    <para>
-	      For <emphasis>IPv6</emphasis> forward ports, please use the rich language.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--remove-forward-port</option>=port=<replaceable>portid</replaceable><optional>-<replaceable>portid</replaceable></optional>:proto=<replaceable>protocol</replaceable><optional>:toport=<replaceable>portid</replaceable><optional>-<replaceable>portid</replaceable></optional></optional><optional>:toaddr=<replaceable>address</replaceable><optional>/<replaceable>mask</replaceable></optional></optional></term>
-	  <listitem>
-	    <para>
-	      Remove the <emphasis>IPv4</emphasis> forward port from <replaceable>zone</replaceable>. If zone is omitted, default zone will be used. This option can be specified multiple times.
-	    </para>
-	    <para>
-	      For <emphasis>IPv6</emphasis> forward ports, please use the rich language.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--query-forward-port</option>=port=<replaceable>portid</replaceable><optional>-<replaceable>portid</replaceable></optional>:proto=<replaceable>protocol</replaceable><optional>:toport=<replaceable>portid</replaceable><optional>-<replaceable>portid</replaceable></optional></optional><optional>:toaddr=<replaceable>address</replaceable><optional>/<replaceable>mask</replaceable></optional></optional></term>
-	  <listitem>
-	    <para>
-	      Return whether the <emphasis>IPv4</emphasis> forward port has been added for <replaceable>zone</replaceable>. If zone is omitted, default zone will be used. Returns 0 if true, 1 otherwise.
-	    </para>
-	    <para>
-	      For <emphasis>IPv6</emphasis> forward ports, please use the rich language.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<!-- add/remove/query masquerade -->
-
-	<varlistentry>
-	  <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--add-masquerade</option></term>
-	  <listitem>
-	    <para>
-	      Enable <emphasis>IPv4</emphasis> masquerade for <replaceable>zone</replaceable>. If zone is omitted, default zone will be used. Masquerading is useful if the machine is a router and machines connected over an interface in another zone should be able to use the first connection.
-	    </para>
-	    <para>
-	      For <emphasis>IPv6</emphasis> masquerading, please use the rich language.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--remove-masquerade</option></term>
-	  <listitem>
-	    <para>
-	      Disable <emphasis>IPv4</emphasis> masquerade for <replaceable>zone</replaceable>. If zone is omitted, default zone will be used.
-	    </para>
-	    <para>
-	      For <emphasis>IPv6</emphasis> masquerading, please use the rich language.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--query-masquerade</option></term>
-	  <listitem>
-	    <para>
-	      Return whether <emphasis>IPv4</emphasis> masquerading has been enabled for <replaceable>zone</replaceable>. If zone is omitted, default zone will be used. Returns 0 if true, 1 otherwise.
-	    </para>
-	    <para>
-	      For <emphasis>IPv6</emphasis> masquerading, please use the rich language.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<!-- list/add/remove/query rich rule -->
-
-	<varlistentry>
-	  <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--list-rich-rules</option></term>
-	  <listitem>
-	    <para>
-	      List rich language rules added for <replaceable>zone</replaceable> as a newline separated list. If zone is omitted, default zone will be used.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--add-rich-rule</option>='<replaceable>rule</replaceable>'</term>
-	  <listitem>
-	    <para>
-	      Add rich language rule '<replaceable>rule</replaceable>' for <replaceable>zone</replaceable>. This option can be specified multiple times. If zone is omitted, default zone will be used.
-	    </para>
-	    <para>
-	      For the rich language rule syntax, please have a look at <citerefentry><refentrytitle>firewalld.richlanguage</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--remove-rich-rule</option>='<replaceable>rule</replaceable>'</term>
-	  <listitem>
-	    <para>
-	      Remove rich language rule '<replaceable>rule</replaceable>' from <replaceable>zone</replaceable>. This option can be specified multiple times. If zone is omitted, default zone will be used.
-	    </para>
-	    <para>
-	      For the rich language rule syntax, please have a look at <citerefentry><refentrytitle>firewalld.richlanguage</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--query-rich-rule</option>='<replaceable>rule</replaceable>'</term>
-	  <listitem>
-	    <para>
-	      Return whether a rich language rule '<replaceable>rule</replaceable>' has been added for <replaceable>zone</replaceable>. If zone is omitted, default zone will be used. Returns 0 if true, 1 otherwise.
-	    </para>
-	    <para>
-	      For the rich language rule syntax, please have a look at <citerefentry><refentrytitle>firewalld.richlanguage</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
-	    </para>
-	  </listitem>
-	</varlistentry>
-      </variablelist>
-    </refsect2>
-
-    <refsect2 id="options_to_handle_bindings_of_interfaces">
-      <title>Options to Handle Bindings of Interfaces</title>
-      <para>
-	Binding an interface to a zone means that this zone settings are used to restrict traffic via the interface.
-      </para>
-      <para>
-	Options in this section affect only one particular zone. If used with <option>--zone</option>=<replaceable>zone</replaceable> option, they affect the zone <replaceable>zone</replaceable>. If the option is omitted, they affect default zone (see <option>--get-default-zone</option>).
-      </para>
-      <para>
-	For a list of predefined zones use <command>firewall-cmd --get-zones</command>.
-      </para>
-      <para>
-	An interface name is a string up to 16 characters long, that may not contain <option>' '</option>, <option>'/'</option>, <option>'!'</option> and <option>'*'</option>.
-      </para>
-      <variablelist>
-	<varlistentry>
-	  <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--list-interfaces</option></term>
-	  <listitem>
-	    <para>
-	      List interfaces that are bound to zone <replaceable>zone</replaceable> as a space separated list. If zone is omitted, default zone will be used.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--add-interface</option>=<replaceable>interface</replaceable></term>
-	  <listitem>
-	    <para>
-	      Bind interface <replaceable>interface</replaceable> to zone <replaceable>zone</replaceable>. If zone is omitted, default zone will be used.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--change-interface</option>=<replaceable>interface</replaceable></term>
-	  <listitem>
-	    <para>
-	      Change zone the interface <replaceable>interface</replaceable> is bound to to zone <replaceable>zone</replaceable>. If zone is omitted, default zone will be used. If old and new zone are the same, the call will be ignored without an error. If the interface has not been bound to a zone before, it will behave like <option>--add-interface</option>.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--query-interface</option>=<replaceable>interface</replaceable></term>
-	  <listitem>
-	    <para>
-	      Query whether interface <replaceable>interface</replaceable> is bound to zone <replaceable>zone</replaceable>. Returns 0 if true, 1 otherwise.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--remove-interface</option>=<replaceable>interface</replaceable></term>
-	  <listitem>
-	    <para>
-	      Remove binding of interface <replaceable>interface</replaceable> from zone <replaceable>zone</replaceable>. If zone is omitted, default zone will be used.
-	    </para>
-	  </listitem>
-	</varlistentry>
-      </variablelist>
-    </refsect2>
-
-    <refsect2 id="options_to_handle_bindings_of_sources">
-      <title>Options to Handle Bindings of Sources</title>
-      <para>
-	Binding a source to a zone means that this zone settings will be used to restrict traffic from this source.
-      </para>
-      <para>
-	A source address or address range is either an IP address or a network IP address with a mask for IPv4 or IPv6 or a MAC address (no mask). For IPv4, the mask can be a network mask or a plain number. For IPv6 the mask is a plain number. The use of host names is not supported.
-      </para>
-      <para>
-	Options in this section affect only one particular zone. If used with <option>--zone</option>=<replaceable>zone</replaceable> option, they affect the zone <replaceable>zone</replaceable>. If the option is omitted, they affect default zone (see <option>--get-default-zone</option>).
-      </para>
-      <para>
-	For a list of predefined zones use <command>firewall-cmd --get-zones</command>.
-      </para>
-      <variablelist>
-	<varlistentry>
-	  <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--list-sources</option></term>
-	  <listitem>
-	    <para>
-	      List sources that are bound to zone <replaceable>zone</replaceable> as a space separated list. If zone is omitted, default zone will be used.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--add-source</option>=<replaceable>source</replaceable><optional>/<replaceable>mask</replaceable></optional></term>
-	  <listitem>
-	    <para>
-	      Bind source <replaceable>source</replaceable><optional>/<replaceable>mask</replaceable></optional> to zone <replaceable>zone</replaceable>. If zone is omitted, default zone will be used.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--change-source</option>=<replaceable>source</replaceable><optional>/<replaceable>mask</replaceable></optional></term>
-	  <listitem>
-	    <para>
-	      Change zone the source <replaceable>source</replaceable><optional>/<replaceable>mask</replaceable></optional> is bound to to zone <replaceable>zone</replaceable>. If zone is omitted, default zone will be used. If old and new zone are the same, the call will be ignored without an error. If the source has not been bound to a zone before, it will behave like <option>--add-source</option>.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--query-source</option>=<replaceable>source</replaceable><optional>/<replaceable>mask</replaceable></optional></term>
-	  <listitem>
-	    <para>
-	      Query whether the source <replaceable>source</replaceable><optional>/<replaceable>mask</replaceable></optional> is bound to the zone <replaceable>zone</replaceable>. Returns 0 if true, 1 otherwise.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--remove-source</option>=<replaceable>source</replaceable><optional>/<replaceable>mask</replaceable></optional></term>
-	  <listitem>
-	    <para>
-	      Remove binding of source <replaceable>source</replaceable><optional>/<replaceable>mask</replaceable></optional> from zone <replaceable>zone</replaceable>. If zone is omitted, default zone will be used.
-	    </para>
-	  </listitem>
-	</varlistentry>
-      </variablelist>
-    </refsect2>
-
-    <refsect2 id="ipset_options">
-      <title>IPSet Options</title>
-      <variablelist>
-	<varlistentry>
-         <term><option>--new-ipset</option>=<replaceable>ipset</replaceable> <option>--type</option>=<replaceable>ipset type</replaceable> <optional><option>--option</option>=<replaceable>ipset option</replaceable><optional>=<replaceable>value</replaceable></optional></optional></term>
-         <listitem>
-           <para>
-             Add a new permanent ipset with specifying the type and optional options.
-           </para>
-         </listitem>
-       </varlistentry>
-       <varlistentry>
-         <term><option>--delete-ipset</option>=<replaceable>ipset</replaceable></term>
-         <listitem>
-           <para>
-             Delete an existing permanent ipset.
-           </para>
-         </listitem>
-       </varlistentry>
-	<varlistentry>
-	  <term><option>--info-ipset=<replaceable>ipset</replaceable></option></term>
-	  <listitem>
-	    <para>
-	      Print information about the ipset <replaceable>ipset</replaceable>. The output format is:
-	      <programlisting>
-<replaceable>ipset</replaceable>
-  type: <replaceable>type</replaceable>
-  options: <replaceable>option1[=value1]</replaceable> ..
-  entries: <replaceable>entry1</replaceable> ..
-              </programlisting>
-	    </para>
-	  </listitem>
-	</varlistentry>
-	<varlistentry>
-	  <term><option>--get-ipsets</option></term>
-	  <listitem>
-	    <para>
-	      Print predefined ipsets as a space separated list.
-	    </para>
-	  </listitem>
-	</varlistentry>
-	<varlistentry>
-         <term><option>--ipset</option>=<replaceable>ipset</replaceable> <option>--add-entry</option>=<replaceable>entry</replaceable></term>
-         <listitem>
-           <para>
-             Add a new entry to the ipset.
-           </para>
-         </listitem>
-       </varlistentry>
-
-	<varlistentry>
-         <term><option>--ipset</option>=<replaceable>ipset</replaceable> <option>--remove-entry</option>=<replaceable>entry</replaceable></term>
-         <listitem>
-           <para>
-             Remove an entry from the ipset.
-           </para>
-         </listitem>
-       </varlistentry>
-
-	<varlistentry>
-         <term><option>--ipset</option>=<replaceable>ipset</replaceable> <option>--query-entry</option>=<replaceable>entry</replaceable></term>
-         <listitem>
-           <para>
-	     Return whether the entry has been added to an ipset. Returns 0 if true, 1 otherwise.
-           </para>
-         </listitem>
-       </varlistentry>
-
-	<varlistentry>
-         <term><option>--ipset</option>=<replaceable>ipset</replaceable> <option>--get-entries</option></term>
-         <listitem>
-           <para>
-             List all entries of the ipset.
-           </para>
-         </listitem>
-       </varlistentry>
-       <varlistentry>
-         <term><option>--ipset</option>=<replaceable>ipset</replaceable> <option>--set-description</option>=<replaceable>description</replaceable></term>
-         <listitem>
-           <para>
-             Set new description to ipset
-           </para>
-         </listitem>
-       </varlistentry>
-       <varlistentry>
-         <term><option>--ipset</option>=<replaceable>ipset</replaceable> <option>--get-description</option></term>
-         <listitem>
-           <para>
-             Print description for ipset
-           </para>
-         </listitem>
-       </varlistentry>
-       <varlistentry>
-         <term><option>--ipset</option>=<replaceable>ipset</replaceable> <option>--set-short</option>=<replaceable>description</replaceable></term>
-         <listitem>
-           <para>
-             Set new short description to ipset
-           </para>
-         </listitem>
-       </varlistentry>
-       <varlistentry>
-         <term><option>--ipset</option>=<replaceable>ipset</replaceable> <option>--get-short</option></term>
-         <listitem>
-           <para>
-             Print short description for ipset
-           </para>
-         </listitem>
-       </varlistentry>
-      </variablelist>
-    </refsect2>
-
-    <refsect2 id="service_options">
-      <title>Service Options</title>
-      <variablelist>
-	<varlistentry>
-	  <term><option>--info-service=<replaceable>service</replaceable></option></term>
-	  <listitem>
-	    <para>
-	      Print information about the service <replaceable>service</replaceable>. The output format is:
-	      <programlisting>
-<replaceable>service</replaceable>
-  ports: <replaceable>port1</replaceable> ..
-  protocols: <replaceable>protocol1</replaceable> ..
-  modules: <replaceable>module1</replaceable> ..
-  destination: <replaceable>ipv1</replaceable>:<replaceable>address1</replaceable> ..
-              </programlisting>
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-       <varlistentry>
-         <term><option>--new-service</option>=<replaceable>service</replaceable></term>
-         <listitem>
-           <para>
-             Add a new permanent service.
-           </para>
-         </listitem>
-       </varlistentry>
-
-       <varlistentry>
-         <term><option>--delete-service</option>=<replaceable>service</replaceable></term>
-         <listitem>
-           <para>
-             Delete an existing permanent service.
-           </para>
-         </listitem>
-       </varlistentry>
-       <varlistentry>
-         <term><option>--service</option>=<replaceable>service</replaceable> <option>--set-description</option>=<replaceable>description</replaceable></term>
-         <listitem>
-           <para>
-             Set new description to service
-           </para>
-         </listitem>
-       </varlistentry>
-       <varlistentry>
-         <term><option>--service</option>=<replaceable>service</replaceable> <option>--get-description</option></term>
-         <listitem>
-           <para>
-             Print description for service
-           </para>
-         </listitem>
-       </varlistentry>
-       <varlistentry>
-         <term><option>--service</option>=<replaceable>service</replaceable> <option>--set-short</option>=<replaceable>description</replaceable></term>
-         <listitem>
-           <para>
-             Set short description to service
-           </para>
-         </listitem>
-       </varlistentry>
-       <varlistentry>
-         <term><option>--service</option>=<replaceable>service</replaceable> <option>--get-short</option></term>
-         <listitem>
-           <para>
-             Print short description for service
-           </para>
-         </listitem>
-       </varlistentry>
-       <varlistentry>
-         <term><option>--service</option>=<replaceable>service</replaceable> <option>--add-port</option>=<replaceable>portid</replaceable><optional>-<replaceable>portid</replaceable></optional>/<replaceable>protocol</replaceable></term>
-         <listitem>
-           <para>
-             Add a new port to the permanent service.
-           </para>
-         </listitem>
-       </varlistentry>
-       <varlistentry>
-         <term><option>--service</option>=<replaceable>service</replaceable> <option>--remove-port</option>=<replaceable>portid</replaceable><optional>-<replaceable>portid</replaceable></optional>/<replaceable>protocol</replaceable></term>
-         <listitem>
-           <para>
-             Remove a port from the permanent service.
-           </para>
-         </listitem>
-       </varlistentry>
-       <varlistentry>
-         <term><option>--service</option>=<replaceable>service</replaceable> <option>--query-port</option>=<replaceable>portid</replaceable><optional>-<replaceable>portid</replaceable></optional>/<replaceable>protocol</replaceable></term>
-         <listitem>
-           <para>
-             Return wether the port has been added to the permanent service.
-           </para>
-         </listitem>
-       </varlistentry>
-       <varlistentry>
-         <term><option>--service</option>=<replaceable>service</replaceable> <option>--get-ports</option></term>
-         <listitem>
-           <para>
-             List ports added to the permanent service.
-           </para>
-         </listitem>
-       </varlistentry>
-
-       <varlistentry>
-         <term><option>--service</option>=<replaceable>service</replaceable> <option>--add-protocol</option>=<replaceable>protocol</replaceable></term>
-         <listitem>
-           <para>
-             Add a new protocol to the permanent service.
-           </para>
-         </listitem>
-       </varlistentry>
-       <varlistentry>
-         <term><option>--service</option>=<replaceable>service</replaceable> <option>--remove-protocol</option>=<replaceable>protocol</replaceable></term>
-         <listitem>
-           <para>
-             Remove a protocol from the permanent service.
-           </para>
-         </listitem>
-       </varlistentry>
-       <varlistentry>
-         <term><option>--service</option>=<replaceable>service</replaceable> <option>--query-protocol</option>=<replaceable>protocol</replaceable></term>
-         <listitem>
-           <para>
-             Return wether the protocol has been added to the permanent service.
-           </para>
-         </listitem>
-       </varlistentry>
-       <varlistentry>
-         <term><option>--service</option>=<replaceable>service</replaceable> <option>--get-protocols</option></term>
-         <listitem>
-           <para>
-             List protocols added to the permanent service.
-           </para>
-         </listitem>
-       </varlistentry>
-
-       <varlistentry>
-         <term><option>--service</option>=<replaceable>service</replaceable> <option>--add-module</option>=<replaceable>module</replaceable></term>
-         <listitem>
-           <para>
-             Add a new module to the permanent service.
-           </para>
-         </listitem>
-       </varlistentry>
-       <varlistentry>
-         <term><option>--service</option>=<replaceable>service</replaceable> <option>--remove-module</option>=<replaceable>module</replaceable></term>
-         <listitem>
-           <para>
-             Remove a module from the permanent service.
-           </para>
-         </listitem>
-       </varlistentry>
-       <varlistentry>
-         <term><option>--service</option>=<replaceable>service</replaceable> <option>--query-module</option>=<replaceable>module</replaceable></term>
-         <listitem>
-           <para>
-             Return wether the module has been added to the permanent service.
-           </para>
-         </listitem>
-       </varlistentry>
-       <varlistentry>
-         <term><option>--service</option>=<replaceable>service</replaceable> <option>--get-modules</option></term>
-         <listitem>
-           <para>
-             List modules added to the permanent service.
-           </para>
-         </listitem>
-       </varlistentry>
-
-       <varlistentry>
-         <term><option>--service</option>=<replaceable>service</replaceable> <option>--add-destination</option>=<replaceable>ipv</replaceable>:<replaceable>address</replaceable><optional>/<replaceable>mask</replaceable></optional></term>
-         <listitem>
-           <para>
-             Set destination for ipv to address[/mask] in the permanent service.
-           </para>
-         </listitem>
-       </varlistentry>
-       <varlistentry>
-         <term><option>--service</option>=<replaceable>service</replaceable> <option>--remove-destination</option>=<replaceable>ipv</replaceable></term>
-         <listitem>
-           <para>
-             Remove the destination for ipv from the permanent service.
-           </para>
-         </listitem>
-       </varlistentry>
-       <varlistentry>
-         <term><option>--service</option>=<replaceable>service</replaceable> <option>--query-destination</option>=<replaceable>ipv</replaceable>:<replaceable>address</replaceable><optional>/<replaceable>mask</replaceable></optional></term>
-         <listitem>
-           <para>
-             Return wether the destination ipv to address[/mask] has been set in the permanent service.
-           </para>
-         </listitem>
-       </varlistentry>
-       <varlistentry>
-         <term><option>--service</option>=<replaceable>service</replaceable> <option>--get-destinations</option></term>
-         <listitem>
-           <para>
-             List destinations added to the permanent service.
-           </para>
-         </listitem>
-       </varlistentry>
-     </variablelist>
-    </refsect2>
-
-    <refsect2 id="icmptype_options">
-      <title>Internet Control Message Protocol (ICMP) type Options</title>
-      <variablelist>
-	<varlistentry>
-	  <term><option>--info-icmptype=<replaceable>icmptype</replaceable></option></term>
-	  <listitem>
-	    <para>
-	      Print information about the icmptype <replaceable>icmptype</replaceable>. The output format is:
-	      <programlisting>
-<replaceable>icmptype</replaceable>
-  destination: <replaceable>ipv1</replaceable> ..
-              </programlisting>
-	    </para>
-	  </listitem>
-	</varlistentry>
-       <varlistentry>
-         <term><option>--new-icmptype</option>=<replaceable>icmptype</replaceable></term>
-         <listitem>
-           <para>
-             Add a new permanent icmptype.
-           </para>
-         </listitem>
-       </varlistentry>
-
-       <varlistentry>
-         <term><option>--delete-icmptype</option>=<replaceable>icmptype</replaceable></term>
-         <listitem>
-           <para>
-             Delete an existing permanent icmptype.
-           </para>
-         </listitem>
-       </varlistentry>
-       <varlistentry>
-         <term> <option>--icmptype</option>=<replaceable>icmptype</replaceable> <option>--set-description</option>=<replaceable>description</replaceable></term>
-         <listitem>
-           <para>
-             Set new description to icmptype
-           </para>
-         </listitem>
-       </varlistentry>
-       <varlistentry>
-         <term> <option>--icmptype</option>=<replaceable>icmptype</replaceable> <option>--get-description</option></term>
-         <listitem>
-           <para>
-             Print description for icmptype
-           </para>
-         </listitem>
-       </varlistentry>
-
-       <varlistentry>
-         <term> <option>--icmptype</option>=<replaceable>icmptype</replaceable> <option>--set-short</option>=<replaceable>description</replaceable></term>
-         <listitem>
-           <para>
-             Set short description to icmptype
-           </para>
-         </listitem>
-       </varlistentry>
-       <varlistentry>
-         <term> <option>--icmptype</option>=<replaceable>icmptype</replaceable> <option>--get-short</option></term>
-         <listitem>
-           <para>
-             Print short description for icmptype
-           </para>
-         </listitem>
-       </varlistentry>
-
-       <varlistentry>
-         <term><option>--icmptype</option>=<replaceable>icmptype</replaceable> <option>--add-destination</option>=<replaceable>ipv</replaceable></term>
-         <listitem>
-           <para>
-             Enable destination for ipv in permanent icmptype. ipv is one of <literal>ipv4</literal> or <literal>ipv6</literal>.
-           </para>
-         </listitem>
-       </varlistentry>
-       <varlistentry>
-         <term><option>--icmptype</option>=<replaceable>icmptype</replaceable> <option>--remove-destination</option>=<replaceable>ipv</replaceable></term>
-         <listitem>
-           <para>
-             Disable destination for ipv in permanent icmptype. ipv is one of <literal>ipv4</literal> or <literal>ipv6</literal>.
-           </para>
-         </listitem>
-       </varlistentry>
-       <varlistentry>
-         <term><option>--icmptype</option>=<replaceable>icmptype</replaceable> <option>--query-destination</option>=<replaceable>ipv</replaceable></term>
-         <listitem>
-           <para>
-             Return whether destination for ipv is enabled in permanent icmptype. ipv is one of <literal>ipv4</literal> or <literal>ipv6</literal>.
-           </para>
-         </listitem>
-       </varlistentry>
-       <varlistentry>
-         <term><option>--icmptype</option>=<replaceable>icmptype</replaceable> <option>--get-destinations</option></term>
-         <listitem>
-           <para>
-              List destinations in permanent icmptype.
-           </para>
-         </listitem>
-       </varlistentry>
-      </variablelist>
-    </refsect2>
-
-    <refsect2 id="direct_options">
-      <title>Direct Options</title>
-      <para>
-	The direct options give a more direct access to the firewall. These options require user to know basic iptables concepts, i.e. <literal>table</literal> (filter/mangle/nat/...), <literal>chain</literal> (INPUT/OUTPUT/FORWARD/...), <literal>commands</literal> (-A/-D/-I/...), <literal>parameters</literal> (-p/-s/-d/-j/...) and <literal>targets</literal> (ACCEPT/DROP/REJECT/...).
-      </para>
-      <para>
-	Direct options should be used only as a last resort when it's not possible to use for example <option>--add-service</option>=<replaceable>service</replaceable> or <option>--add-rich-rule</option>='<replaceable>rule</replaceable>'.
-      </para>
-      <para>
-	The first argument of each option has to be <literal>ipv4</literal> or <literal>ipv6</literal> or <literal>eb</literal>. With <literal>ipv4</literal> it will be for IPv4 (<citerefentry><refentrytitle>iptables</refentrytitle><manvolnum>8</manvolnum></citerefentry>), with <literal>ipv6</literal> for IPv6 (<citerefentry><refentrytitle>ip6tables</refentrytitle><manvolnum>8</manvolnum></citerefentry>) and with <literal>eb</literal> for ethernet bridges (<citerefentry><refentrytitle>ebtables</refentrytitle><manvolnum>8</manvolnum></citerefentry>).
-      </para>
-      <variablelist>
-
-	<!-- direct chain -->
-
-	<varlistentry>
-	  <term><option>--direct</option> <option>--get-all-chains</option></term>
-	  <listitem>
-	    <para>
-	      Get all chains added to all tables.
-	    </para>
-	    <para>
-	      This option concerns only chains previously added with <option>--direct --add-chain</option>.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><option>--direct</option> <option>--get-chains</option> { <literal>ipv4</literal> | <literal>ipv6</literal> | <literal>eb</literal> } <replaceable>table</replaceable></term>
-	  <listitem>
-	    <para>
-	      Get all chains added to table <replaceable>table</replaceable> as a space separated list.
-	    </para>
-	    <para>
-	      This option concerns only chains previously added with <option>--direct --add-chain</option>.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><option>--direct</option> <option>--add-chain</option> { <literal>ipv4</literal> | <literal>ipv6</literal> | <literal>eb</literal> } <replaceable>table</replaceable> <replaceable>chain</replaceable></term>
-	  <listitem>
-	    <para>
-	      Add a new chain with name <replaceable>chain</replaceable> to table <replaceable>table</replaceable>.
-	    </para>
-	    <para>
-	      There already exist basic chains to use with direct options, for example <literal>INPUT_direct</literal> chain (see <literal>iptables-save | grep direct</literal> output for all of them).
-	      These chains are jumped into before chains for zones, i.e. every rule put into <literal>INPUT_direct</literal> will be checked before rules in zones.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><option>--direct</option> <option>--remove-chain</option> { <literal>ipv4</literal> | <literal>ipv6</literal> | <literal>eb</literal> } <replaceable>table</replaceable> <replaceable>chain</replaceable></term>
-	  <listitem>
-	    <para>
-	      Remove the chain with name <replaceable>chain</replaceable> from table <replaceable>table</replaceable>.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><option>--direct</option> <option>--query-chain</option> { <literal>ipv4</literal> | <literal>ipv6</literal> | <literal>eb</literal> } <replaceable>table</replaceable> <replaceable>chain</replaceable></term>
-	  <listitem>
-	    <para>
-	      Return whether a chain with name <replaceable>chain</replaceable> exists in table <replaceable>table</replaceable>. Returns 0 if true, 1 otherwise.
-	    </para>
-	    <para>
-	      This option concerns only chains previously added with <option>--direct --add-chain</option>.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<!-- direct rule -->
-
-	<varlistentry>
-	  <term><option>--direct</option> <option>--get-all-rules</option></term>
-	  <listitem>
-	    <para>
-	      Get all rules added to all chains in all tables as a newline separated list of the priority and arguments.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><option>--direct</option> <option>--get-rules</option> { <literal>ipv4</literal> | <literal>ipv6</literal> | <literal>eb</literal> } <replaceable>table</replaceable> <replaceable>chain</replaceable></term>
-	  <listitem>
-	    <para>
-	      Get all rules added to chain <replaceable>chain</replaceable> in table <replaceable>table</replaceable> as a newline separated list of the priority and arguments.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><option>--direct</option> <option>--add-rule</option> { <literal>ipv4</literal> | <literal>ipv6</literal> | <literal>eb</literal> } <replaceable>table</replaceable> <replaceable>chain</replaceable> <replaceable>priority</replaceable> <replaceable>args</replaceable></term>
-	  <listitem>
-	    <para>
-	      Add a rule with the arguments <replaceable>args</replaceable> to chain <replaceable>chain</replaceable> in table <replaceable>table</replaceable> with priority <replaceable>priority</replaceable>.
-	    </para>
-	    <para>
-	      The <replaceable>priority</replaceable> is used to order rules. Priority 0 means add rule on top of the chain, with a higher priority the rule will be added further down. Rules with the same priority are on the same level and the order of these rules is not fixed and may change. If you want to make sure that a rule will be added after another one, use a low priority for the first and a higher for the following.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><option>--direct</option> <option>--remove-rule</option> { <literal>ipv4</literal> | <literal>ipv6</literal> | <literal>eb</literal> } <replaceable>table</replaceable> <replaceable>chain</replaceable> <replaceable>priority</replaceable> <replaceable>args</replaceable></term>
-	  <listitem>
-	    <para>
-	      Remove a rule with <replaceable>priority</replaceable> and the arguments <replaceable>args</replaceable> from chain <replaceable>chain</replaceable> in table <replaceable>table</replaceable>.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><option>--direct</option> <option>--remove-rules</option> { <literal>ipv4</literal> | <literal>ipv6</literal> | <literal>eb</literal> } <replaceable>table</replaceable> <replaceable>chain</replaceable></term>
-	  <listitem>
-	    <para>
-	      Remove all rules in the chain with name <replaceable>chain</replaceable> exists in table <replaceable>table</replaceable>.
-	    </para>
-	    <para>
-	      This option concerns only rules previously added with <option>--direct --add-rule</option> in this chain.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><option>--direct</option> <option>--query-rule</option> { <literal>ipv4</literal> | <literal>ipv6</literal> | <literal>eb</literal> } <replaceable>table</replaceable> <replaceable>chain</replaceable> <replaceable>priority</replaceable> <replaceable>args</replaceable></term>
-	  <listitem>
-	    <para>
-	      Return whether a rule with <replaceable>priority</replaceable> and the arguments <replaceable>args</replaceable> exists in chain <replaceable>chain</replaceable> in table <replaceable>table</replaceable>. Returns 0 if true, 1 otherwise.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<!-- direct permanent passthrough -->
-
-	<varlistentry>
-	  <term><option>--direct</option> <option>--get-all-passthroughs</option></term>
-	  <listitem>
-	    <para>
-	      Get all permanent passthrough as a newline separated list of the ipv value and arguments.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><option>--direct</option> <option>--get-passthroughs</option> { <literal>ipv4</literal> | <literal>ipv6</literal> | <literal>eb</literal> } </term>
-	  <listitem>
-	    <para>
-	      Get all permanent passthrough rules for the ipv value as a newline separated list of the priority and arguments.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><option>--direct</option> <option>--add-passthrough</option> { <literal>ipv4</literal> | <literal>ipv6</literal> | <literal>eb</literal> } <replaceable>args</replaceable></term>
-	  <listitem>
-	    <para>
-	      Add a permanent passthrough rule with the arguments <replaceable>args</replaceable> for the ipv value.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><option>--direct</option> <option>--remove-passthrough</option> { <literal>ipv4</literal> | <literal>ipv6</literal> | <literal>eb</literal> } <replaceable>args</replaceable></term>
-	  <listitem>
-	    <para>
-	      Remove a permanent passthrough rule with the arguments <replaceable>args</replaceable> for the ipv value.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><option>--direct</option> <option>--query-passthrough</option> { <literal>ipv4</literal> | <literal>ipv6</literal> | <literal>eb</literal> } <replaceable>args</replaceable></term>
-	  <listitem>
-	    <para>
-	      Return whether a permanent passthrough rule with the arguments <replaceable>args</replaceable> exists for the ipv value. Returns 0 if true, 1 otherwise.
-	    </para>
-	  </listitem>
-	</varlistentry>
-      </variablelist>
-    </refsect2>
-
-    <refsect2 id="lockdown_options">
-      <title>Lockdown Options</title>
-      <para>
-	Local applications or services are able to change the firewall configuration if they are running as root (example: libvirt) or are authenticated using PolicyKit. With this feature administrators can lock the firewall configuration so that only applications on lockdown whitelist are able to request firewall changes.
-      </para>
-      <para>
-	The lockdown access check limits D-Bus methods that are changing firewall rules. Query, list and get methods are not limited.
-      </para>
-      <para>
-	The lockdown feature is a very light version of user and application policies for firewalld and is turned off by default.
-      </para>
-      <variablelist>
-	<varlistentry>
-	  <term><option>--lockdown-on</option></term>
-	  <listitem>
-	    <para>
-	      Enable lockdown. Be careful - if firewall-cmd is not on lockdown whitelist when you enable lockdown you won't be able to disable it again with firewall-cmd, you would need to edit firewalld.conf.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><option>--lockdown-off</option></term>
-	  <listitem>
-	    <para>
-	      Disable lockdown.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><option>--query-lockdown</option></term>
-	  <listitem>
-	    <para>
-	      Query whether lockdown is enabled. Returns 0 if lockdown is enabled, 1 otherwise.
-	    </para>
-	  </listitem>
-	</varlistentry>
-      </variablelist>
-    </refsect2>
-
-    <refsect2 id="lockdown_whitelist_options">
-      <title>Lockdown Whitelist Options</title>
-      <para>
-	The lockdown whitelist can contain <replaceable>commands</replaceable>, <replaceable>contexts</replaceable>, <replaceable>users</replaceable> and <replaceable>user ids</replaceable>.
-      </para>
-      <para>
-	If a command entry on the whitelist ends with an asterisk '*', then all command lines starting with the command will match. If the '*' is not there the absolute command inclusive arguments must match.
-      </para>
-      <para>
-	Commands for user root and others is not always the same. Example: As root <command>/bin/firewall-cmd</command> is used, as a normal user <command>/usr/bin/firewall-cmd</command> is be used on Fedora. 
-      </para>
-      <para>
-	The context is the security (SELinux) context of a running application or service. To get the context of a running application use <command>ps -e --context</command>.
-      </para>
-      <para>
-	<emphasis role="bold">Warning:</emphasis> If the context is unconfined, then this will open access for more than the desired application. 
-      </para>
-      <para>
-	The lockdown whitelist entries are checked in the following order:
-	<simplelist columns="1">
-	  <member>1. <replaceable>context</replaceable></member>
-	  <member>2. <replaceable>uid</replaceable></member>
-	  <member>3. <replaceable>user</replaceable></member>
-	  <member>4. <replaceable>command</replaceable></member>
-	</simplelist>
-      </para>
-      <variablelist>
-	<varlistentry>
-	  <term><option>--list-lockdown-whitelist-commands</option></term>
-	  <listitem>
-	    <para>
-	      List all command lines that are on the whitelist.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><option>--add-lockdown-whitelist-command</option>=<replaceable>command</replaceable></term>
-	  <listitem>
-	    <para>
-	      Add the <replaceable>command</replaceable> to the whitelist.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><option>--remove-lockdown-whitelist-command</option>=<replaceable>command</replaceable></term>
-	  <listitem>
-	    <para>
-	      Remove the <replaceable>command</replaceable> from the whitelist.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><option>--query-lockdown-whitelist-command</option>=<replaceable>command</replaceable></term>
-	  <listitem>
-	    <para>
-	      Query whether the <replaceable>command</replaceable> is on the whitelist. Returns 0 if true, 1 otherwise.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><option>--list-lockdown-whitelist-contexts</option></term>
-	  <listitem>
-	    <para>
-	      List all contexts that are on the whitelist.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><option>--add-lockdown-whitelist-context</option>=<replaceable>context</replaceable></term>
-	  <listitem>
-	    <para>
-	      Add the context <replaceable>context</replaceable> to the whitelist.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><option>--remove-lockdown-whitelist-context</option>=<replaceable>context</replaceable></term>
-	  <listitem>
-	    <para>
-	      Remove the <replaceable>context</replaceable> from the whitelist.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><option>--query-lockdown-whitelist-context</option>=<replaceable>context</replaceable></term>
-	  <listitem>
-	    <para>
-	      Query whether the <replaceable>context</replaceable> is on the whitelist. Returns 0 if true, 1 otherwise.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><option>--list-lockdown-whitelist-uids</option></term>
-	  <listitem>
-	    <para>
-	      List all user ids that are on the whitelist.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><option>--add-lockdown-whitelist-uid</option>=<replaceable>uid</replaceable></term>
-	  <listitem>
-	    <para>
-	      Add the user id <replaceable>uid</replaceable> to the whitelist.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><option>--remove-lockdown-whitelist-uid</option>=<replaceable>uid</replaceable></term>
-	  <listitem>
-	    <para>
-	      Remove the user id <replaceable>uid</replaceable> from the whitelist.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><option>--query-lockdown-whitelist-uid</option>=<replaceable>uid</replaceable></term>
-	  <listitem>
-	    <para>
-	      Query whether the user id <replaceable>uid</replaceable> is on the whitelist. Returns 0 if true, 1 otherwise.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><option>--list-lockdown-whitelist-users</option></term>
-	  <listitem>
-	    <para>
-	      List all user names that are on the whitelist.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><option>--add-lockdown-whitelist-user</option>=<replaceable>user</replaceable></term>
-	  <listitem>
-	    <para>
-	      Add the user name <replaceable>user</replaceable> to the whitelist.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><option>--remove-lockdown-whitelist-user</option>=<replaceable>user</replaceable></term>
-	  <listitem>
-	    <para>
-	      Remove the user name <replaceable>user</replaceable> from the whitelist.
-	    </para>
-	  </listitem>
-	</varlistentry>
-
-	<varlistentry>
-	  <term><option>--query-lockdown-whitelist-user</option>=<replaceable>user</replaceable></term>
-	  <listitem>
-	    <para>
-	      Query whether the user name <replaceable>user</replaceable> is on the whitelist. Returns 0 if true, 1 otherwise.
-	    </para>
-	  </listitem>
-	</varlistentry>
-      </variablelist>
-    </refsect2>
-
-    <refsect2 id="polkit_options">
-      <title>Policy Options</title>
-      <variablelist>
-	<varlistentry>
-          <term><option>--policy-server</option></term>
-          <listitem>
-	    <para>
-	      Change Polkit actions to 'server'  (more restricted)
-	    </para>
-	  </listitem>
-	</varlistentry>
-	<varlistentry>
-          <term><option>--policy-desktop</option></term>
-          <listitem>
-	    <para>
-	      Change Polkit actions to 'desktop'  (less restricted)
-	    </para>
-	  </listitem>
-	</varlistentry>
-      </variablelist>
-    </refsect2>
-
-  </refsect1>
-
-  &seealso;
-
-  &notes;
-
-</refentry>
diff --git a/doc/xml/firewall-offline-cmd.xml.in b/doc/xml/firewall-offline-cmd.xml.in
new file mode 100644
index 0000000..818f831
--- /dev/null
+++ b/doc/xml/firewall-offline-cmd.xml.in
@@ -0,0 +1,1730 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN" "http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd"
+[
+<!ENTITY authors SYSTEM "authors.xml">
+<!ENTITY seealso SYSTEM "seealso.xml">
+<!ENTITY notes SYSTEM "notes.xml">
+<!ENTITY errorcodes SYSTEM "errorcodes.xml">
+]>
+
+<!--
+  This file is part of firewalld.
+
+  Copyright (C) 2010-2013 Red Hat, Inc.
+  Authors:
+  Thomas Woerner <twoerner@redhat.com>
+
+  This program is free software; you can redistribute it and/or modify
+  it under the terms of the GNU General Public License as published by
+  the Free Software Foundation; either version 2 of the License, or
+  (at your option) any later version.
+
+  This program is distributed in the hope that it will be useful,
+  but WITHOUT ANY WARRANTY; without even the implied warranty of
+  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+  GNU General Public License for more details.
+
+  You should have received a copy of the GNU General Public License
+  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+-->
+
+<refentry id="firewall-offline-cmd">
+
+  <refentryinfo>
+    <title>firewall-offline-cmd</title>
+    <productname>firewalld</productname>
+    &authors;
+  </refentryinfo>
+
+  <refmeta>
+    <refentrytitle>firewall-offline-cmd</refentrytitle>
+    <manvolnum>1</manvolnum>
+  </refmeta>
+
+  <refnamediv>
+    <refname>firewall-offline-cmd</refname>
+    <refpurpose>firewalld offline command line client</refpurpose>
+  </refnamediv>
+
+  <refsynopsisdiv>
+    <cmdsynopsis>
+      <command>firewall-offline-cmd</command> <arg choice="opt" rep="repeat">OPTIONS</arg>
+    </cmdsynopsis>
+  </refsynopsisdiv>
+
+  <refsect1 id="description">
+    <title>Description</title>
+    <para>
+      firewall-offline-cmd is an offline command line client of the firewalld daemon. It should be used only if the firewalld service is not running. For example to migrate from system-config-firewall/lokkit or in the install environment to configure firewall settings with kickstart.
+    </para>
+    <para>
+      Some lokkit options can not be automatically converted for firewalld, they will result in an error or warning message. This tool tries to convert as much as possible, but there are limitations for example with custom rules, modules and masquerading.
+    </para>
+    <para>
+      Check the firewall configuration after using this tool.
+    </para>
+  </refsect1>
+
+  <refsect1 id="options">
+    <title>Options</title>
+    <para>
+      If no options are given, configuration from <command>@SYSCONFIGDIR@/system-config-firewall</command> will be migrated.
+    </para>
+    <para>
+      The following options are supported:
+    </para>
+
+    <refsect2 id="help_options">
+      <title>Help Options</title>
+      <variablelist>
+	<varlistentry>
+          <term><option>-h</option></term>
+          <term><option>--help</option></term>
+          <listitem>
+	    <para>
+	      Prints a short help text and exists.
+	    </para>
+	  </listitem>
+	</varlistentry>
+      </variablelist>
+    </refsect2>
+
+    <refsect2 id="status_options">
+      <title>Status Options</title>
+      <variablelist>
+	<varlistentry>
+	  <term><option>--enabled</option></term>
+	  <listitem>
+	    <para>
+	      Enable the firewall. This option is a default option and will activate the firewall if not already enabled as long as the option <option>--disabled</option> is not given.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><option>--disabled</option></term>
+	  <listitem>
+	    <para>
+	      Disable the firewall by disabling the firewalld service.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+      </variablelist>
+    </refsect2>
+
+    <refsect2 id="genernal_options">
+      <title>Lokkit Compatibility Options</title>
+      <para>
+        These options are nearly identical to the options of <command>lokkit</command>.
+      </para>
+      <variablelist>
+	<varlistentry>
+	  <term><option>--addmodule</option>=<replaceable>module</replaceable></term>
+	  <listitem>
+	    <para>
+	      This option will result in a warning message and will be ignored.
+	    </para>
+	    <para>
+	      Handling of netfilter helpers has been merged into services completely. Adding or removing netfilter helpers outside of services is therefore not needed anymore. For more information on handling netfilter helpers in services, please have a look at <citerefentry><refentrytitle>firewalld.zone</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><option>--removemodule</option></term>
+	  <listitem>
+	    <para>
+	      This option will result in a warning message and will be ignored.
+	    </para>
+	    <para>
+	      Handling of netfilter helpers has been merged into services completely. Adding or removing netfilter helpers outside of services is therefore not needed anymore. For more information on handling netfilter helpers in services, please have a look at <citerefentry><refentrytitle>firewalld.zone</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+          <term><option>--remove-service</option>=<replaceable>service</replaceable></term>
+          <listitem>
+	    <para>
+	      Remove a service from the default zone. This option can be specified multiple times. 
+	    </para>
+	    <para>
+	      The service is one of the firewalld provided services. To get a list of the supported services, use <command>firewall-cmd --get-services</command>.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+          <term><option>-s</option> <replaceable>service</replaceable></term>
+          <term><option>--service</option>=<replaceable>service</replaceable></term>
+          <listitem>
+	    <para>
+	      Add a service to the default zone. This option can be specified multiple times. 
+	    </para>
+	    <para>
+	      The service is one of the firewalld provided services. To get a list of the supported services, use <command>firewall-cmd --get-services</command>.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+          <term><option>-p</option> <replaceable>portid</replaceable><optional>-<replaceable>portid</replaceable></optional>:<replaceable>protocol</replaceable></term>
+          <term><option>--port</option>=<replaceable>portid</replaceable><optional>-<replaceable>portid</replaceable></optional>:<replaceable>protocol</replaceable></term>
+          <listitem>
+	    <para>
+	      Add the port to the default zone. This option can be specified multiple times.
+	    </para>
+	    <para>
+	      The port can either be a single port number or a port range <replaceable>portid</replaceable>-<replaceable>portid</replaceable>. The protocol can either be <literal>tcp</literal> or <literal>udp</literal>.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+          <term><option>-t</option> <replaceable>interface</replaceable></term>
+          <term><option>--trust</option>=<replaceable>interface</replaceable></term>
+          <listitem>
+	    <para>
+	      This option will result in a warning message.
+	    </para>
+	    <para>
+	      Mark an interface as trusted. This option can be specified multiple times. The interface will be bound to the trusted zone.
+	    </para>
+	    <para>
+	      If the interface is used in a NetworkManager managed connection or if there is an ifcfg file for this interface, the zone will be changed to the zone defined in the configuration as soon as it gets activated. To change the zone of a connection use <command>nm-connection-editor</command> and set the zone to trusted, for an ifcfg file, use an editor and add "ZONE=trusted". If the zone is not defined in the ifcfg file, the firewalld default zone will be used.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+          <term><option>-m</option> <replaceable>interface</replaceable></term>
+          <term><option>--masq</option>=<replaceable>interface</replaceable></term>
+          <listitem>
+	    <para>
+	      This option will result in a warning message.
+	    </para>
+	    <para>
+	      Masquerading will be enabled in the default zone. The interface argument will be ignored. This is for <emphasis>IPv4</emphasis> only.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+          <term><option>--custom-rules</option>=<optional><replaceable>type</replaceable>:</optional><optional><replaceable>table</replaceable>:</optional><replaceable>filename</replaceable></term>
+          <listitem>
+	    <para>
+	      This option will result in a warning message and will be ignored.
+	    </para>
+	    <para>
+	      Custom rule files are not supported by firewalld.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+          <term><option>--forward-port</option>=if=<replaceable>interface</replaceable>:port=<replaceable>port</replaceable>:proto=<replaceable>protocol</replaceable><optional>:toport=<replaceable>destination port</replaceable>:</optional><optional>:toaddr=<replaceable>destination address</replaceable></optional></term>
+          <listitem>
+	    <para>
+	      This option will result in a warning message.
+	    </para>
+	    <para>
+	      Add the <emphasis>IPv4</emphasis> forward port in the default zone. This option can be specified multiple times. 
+	    </para>
+	    <para>
+	      The port can either be a single port number <replaceable>portid</replaceable> or a port range <replaceable>portid</replaceable>-<replaceable>portid</replaceable>. The protocol can either be <literal>tcp</literal> or <literal>udp</literal>. The destination address is an IP address.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+          <term><option>--block-icmp</option>=<replaceable>icmptype</replaceable></term>
+          <listitem>
+	    <para>
+	      This option will result in a warning message.
+	    </para>
+	    <para>
+	      Add an ICMP block for <replaceable>icmptype</replaceable> in the default zone. This option can be specified multiple times.
+	    </para>
+	    <para>
+	      The <replaceable>icmptype</replaceable> is the one of the icmp types firewalld supports. To get a listing of supported icmp types: <command>firewall-cmd --get-icmptypes</command>
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+      </variablelist>
+    </refsect2>
+
+    <refsect2 id="zone_options">
+      <title>Zone Options</title>
+      <variablelist>
+	<varlistentry>
+	  <term><option>--get-default-zone</option></term>
+	  <listitem>
+	    <para>
+	      Print default zone for connections and interfaces.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><option>--set-default-zone</option>=<replaceable>zone</replaceable></term>
+	  <listitem>
+	    <para>
+	      Set default zone for connections and interfaces where no zone has been selected. Setting the default zone changes the zone for the connections or interfaces, that are using the default zone.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><option>--get-zones</option></term>
+	  <listitem>
+	    <para>
+	      Print predefined zones as a space separated list.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><option>--get-services</option></term>
+	  <listitem>
+	    <para>
+	      Print predefined services as a space separated list.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><option>--get-icmptypes</option></term>
+	  <listitem>
+	    <para>
+	      Print predefined icmptypes as a space separated list.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><option>--get-zone-of-interface</option>=<replaceable>interface</replaceable></term>
+	  <listitem>
+	    <para>
+	      Print the name of the zone the <replaceable>interface</replaceable> is bound to or <emphasis>no zone</emphasis>.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><option>--get-zone-of-source</option>=<replaceable>source</replaceable><optional>/<replaceable>mask</replaceable></optional></term>
+	  <listitem>
+	    <para>
+	      Print the name of the zone the <replaceable>source</replaceable><optional>/<replaceable>mask</replaceable></optional> is bound to or <emphasis>no zone</emphasis>.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><option>--info-zone=<replaceable>zone</replaceable></option></term>
+	  <listitem>
+	    <para>
+	      Print information about the zone <replaceable>zone</replaceable>. The output format is:
+	      <programlisting>
+<replaceable>zone</replaceable>
+  interfaces: <replaceable>interface1</replaceable> ..
+  sources: <replaceable>source1</replaceable> ..
+  services: <replaceable>service1</replaceable> ..
+  ports: <replaceable>port1</replaceable> ..
+  protocols: <replaceable>protocol1</replaceable> ..
+  forward-ports:
+        <replaceable>forward-port1</replaceable>
+        ..
+  icmp-blocks: <replaceable>icmp-type1</replaceable> ..
+  rich rules:
+        <replaceable>rich-rule1</replaceable>
+        ..
+              </programlisting>
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><option>--list-all-zones</option></term>
+	  <listitem>
+	    <para>
+	      List everything added for or enabled in all zones. The output format is:
+	      <programlisting>
+<replaceable>zone1</replaceable>
+  interfaces: <replaceable>interface1</replaceable> ..
+  sources: <replaceable>source1</replaceable> ..
+  services: <replaceable>service1</replaceable> ..
+  ports: <replaceable>port1</replaceable> ..
+  protocols: <replaceable>protocol1</replaceable> ..
+  forward-ports:
+        <replaceable>forward-port1</replaceable>
+        ..
+  icmp-blocks: <replaceable>icmp-type1</replaceable> ..
+  rich rules:
+        <replaceable>rich-rule1</replaceable>
+        ..
+..
+              </programlisting>
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+          <term><option>--new-zone</option>=<replaceable>zone</replaceable></term>
+          <listitem>
+            <para>
+              Add a new permanent zone.
+            </para>
+          </listitem>
+	</varlistentry>
+
+	<varlistentry>
+          <term><option>--delete-zone</option>=<replaceable>zone</replaceable></term>
+          <listitem>
+            <para>
+              Delete an existing permanent zone.
+            </para>
+          </listitem>
+	</varlistentry>
+	<varlistentry>
+         <term><option>--zone</option>=<replaceable>zone</replaceable> <option>--set-description</option>=<replaceable>description</replaceable></term>
+         <listitem>
+           <para>
+             Set new description to zone
+           </para>
+         </listitem>
+	</varlistentry>
+	<varlistentry>
+         <term><option>--zone</option>=<replaceable>zone</replaceable> <option>--get-description</option></term>
+         <listitem>
+           <para>
+             Print description for zone
+           </para>
+         </listitem>
+	</varlistentry>
+	<varlistentry>
+         <term><option>--zone</option>=<replaceable>zone</replaceable> <option>--set-short</option>=<replaceable>description</replaceable></term>
+         <listitem>
+           <para>
+             Set short description to zone
+           </para>
+         </listitem>
+	</varlistentry>
+	<varlistentry>
+         <term><option>--zone</option>=<replaceable>zone</replaceable> <option>--get-short</option></term>
+         <listitem>
+           <para>
+             Print short description for zone
+           </para>
+         </listitem>
+	</varlistentry>
+
+	<varlistentry>
+          <term><option>--zone</option>=<replaceable>zone</replaceable> <option>--get-target</option></term>
+          <listitem>
+            <para>
+              Get the target of a permanent zone.
+            </para>
+          </listitem>
+	</varlistentry>
+
+	<varlistentry>
+          <term><option>--zone</option>=<replaceable>zone</replaceable> <option>--set-target</option>=<replaceable>zone</replaceable></term>
+          <listitem>
+            <para>
+              Set the target of a permanent zone.
+            </para>
+          </listitem>
+	</varlistentry>
+      </variablelist>
+    </refsect2>
+
+    <refsect2 id="options_to_adapt_and_query_zones">
+      <title>Options to Adapt and Query Zones</title>
+      <para>
+	Options in this section affect only one particular zone. If used with <option>--zone</option>=<replaceable>zone</replaceable> option, they affect the zone <replaceable>zone</replaceable>. If the option is omitted, they affect default zone (see <option>--get-default-zone</option>).
+      </para>
+      <variablelist>
+
+	<!-- list-all -->
+
+	<varlistentry>
+	  <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--list-all</option></term>
+	  <listitem>
+	    <para>
+	      List everything added for or enabled in <replaceable>zone</replaceable>. If zone is omitted, default zone will be used.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<!-- list/add/remove/query service -->
+
+	<varlistentry>
+	  <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--list-services</option></term>
+	  <listitem>
+	    <para>
+	      List services added for <replaceable>zone</replaceable> as a space separated list. If zone is omitted, default zone will be used.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--add-service</option>=<replaceable>service</replaceable></term>
+	  <listitem>
+	    <para>
+	      Add a service for <replaceable>zone</replaceable>. If zone is omitted, default zone will be used. This option can be specified multiple times.
+	    </para>
+	    <para>
+	      The service is one of the firewalld provided services. To get a list of the supported services, use <command>firewall-cmd --get-services</command>.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--remove-service-from-zone</option>=<replaceable>service</replaceable></term>
+	  <listitem>
+	    <para>
+	      Remove a service from <replaceable>zone</replaceable>. This option can be specified multiple times. If zone is omitted, default zone will be used.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--query-service</option>=<replaceable>service</replaceable></term>
+	  <listitem>
+	    <para>
+	      Return whether <replaceable>service</replaceable> has been added for <replaceable>zone</replaceable>. If zone is omitted, default zone will be used. Returns 0 if true, 1 otherwise.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<!-- list/add/remove/query port -->
+
+	<varlistentry>
+	  <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--list-ports</option></term>
+	  <listitem>
+	    <para>
+	      List ports added for <replaceable>zone</replaceable> as a space separated list. A port is of the form <replaceable>portid</replaceable><optional>-<replaceable>portid</replaceable></optional>/<replaceable>protocol</replaceable>, it can be either a port and protocol pair or a port range with a protocol. If zone is omitted, default zone will be used.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--add-port</option>=<replaceable>portid</replaceable><optional>-<replaceable>portid</replaceable></optional>/<replaceable>protocol</replaceable></term>
+	  <listitem>
+	    <para>
+	      Add the port for <replaceable>zone</replaceable>. If zone is omitted, default zone will be used. This option can be specified multiple times.
+	    </para>
+	    <para>
+	      The port can either be a single port number or a port range <replaceable>portid</replaceable>-<replaceable>portid</replaceable>. The protocol can either be <literal>tcp</literal> or <literal>udp</literal>.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--remove-port</option>=<replaceable>portid</replaceable><optional>-<replaceable>portid</replaceable></optional>/<replaceable>protocol</replaceable></term>
+	  <listitem>
+	    <para>
+	      Remove the port from <replaceable>zone</replaceable>. If zone is omitted, default zone will be used. This option can be specified multiple times.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--query-port</option>=<replaceable>portid</replaceable><optional>-<replaceable>portid</replaceable></optional>/<replaceable>protocol</replaceable></term>
+	  <listitem>
+	    <para>
+	      Return whether the port has been added for <replaceable>zone</replaceable>. If zone is omitted, default zone will be used. Returns 0 if true, 1 otherwise.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<!-- list/add/remove/query protocol -->
+
+       <varlistentry>
+         <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--list-protocols</option></term>
+         <listitem>
+           <para>
+             List protocols added for <replaceable>zone</replaceable> as a space separated list. If zone is omitted, default zone will be used.
+           </para>
+         </listitem>
+       </varlistentry>
+
+       <varlistentry>
+         <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--add-protocol</option>=<replaceable>protocol</replaceable></term>
+         <listitem>
+           <para>
+             Add the protocol for <replaceable>zone</replaceable>. If zone is omitted, default zone will be used. This option can be specified multiple times. If a timeout is supplied, the rule will be active for the specified amount of time and will be removed automatically afterwards.
+             <replaceable>timeval</replaceable> is either a number (of seconds) or number followed by one of characters <literal>s</literal> (seconds), <literal>m</literal> (minutes), <literal>h</literal> (hours), for example <literal>20m</literal> or <literal>1h</literal>.
+           </para>
+           <para>
+             The protocol can be any protocol supported by the system. Please have a look at <filename>/etc/protocols</filename> for supported protocols.
+           </para>
+         </listitem>
+       </varlistentry>
+
+       <varlistentry>
+         <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--remove-protcol</option>=<replaceable>protocol</replaceable></term>
+         <listitem>
+           <para>
+             Remove the protocol from <replaceable>zone</replaceable>. If zone is omitted, default zone will be used. This option can be specified multiple times.
+           </para>
+         </listitem>
+       </varlistentry>
+
+       <varlistentry>
+         <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--query-protocol</option>=<replaceable>protocol</replaceable></term>
+         <listitem>
+           <para>
+             Return whether the protocol has been added for <replaceable>zone</replaceable>. If zone is omitted, default zone will be used. Returns 0 if true, 1 otherwise.
+           </para>
+         </listitem>
+       </varlistentry>
+
+	<!-- list/add/remove/query icmp-block -->
+
+	<varlistentry>
+	  <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--list-icmp-blocks</option></term>
+	  <listitem>
+	    <para>
+	      List Internet Control Message Protocol (ICMP) type blocks added for <replaceable>zone</replaceable> as a space separated list. If zone is omitted, default zone will be used.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--add-icmp-block</option>=<replaceable>icmptype</replaceable></term>
+	  <listitem>
+	    <para>
+	      Add an ICMP block for <replaceable>icmptype</replaceable> for <replaceable>zone</replaceable>. If zone is omitted, default zone will be used. This option can be specified multiple times.
+	    </para>
+	    <para>
+	      The <replaceable>icmptype</replaceable> is the one of the icmp types firewalld supports. To get a listing of supported icmp types: <command>firewall-cmd --get-icmptypes</command>
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--remove-icmp-block</option>=<replaceable>icmptype</replaceable></term>
+	  <listitem>
+	    <para>
+	      Remove the ICMP block for <replaceable>icmptype</replaceable> from <replaceable>zone</replaceable>. If zone is omitted, default zone will be used. This option can be specified multiple times.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--query-icmp-block</option>=<replaceable>icmptype</replaceable></term>
+	  <listitem>
+	    <para>
+	      Return whether an ICMP block for <replaceable>icmptype</replaceable> has been added for <replaceable>zone</replaceable>. If zone is omitted, default zone will be used. Returns 0 if true, 1 otherwise.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<!-- list/add/remove/query forward-port -->
+
+	<varlistentry>
+	  <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--list-forward-ports</option></term>
+	  <listitem>
+	    <para>
+	      List <emphasis>IPv4</emphasis> forward ports added for <replaceable>zone</replaceable> as a space separated list. If zone is omitted, default zone will be used.
+	    </para>
+	    <para>
+	      For <emphasis>IPv6</emphasis> forward ports, please use the rich language.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--add-forward-port</option>=port=<replaceable>portid</replaceable><optional>-<replaceable>portid</replaceable></optional>:proto=<replaceable>protocol</replaceable><optional>:toport=<replaceable>portid</replaceable><optional>-<replaceable>portid</replaceable></optional></optional><optional>:toaddr=<replaceable>address</replaceable><optional>/<replaceable>mask</replaceable></optional></optional></term>
+	  <listitem>
+	    <para>
+	      Add the <emphasis>IPv4</emphasis> forward port for <replaceable>zone</replaceable>. If zone is omitted, default zone will be used. This option can be specified multiple times.
+	    </para>
+	    <para>
+	      The port can either be a single port number <replaceable>portid</replaceable> or a port range <replaceable>portid</replaceable>-<replaceable>portid</replaceable>. The protocol can either be <literal>tcp</literal> or <literal>udp</literal>. The destination address is a simple IP address.
+	    </para>
+	    <para>
+	      For <emphasis>IPv6</emphasis> forward ports, please use the rich language.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--remove-forward-port</option>=port=<replaceable>portid</replaceable><optional>-<replaceable>portid</replaceable></optional>:proto=<replaceable>protocol</replaceable><optional>:toport=<replaceable>portid</replaceable><optional>-<replaceable>portid</replaceable></optional></optional><optional>:toaddr=<replaceable>address</replaceable><optional>/<replaceable>mask</replaceable></optional></optional></term>
+	  <listitem>
+	    <para>
+	      Remove the <emphasis>IPv4</emphasis> forward port from <replaceable>zone</replaceable>. If zone is omitted, default zone will be used. This option can be specified multiple times.
+	    </para>
+	    <para>
+	      For <emphasis>IPv6</emphasis> forward ports, please use the rich language.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--query-forward-port</option>=port=<replaceable>portid</replaceable><optional>-<replaceable>portid</replaceable></optional>:proto=<replaceable>protocol</replaceable><optional>:toport=<replaceable>portid</replaceable><optional>-<replaceable>portid</replaceable></optional></optional><optional>:toaddr=<replaceable>address</replaceable><optional>/<replaceable>mask</replaceable></optional></optional></term>
+	  <listitem>
+	    <para>
+	      Return whether the <emphasis>IPv4</emphasis> forward port has been added for <replaceable>zone</replaceable>. If zone is omitted, default zone will be used. Returns 0 if true, 1 otherwise.
+	    </para>
+	    <para>
+	      For <emphasis>IPv6</emphasis> forward ports, please use the rich language.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<!-- add/remove/query masquerade -->
+
+	<varlistentry>
+	  <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--add-masquerade</option></term>
+	  <listitem>
+	    <para>
+	      Enable <emphasis>IPv4</emphasis> masquerade for <replaceable>zone</replaceable>. If zone is omitted, default zone will be used. Masquerading is useful if the machine is a router and machines connected over an interface in another zone should be able to use the first connection.
+	    </para>
+	    <para>
+	      For <emphasis>IPv6</emphasis> masquerading, please use the rich language.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--remove-masquerade</option></term>
+	  <listitem>
+	    <para>
+	      Disable <emphasis>IPv4</emphasis> masquerade for <replaceable>zone</replaceable>. If zone is omitted, default zone will be used.
+	    </para>
+	    <para>
+	      For <emphasis>IPv6</emphasis> masquerading, please use the rich language.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--query-masquerade</option></term>
+	  <listitem>
+	    <para>
+	      Return whether <emphasis>IPv4</emphasis> masquerading has been enabled for <replaceable>zone</replaceable>. If zone is omitted, default zone will be used. Returns 0 if true, 1 otherwise.
+	    </para>
+	    <para>
+	      For <emphasis>IPv6</emphasis> masquerading, please use the rich language.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<!-- list/add/remove/query rich rule -->
+
+	<varlistentry>
+	  <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--list-rich-rules</option></term>
+	  <listitem>
+	    <para>
+	      List rich language rules added for <replaceable>zone</replaceable> as a newline separated list. If zone is omitted, default zone will be used.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--add-rich-rule</option>='<replaceable>rule</replaceable>'</term>
+	  <listitem>
+	    <para>
+	      Add rich language rule '<replaceable>rule</replaceable>' for <replaceable>zone</replaceable>. This option can be specified multiple times. If zone is omitted, default zone will be used.
+	    </para>
+	    <para>
+	      For the rich language rule syntax, please have a look at <citerefentry><refentrytitle>firewalld.richlanguage</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--remove-rich-rule</option>='<replaceable>rule</replaceable>'</term>
+	  <listitem>
+	    <para>
+	      Remove rich language rule '<replaceable>rule</replaceable>' from <replaceable>zone</replaceable>. This option can be specified multiple times. If zone is omitted, default zone will be used.
+	    </para>
+	    <para>
+	      For the rich language rule syntax, please have a look at <citerefentry><refentrytitle>firewalld.richlanguage</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--query-rich-rule</option>='<replaceable>rule</replaceable>'</term>
+	  <listitem>
+	    <para>
+	      Return whether a rich language rule '<replaceable>rule</replaceable>' has been added for <replaceable>zone</replaceable>. If zone is omitted, default zone will be used. Returns 0 if true, 1 otherwise.
+	    </para>
+	    <para>
+	      For the rich language rule syntax, please have a look at <citerefentry><refentrytitle>firewalld.richlanguage</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
+	    </para>
+	  </listitem>
+	</varlistentry>
+      </variablelist>
+    </refsect2>
+
+    <refsect2 id="options_to_handle_bindings_of_interfaces">
+      <title>Options to Handle Bindings of Interfaces</title>
+      <para>
+	Binding an interface to a zone means that this zone settings are used to restrict traffic via the interface.
+      </para>
+      <para>
+	Options in this section affect only one particular zone. If used with <option>--zone</option>=<replaceable>zone</replaceable> option, they affect the zone <replaceable>zone</replaceable>. If the option is omitted, they affect default zone (see <option>--get-default-zone</option>).
+      </para>
+      <para>
+	For a list of predefined zones use <command>firewall-cmd --get-zones</command>.
+      </para>
+      <para>
+	An interface name is a string up to 16 characters long, that may not contain <option>' '</option>, <option>'/'</option>, <option>'!'</option> and <option>'*'</option>.
+      </para>
+      <variablelist>
+	<varlistentry>
+	  <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--list-interfaces</option></term>
+	  <listitem>
+	    <para>
+	      List interfaces that are bound to zone <replaceable>zone</replaceable> as a space separated list. If zone is omitted, default zone will be used.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--add-interface</option>=<replaceable>interface</replaceable></term>
+	  <listitem>
+	    <para>
+	      Bind interface <replaceable>interface</replaceable> to zone <replaceable>zone</replaceable>. If zone is omitted, default zone will be used.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--change-interface</option>=<replaceable>interface</replaceable></term>
+	  <listitem>
+	    <para>
+	      Change zone the interface <replaceable>interface</replaceable> is bound to to zone <replaceable>zone</replaceable>. If zone is omitted, default zone will be used. If old and new zone are the same, the call will be ignored without an error. If the interface has not been bound to a zone before, it will behave like <option>--add-interface</option>.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--query-interface</option>=<replaceable>interface</replaceable></term>
+	  <listitem>
+	    <para>
+	      Query whether interface <replaceable>interface</replaceable> is bound to zone <replaceable>zone</replaceable>. Returns 0 if true, 1 otherwise.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--remove-interface</option>=<replaceable>interface</replaceable></term>
+	  <listitem>
+	    <para>
+	      Remove binding of interface <replaceable>interface</replaceable> from zone <replaceable>zone</replaceable>. If zone is omitted, default zone will be used.
+	    </para>
+	  </listitem>
+	</varlistentry>
+      </variablelist>
+    </refsect2>
+
+    <refsect2 id="options_to_handle_bindings_of_sources">
+      <title>Options to Handle Bindings of Sources</title>
+      <para>
+	Binding a source to a zone means that this zone settings will be used to restrict traffic from this source.
+      </para>
+      <para>
+	A source address or address range is either an IP address or a network IP address with a mask for IPv4 or IPv6 or a MAC address (no mask). For IPv4, the mask can be a network mask or a plain number. For IPv6 the mask is a plain number. The use of host names is not supported.
+      </para>
+      <para>
+	Options in this section affect only one particular zone. If used with <option>--zone</option>=<replaceable>zone</replaceable> option, they affect the zone <replaceable>zone</replaceable>. If the option is omitted, they affect default zone (see <option>--get-default-zone</option>).
+      </para>
+      <para>
+	For a list of predefined zones use <command>firewall-cmd --get-zones</command>.
+      </para>
+      <variablelist>
+	<varlistentry>
+	  <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--list-sources</option></term>
+	  <listitem>
+	    <para>
+	      List sources that are bound to zone <replaceable>zone</replaceable> as a space separated list. If zone is omitted, default zone will be used.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--add-source</option>=<replaceable>source</replaceable><optional>/<replaceable>mask</replaceable></optional></term>
+	  <listitem>
+	    <para>
+	      Bind source <replaceable>source</replaceable><optional>/<replaceable>mask</replaceable></optional> to zone <replaceable>zone</replaceable>. If zone is omitted, default zone will be used.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--change-source</option>=<replaceable>source</replaceable><optional>/<replaceable>mask</replaceable></optional></term>
+	  <listitem>
+	    <para>
+	      Change zone the source <replaceable>source</replaceable><optional>/<replaceable>mask</replaceable></optional> is bound to to zone <replaceable>zone</replaceable>. If zone is omitted, default zone will be used. If old and new zone are the same, the call will be ignored without an error. If the source has not been bound to a zone before, it will behave like <option>--add-source</option>.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--query-source</option>=<replaceable>source</replaceable><optional>/<replaceable>mask</replaceable></optional></term>
+	  <listitem>
+	    <para>
+	      Query whether the source <replaceable>source</replaceable><optional>/<replaceable>mask</replaceable></optional> is bound to the zone <replaceable>zone</replaceable>. Returns 0 if true, 1 otherwise.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><optional><option>--zone</option>=<replaceable>zone</replaceable></optional> <option>--remove-source</option>=<replaceable>source</replaceable><optional>/<replaceable>mask</replaceable></optional></term>
+	  <listitem>
+	    <para>
+	      Remove binding of source <replaceable>source</replaceable><optional>/<replaceable>mask</replaceable></optional> from zone <replaceable>zone</replaceable>. If zone is omitted, default zone will be used.
+	    </para>
+	  </listitem>
+	</varlistentry>
+      </variablelist>
+    </refsect2>
+
+    <refsect2 id="ipset_options">
+      <title>IPSet Options</title>
+      <variablelist>
+	<varlistentry>
+         <term><option>--new-ipset</option>=<replaceable>ipset</replaceable> <option>--type</option>=<replaceable>ipset type</replaceable> <optional><option>--option</option>=<replaceable>ipset option</replaceable><optional>=<replaceable>value</replaceable></optional></optional></term>
+         <listitem>
+           <para>
+             Add a new permanent ipset with specifying the type and optional options.
+           </para>
+         </listitem>
+       </varlistentry>
+       <varlistentry>
+         <term><option>--delete-ipset</option>=<replaceable>ipset</replaceable></term>
+         <listitem>
+           <para>
+             Delete an existing permanent ipset.
+           </para>
+         </listitem>
+       </varlistentry>
+	<varlistentry>
+	  <term><option>--info-ipset=<replaceable>ipset</replaceable></option></term>
+	  <listitem>
+	    <para>
+	      Print information about the ipset <replaceable>ipset</replaceable>. The output format is:
+	      <programlisting>
+<replaceable>ipset</replaceable>
+  type: <replaceable>type</replaceable>
+  options: <replaceable>option1[=value1]</replaceable> ..
+  entries: <replaceable>entry1</replaceable> ..
+              </programlisting>
+	    </para>
+	  </listitem>
+	</varlistentry>
+	<varlistentry>
+	  <term><option>--get-ipsets</option></term>
+	  <listitem>
+	    <para>
+	      Print predefined ipsets as a space separated list.
+	    </para>
+	  </listitem>
+	</varlistentry>
+	<varlistentry>
+         <term><option>--ipset</option>=<replaceable>ipset</replaceable> <option>--add-entry</option>=<replaceable>entry</replaceable></term>
+         <listitem>
+           <para>
+             Add a new entry to the ipset.
+           </para>
+         </listitem>
+       </varlistentry>
+
+	<varlistentry>
+         <term><option>--ipset</option>=<replaceable>ipset</replaceable> <option>--remove-entry</option>=<replaceable>entry</replaceable></term>
+         <listitem>
+           <para>
+             Remove an entry from the ipset.
+           </para>
+         </listitem>
+       </varlistentry>
+
+	<varlistentry>
+         <term><option>--ipset</option>=<replaceable>ipset</replaceable> <option>--query-entry</option>=<replaceable>entry</replaceable></term>
+         <listitem>
+           <para>
+	     Return whether the entry has been added to an ipset. Returns 0 if true, 1 otherwise.
+           </para>
+         </listitem>
+       </varlistentry>
+
+	<varlistentry>
+         <term><option>--ipset</option>=<replaceable>ipset</replaceable> <option>--get-entries</option></term>
+         <listitem>
+           <para>
+             List all entries of the ipset.
+           </para>
+         </listitem>
+       </varlistentry>
+       <varlistentry>
+         <term><option>--ipset</option>=<replaceable>ipset</replaceable> <option>--set-description</option>=<replaceable>description</replaceable></term>
+         <listitem>
+           <para>
+             Set new description to ipset
+           </para>
+         </listitem>
+       </varlistentry>
+       <varlistentry>
+         <term><option>--ipset</option>=<replaceable>ipset</replaceable> <option>--get-description</option></term>
+         <listitem>
+           <para>
+             Print description for ipset
+           </para>
+         </listitem>
+       </varlistentry>
+       <varlistentry>
+         <term><option>--ipset</option>=<replaceable>ipset</replaceable> <option>--set-short</option>=<replaceable>description</replaceable></term>
+         <listitem>
+           <para>
+             Set new short description to ipset
+           </para>
+         </listitem>
+       </varlistentry>
+       <varlistentry>
+         <term><option>--ipset</option>=<replaceable>ipset</replaceable> <option>--get-short</option></term>
+         <listitem>
+           <para>
+             Print short description for ipset
+           </para>
+         </listitem>
+       </varlistentry>
+      </variablelist>
+    </refsect2>
+
+    <refsect2 id="service_options">
+      <title>Service Options</title>
+      <variablelist>
+	<varlistentry>
+	  <term><option>--info-service=<replaceable>service</replaceable></option></term>
+	  <listitem>
+	    <para>
+	      Print information about the service <replaceable>service</replaceable>. The output format is:
+	      <programlisting>
+<replaceable>service</replaceable>
+  ports: <replaceable>port1</replaceable> ..
+  protocols: <replaceable>protocol1</replaceable> ..
+  modules: <replaceable>module1</replaceable> ..
+  destination: <replaceable>ipv1</replaceable>:<replaceable>address1</replaceable> ..
+              </programlisting>
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+       <varlistentry>
+         <term><option>--new-service</option>=<replaceable>service</replaceable></term>
+         <listitem>
+           <para>
+             Add a new permanent service.
+           </para>
+         </listitem>
+       </varlistentry>
+
+       <varlistentry>
+         <term><option>--delete-service</option>=<replaceable>service</replaceable></term>
+         <listitem>
+           <para>
+             Delete an existing permanent service.
+           </para>
+         </listitem>
+       </varlistentry>
+       <varlistentry>
+         <term><option>--service</option>=<replaceable>service</replaceable> <option>--set-description</option>=<replaceable>description</replaceable></term>
+         <listitem>
+           <para>
+             Set new description to service
+           </para>
+         </listitem>
+       </varlistentry>
+       <varlistentry>
+         <term><option>--service</option>=<replaceable>service</replaceable> <option>--get-description</option></term>
+         <listitem>
+           <para>
+             Print description for service
+           </para>
+         </listitem>
+       </varlistentry>
+       <varlistentry>
+         <term><option>--service</option>=<replaceable>service</replaceable> <option>--set-short</option>=<replaceable>description</replaceable></term>
+         <listitem>
+           <para>
+             Set short description to service
+           </para>
+         </listitem>
+       </varlistentry>
+       <varlistentry>
+         <term><option>--service</option>=<replaceable>service</replaceable> <option>--get-short</option></term>
+         <listitem>
+           <para>
+             Print short description for service
+           </para>
+         </listitem>
+       </varlistentry>
+       <varlistentry>
+         <term><option>--service</option>=<replaceable>service</replaceable> <option>--add-port</option>=<replaceable>portid</replaceable><optional>-<replaceable>portid</replaceable></optional>/<replaceable>protocol</replaceable></term>
+         <listitem>
+           <para>
+             Add a new port to the permanent service.
+           </para>
+         </listitem>
+       </varlistentry>
+       <varlistentry>
+         <term><option>--service</option>=<replaceable>service</replaceable> <option>--remove-port</option>=<replaceable>portid</replaceable><optional>-<replaceable>portid</replaceable></optional>/<replaceable>protocol</replaceable></term>
+         <listitem>
+           <para>
+             Remove a port from the permanent service.
+           </para>
+         </listitem>
+       </varlistentry>
+       <varlistentry>
+         <term><option>--service</option>=<replaceable>service</replaceable> <option>--query-port</option>=<replaceable>portid</replaceable><optional>-<replaceable>portid</replaceable></optional>/<replaceable>protocol</replaceable></term>
+         <listitem>
+           <para>
+             Return wether the port has been added to the permanent service.
+           </para>
+         </listitem>
+       </varlistentry>
+       <varlistentry>
+         <term><option>--service</option>=<replaceable>service</replaceable> <option>--get-ports</option></term>
+         <listitem>
+           <para>
+             List ports added to the permanent service.
+           </para>
+         </listitem>
+       </varlistentry>
+
+       <varlistentry>
+         <term><option>--service</option>=<replaceable>service</replaceable> <option>--add-protocol</option>=<replaceable>protocol</replaceable></term>
+         <listitem>
+           <para>
+             Add a new protocol to the permanent service.
+           </para>
+         </listitem>
+       </varlistentry>
+       <varlistentry>
+         <term><option>--service</option>=<replaceable>service</replaceable> <option>--remove-protocol</option>=<replaceable>protocol</replaceable></term>
+         <listitem>
+           <para>
+             Remove a protocol from the permanent service.
+           </para>
+         </listitem>
+       </varlistentry>
+       <varlistentry>
+         <term><option>--service</option>=<replaceable>service</replaceable> <option>--query-protocol</option>=<replaceable>protocol</replaceable></term>
+         <listitem>
+           <para>
+             Return wether the protocol has been added to the permanent service.
+           </para>
+         </listitem>
+       </varlistentry>
+       <varlistentry>
+         <term><option>--service</option>=<replaceable>service</replaceable> <option>--get-protocols</option></term>
+         <listitem>
+           <para>
+             List protocols added to the permanent service.
+           </para>
+         </listitem>
+       </varlistentry>
+
+       <varlistentry>
+         <term><option>--service</option>=<replaceable>service</replaceable> <option>--add-module</option>=<replaceable>module</replaceable></term>
+         <listitem>
+           <para>
+             Add a new module to the permanent service.
+           </para>
+         </listitem>
+       </varlistentry>
+       <varlistentry>
+         <term><option>--service</option>=<replaceable>service</replaceable> <option>--remove-module</option>=<replaceable>module</replaceable></term>
+         <listitem>
+           <para>
+             Remove a module from the permanent service.
+           </para>
+         </listitem>
+       </varlistentry>
+       <varlistentry>
+         <term><option>--service</option>=<replaceable>service</replaceable> <option>--query-module</option>=<replaceable>module</replaceable></term>
+         <listitem>
+           <para>
+             Return wether the module has been added to the permanent service.
+           </para>
+         </listitem>
+       </varlistentry>
+       <varlistentry>
+         <term><option>--service</option>=<replaceable>service</replaceable> <option>--get-modules</option></term>
+         <listitem>
+           <para>
+             List modules added to the permanent service.
+           </para>
+         </listitem>
+       </varlistentry>
+
+       <varlistentry>
+         <term><option>--service</option>=<replaceable>service</replaceable> <option>--add-destination</option>=<replaceable>ipv</replaceable>:<replaceable>address</replaceable><optional>/<replaceable>mask</replaceable></optional></term>
+         <listitem>
+           <para>
+             Set destination for ipv to address[/mask] in the permanent service.
+           </para>
+         </listitem>
+       </varlistentry>
+       <varlistentry>
+         <term><option>--service</option>=<replaceable>service</replaceable> <option>--remove-destination</option>=<replaceable>ipv</replaceable></term>
+         <listitem>
+           <para>
+             Remove the destination for ipv from the permanent service.
+           </para>
+         </listitem>
+       </varlistentry>
+       <varlistentry>
+         <term><option>--service</option>=<replaceable>service</replaceable> <option>--query-destination</option>=<replaceable>ipv</replaceable>:<replaceable>address</replaceable><optional>/<replaceable>mask</replaceable></optional></term>
+         <listitem>
+           <para>
+             Return wether the destination ipv to address[/mask] has been set in the permanent service.
+           </para>
+         </listitem>
+       </varlistentry>
+       <varlistentry>
+         <term><option>--service</option>=<replaceable>service</replaceable> <option>--get-destinations</option></term>
+         <listitem>
+           <para>
+             List destinations added to the permanent service.
+           </para>
+         </listitem>
+       </varlistentry>
+     </variablelist>
+    </refsect2>
+
+    <refsect2 id="icmptype_options">
+      <title>Internet Control Message Protocol (ICMP) type Options</title>
+      <variablelist>
+	<varlistentry>
+	  <term><option>--info-icmptype=<replaceable>icmptype</replaceable></option></term>
+	  <listitem>
+	    <para>
+	      Print information about the icmptype <replaceable>icmptype</replaceable>. The output format is:
+	      <programlisting>
+<replaceable>icmptype</replaceable>
+  destination: <replaceable>ipv1</replaceable> ..
+              </programlisting>
+	    </para>
+	  </listitem>
+	</varlistentry>
+       <varlistentry>
+         <term><option>--new-icmptype</option>=<replaceable>icmptype</replaceable></term>
+         <listitem>
+           <para>
+             Add a new permanent icmptype.
+           </para>
+         </listitem>
+       </varlistentry>
+
+       <varlistentry>
+         <term><option>--delete-icmptype</option>=<replaceable>icmptype</replaceable></term>
+         <listitem>
+           <para>
+             Delete an existing permanent icmptype.
+           </para>
+         </listitem>
+       </varlistentry>
+       <varlistentry>
+         <term> <option>--icmptype</option>=<replaceable>icmptype</replaceable> <option>--set-description</option>=<replaceable>description</replaceable></term>
+         <listitem>
+           <para>
+             Set new description to icmptype
+           </para>
+         </listitem>
+       </varlistentry>
+       <varlistentry>
+         <term> <option>--icmptype</option>=<replaceable>icmptype</replaceable> <option>--get-description</option></term>
+         <listitem>
+           <para>
+             Print description for icmptype
+           </para>
+         </listitem>
+       </varlistentry>
+
+       <varlistentry>
+         <term> <option>--icmptype</option>=<replaceable>icmptype</replaceable> <option>--set-short</option>=<replaceable>description</replaceable></term>
+         <listitem>
+           <para>
+             Set short description to icmptype
+           </para>
+         </listitem>
+       </varlistentry>
+       <varlistentry>
+         <term> <option>--icmptype</option>=<replaceable>icmptype</replaceable> <option>--get-short</option></term>
+         <listitem>
+           <para>
+             Print short description for icmptype
+           </para>
+         </listitem>
+       </varlistentry>
+
+       <varlistentry>
+         <term><option>--icmptype</option>=<replaceable>icmptype</replaceable> <option>--add-destination</option>=<replaceable>ipv</replaceable></term>
+         <listitem>
+           <para>
+             Enable destination for ipv in permanent icmptype. ipv is one of <literal>ipv4</literal> or <literal>ipv6</literal>.
+           </para>
+         </listitem>
+       </varlistentry>
+       <varlistentry>
+         <term><option>--icmptype</option>=<replaceable>icmptype</replaceable> <option>--remove-destination</option>=<replaceable>ipv</replaceable></term>
+         <listitem>
+           <para>
+             Disable destination for ipv in permanent icmptype. ipv is one of <literal>ipv4</literal> or <literal>ipv6</literal>.
+           </para>
+         </listitem>
+       </varlistentry>
+       <varlistentry>
+         <term><option>--icmptype</option>=<replaceable>icmptype</replaceable> <option>--query-destination</option>=<replaceable>ipv</replaceable></term>
+         <listitem>
+           <para>
+             Return whether destination for ipv is enabled in permanent icmptype. ipv is one of <literal>ipv4</literal> or <literal>ipv6</literal>.
+           </para>
+         </listitem>
+       </varlistentry>
+       <varlistentry>
+         <term><option>--icmptype</option>=<replaceable>icmptype</replaceable> <option>--get-destinations</option></term>
+         <listitem>
+           <para>
+              List destinations in permanent icmptype.
+           </para>
+         </listitem>
+       </varlistentry>
+      </variablelist>
+    </refsect2>
+
+    <refsect2 id="direct_options">
+      <title>Direct Options</title>
+      <para>
+	The direct options give a more direct access to the firewall. These options require user to know basic iptables concepts, i.e. <literal>table</literal> (filter/mangle/nat/...), <literal>chain</literal> (INPUT/OUTPUT/FORWARD/...), <literal>commands</literal> (-A/-D/-I/...), <literal>parameters</literal> (-p/-s/-d/-j/...) and <literal>targets</literal> (ACCEPT/DROP/REJECT/...).
+      </para>
+      <para>
+	Direct options should be used only as a last resort when it's not possible to use for example <option>--add-service</option>=<replaceable>service</replaceable> or <option>--add-rich-rule</option>='<replaceable>rule</replaceable>'.
+      </para>
+      <para>
+	The first argument of each option has to be <literal>ipv4</literal> or <literal>ipv6</literal> or <literal>eb</literal>. With <literal>ipv4</literal> it will be for IPv4 (<citerefentry><refentrytitle>iptables</refentrytitle><manvolnum>8</manvolnum></citerefentry>), with <literal>ipv6</literal> for IPv6 (<citerefentry><refentrytitle>ip6tables</refentrytitle><manvolnum>8</manvolnum></citerefentry>) and with <literal>eb</literal> for ethernet bridges (<citerefentry><refentrytitle>ebtables</refentrytitle><manvolnum>8</manvolnum></citerefentry>).
+      </para>
+      <variablelist>
+
+	<!-- direct chain -->
+
+	<varlistentry>
+	  <term><option>--direct</option> <option>--get-all-chains</option></term>
+	  <listitem>
+	    <para>
+	      Get all chains added to all tables.
+	    </para>
+	    <para>
+	      This option concerns only chains previously added with <option>--direct --add-chain</option>.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><option>--direct</option> <option>--get-chains</option> { <literal>ipv4</literal> | <literal>ipv6</literal> | <literal>eb</literal> } <replaceable>table</replaceable></term>
+	  <listitem>
+	    <para>
+	      Get all chains added to table <replaceable>table</replaceable> as a space separated list.
+	    </para>
+	    <para>
+	      This option concerns only chains previously added with <option>--direct --add-chain</option>.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><option>--direct</option> <option>--add-chain</option> { <literal>ipv4</literal> | <literal>ipv6</literal> | <literal>eb</literal> } <replaceable>table</replaceable> <replaceable>chain</replaceable></term>
+	  <listitem>
+	    <para>
+	      Add a new chain with name <replaceable>chain</replaceable> to table <replaceable>table</replaceable>.
+	    </para>
+	    <para>
+	      There already exist basic chains to use with direct options, for example <literal>INPUT_direct</literal> chain (see <literal>iptables-save | grep direct</literal> output for all of them).
+	      These chains are jumped into before chains for zones, i.e. every rule put into <literal>INPUT_direct</literal> will be checked before rules in zones.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><option>--direct</option> <option>--remove-chain</option> { <literal>ipv4</literal> | <literal>ipv6</literal> | <literal>eb</literal> } <replaceable>table</replaceable> <replaceable>chain</replaceable></term>
+	  <listitem>
+	    <para>
+	      Remove the chain with name <replaceable>chain</replaceable> from table <replaceable>table</replaceable>.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><option>--direct</option> <option>--query-chain</option> { <literal>ipv4</literal> | <literal>ipv6</literal> | <literal>eb</literal> } <replaceable>table</replaceable> <replaceable>chain</replaceable></term>
+	  <listitem>
+	    <para>
+	      Return whether a chain with name <replaceable>chain</replaceable> exists in table <replaceable>table</replaceable>. Returns 0 if true, 1 otherwise.
+	    </para>
+	    <para>
+	      This option concerns only chains previously added with <option>--direct --add-chain</option>.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<!-- direct rule -->
+
+	<varlistentry>
+	  <term><option>--direct</option> <option>--get-all-rules</option></term>
+	  <listitem>
+	    <para>
+	      Get all rules added to all chains in all tables as a newline separated list of the priority and arguments.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><option>--direct</option> <option>--get-rules</option> { <literal>ipv4</literal> | <literal>ipv6</literal> | <literal>eb</literal> } <replaceable>table</replaceable> <replaceable>chain</replaceable></term>
+	  <listitem>
+	    <para>
+	      Get all rules added to chain <replaceable>chain</replaceable> in table <replaceable>table</replaceable> as a newline separated list of the priority and arguments.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><option>--direct</option> <option>--add-rule</option> { <literal>ipv4</literal> | <literal>ipv6</literal> | <literal>eb</literal> } <replaceable>table</replaceable> <replaceable>chain</replaceable> <replaceable>priority</replaceable> <replaceable>args</replaceable></term>
+	  <listitem>
+	    <para>
+	      Add a rule with the arguments <replaceable>args</replaceable> to chain <replaceable>chain</replaceable> in table <replaceable>table</replaceable> with priority <replaceable>priority</replaceable>.
+	    </para>
+	    <para>
+	      The <replaceable>priority</replaceable> is used to order rules. Priority 0 means add rule on top of the chain, with a higher priority the rule will be added further down. Rules with the same priority are on the same level and the order of these rules is not fixed and may change. If you want to make sure that a rule will be added after another one, use a low priority for the first and a higher for the following.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><option>--direct</option> <option>--remove-rule</option> { <literal>ipv4</literal> | <literal>ipv6</literal> | <literal>eb</literal> } <replaceable>table</replaceable> <replaceable>chain</replaceable> <replaceable>priority</replaceable> <replaceable>args</replaceable></term>
+	  <listitem>
+	    <para>
+	      Remove a rule with <replaceable>priority</replaceable> and the arguments <replaceable>args</replaceable> from chain <replaceable>chain</replaceable> in table <replaceable>table</replaceable>.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><option>--direct</option> <option>--remove-rules</option> { <literal>ipv4</literal> | <literal>ipv6</literal> | <literal>eb</literal> } <replaceable>table</replaceable> <replaceable>chain</replaceable></term>
+	  <listitem>
+	    <para>
+	      Remove all rules in the chain with name <replaceable>chain</replaceable> exists in table <replaceable>table</replaceable>.
+	    </para>
+	    <para>
+	      This option concerns only rules previously added with <option>--direct --add-rule</option> in this chain.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><option>--direct</option> <option>--query-rule</option> { <literal>ipv4</literal> | <literal>ipv6</literal> | <literal>eb</literal> } <replaceable>table</replaceable> <replaceable>chain</replaceable> <replaceable>priority</replaceable> <replaceable>args</replaceable></term>
+	  <listitem>
+	    <para>
+	      Return whether a rule with <replaceable>priority</replaceable> and the arguments <replaceable>args</replaceable> exists in chain <replaceable>chain</replaceable> in table <replaceable>table</replaceable>. Returns 0 if true, 1 otherwise.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<!-- direct permanent passthrough -->
+
+	<varlistentry>
+	  <term><option>--direct</option> <option>--get-all-passthroughs</option></term>
+	  <listitem>
+	    <para>
+	      Get all permanent passthrough as a newline separated list of the ipv value and arguments.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><option>--direct</option> <option>--get-passthroughs</option> { <literal>ipv4</literal> | <literal>ipv6</literal> | <literal>eb</literal> } </term>
+	  <listitem>
+	    <para>
+	      Get all permanent passthrough rules for the ipv value as a newline separated list of the priority and arguments.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><option>--direct</option> <option>--add-passthrough</option> { <literal>ipv4</literal> | <literal>ipv6</literal> | <literal>eb</literal> } <replaceable>args</replaceable></term>
+	  <listitem>
+	    <para>
+	      Add a permanent passthrough rule with the arguments <replaceable>args</replaceable> for the ipv value.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><option>--direct</option> <option>--remove-passthrough</option> { <literal>ipv4</literal> | <literal>ipv6</literal> | <literal>eb</literal> } <replaceable>args</replaceable></term>
+	  <listitem>
+	    <para>
+	      Remove a permanent passthrough rule with the arguments <replaceable>args</replaceable> for the ipv value.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><option>--direct</option> <option>--query-passthrough</option> { <literal>ipv4</literal> | <literal>ipv6</literal> | <literal>eb</literal> } <replaceable>args</replaceable></term>
+	  <listitem>
+	    <para>
+	      Return whether a permanent passthrough rule with the arguments <replaceable>args</replaceable> exists for the ipv value. Returns 0 if true, 1 otherwise.
+	    </para>
+	  </listitem>
+	</varlistentry>
+      </variablelist>
+    </refsect2>
+
+    <refsect2 id="lockdown_options">
+      <title>Lockdown Options</title>
+      <para>
+	Local applications or services are able to change the firewall configuration if they are running as root (example: libvirt) or are authenticated using PolicyKit. With this feature administrators can lock the firewall configuration so that only applications on lockdown whitelist are able to request firewall changes.
+      </para>
+      <para>
+	The lockdown access check limits D-Bus methods that are changing firewall rules. Query, list and get methods are not limited.
+      </para>
+      <para>
+	The lockdown feature is a very light version of user and application policies for firewalld and is turned off by default.
+      </para>
+      <variablelist>
+	<varlistentry>
+	  <term><option>--lockdown-on</option></term>
+	  <listitem>
+	    <para>
+	      Enable lockdown. Be careful - if firewall-cmd is not on lockdown whitelist when you enable lockdown you won't be able to disable it again with firewall-cmd, you would need to edit firewalld.conf.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><option>--lockdown-off</option></term>
+	  <listitem>
+	    <para>
+	      Disable lockdown.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><option>--query-lockdown</option></term>
+	  <listitem>
+	    <para>
+	      Query whether lockdown is enabled. Returns 0 if lockdown is enabled, 1 otherwise.
+	    </para>
+	  </listitem>
+	</varlistentry>
+      </variablelist>
+    </refsect2>
+
+    <refsect2 id="lockdown_whitelist_options">
+      <title>Lockdown Whitelist Options</title>
+      <para>
+	The lockdown whitelist can contain <replaceable>commands</replaceable>, <replaceable>contexts</replaceable>, <replaceable>users</replaceable> and <replaceable>user ids</replaceable>.
+      </para>
+      <para>
+	If a command entry on the whitelist ends with an asterisk '*', then all command lines starting with the command will match. If the '*' is not there the absolute command inclusive arguments must match.
+      </para>
+      <para>
+	Commands for user root and others is not always the same. Example: As root <command>/bin/firewall-cmd</command> is used, as a normal user <command>/usr/bin/firewall-cmd</command> is be used on Fedora. 
+      </para>
+      <para>
+	The context is the security (SELinux) context of a running application or service. To get the context of a running application use <command>ps -e --context</command>.
+      </para>
+      <para>
+	<emphasis role="bold">Warning:</emphasis> If the context is unconfined, then this will open access for more than the desired application. 
+      </para>
+      <para>
+	The lockdown whitelist entries are checked in the following order:
+	<simplelist columns="1">
+	  <member>1. <replaceable>context</replaceable></member>
+	  <member>2. <replaceable>uid</replaceable></member>
+	  <member>3. <replaceable>user</replaceable></member>
+	  <member>4. <replaceable>command</replaceable></member>
+	</simplelist>
+      </para>
+      <variablelist>
+	<varlistentry>
+	  <term><option>--list-lockdown-whitelist-commands</option></term>
+	  <listitem>
+	    <para>
+	      List all command lines that are on the whitelist.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><option>--add-lockdown-whitelist-command</option>=<replaceable>command</replaceable></term>
+	  <listitem>
+	    <para>
+	      Add the <replaceable>command</replaceable> to the whitelist.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><option>--remove-lockdown-whitelist-command</option>=<replaceable>command</replaceable></term>
+	  <listitem>
+	    <para>
+	      Remove the <replaceable>command</replaceable> from the whitelist.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><option>--query-lockdown-whitelist-command</option>=<replaceable>command</replaceable></term>
+	  <listitem>
+	    <para>
+	      Query whether the <replaceable>command</replaceable> is on the whitelist. Returns 0 if true, 1 otherwise.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><option>--list-lockdown-whitelist-contexts</option></term>
+	  <listitem>
+	    <para>
+	      List all contexts that are on the whitelist.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><option>--add-lockdown-whitelist-context</option>=<replaceable>context</replaceable></term>
+	  <listitem>
+	    <para>
+	      Add the context <replaceable>context</replaceable> to the whitelist.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><option>--remove-lockdown-whitelist-context</option>=<replaceable>context</replaceable></term>
+	  <listitem>
+	    <para>
+	      Remove the <replaceable>context</replaceable> from the whitelist.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><option>--query-lockdown-whitelist-context</option>=<replaceable>context</replaceable></term>
+	  <listitem>
+	    <para>
+	      Query whether the <replaceable>context</replaceable> is on the whitelist. Returns 0 if true, 1 otherwise.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><option>--list-lockdown-whitelist-uids</option></term>
+	  <listitem>
+	    <para>
+	      List all user ids that are on the whitelist.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><option>--add-lockdown-whitelist-uid</option>=<replaceable>uid</replaceable></term>
+	  <listitem>
+	    <para>
+	      Add the user id <replaceable>uid</replaceable> to the whitelist.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><option>--remove-lockdown-whitelist-uid</option>=<replaceable>uid</replaceable></term>
+	  <listitem>
+	    <para>
+	      Remove the user id <replaceable>uid</replaceable> from the whitelist.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><option>--query-lockdown-whitelist-uid</option>=<replaceable>uid</replaceable></term>
+	  <listitem>
+	    <para>
+	      Query whether the user id <replaceable>uid</replaceable> is on the whitelist. Returns 0 if true, 1 otherwise.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><option>--list-lockdown-whitelist-users</option></term>
+	  <listitem>
+	    <para>
+	      List all user names that are on the whitelist.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><option>--add-lockdown-whitelist-user</option>=<replaceable>user</replaceable></term>
+	  <listitem>
+	    <para>
+	      Add the user name <replaceable>user</replaceable> to the whitelist.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><option>--remove-lockdown-whitelist-user</option>=<replaceable>user</replaceable></term>
+	  <listitem>
+	    <para>
+	      Remove the user name <replaceable>user</replaceable> from the whitelist.
+	    </para>
+	  </listitem>
+	</varlistentry>
+
+	<varlistentry>
+	  <term><option>--query-lockdown-whitelist-user</option>=<replaceable>user</replaceable></term>
+	  <listitem>
+	    <para>
+	      Query whether the user name <replaceable>user</replaceable> is on the whitelist. Returns 0 if true, 1 otherwise.
+	    </para>
+	  </listitem>
+	</varlistentry>
+      </variablelist>
+    </refsect2>
+
+    <refsect2 id="polkit_options">
+      <title>Policy Options</title>
+      <variablelist>
+	<varlistentry>
+          <term><option>--policy-server</option></term>
+          <listitem>
+	    <para>
+	      Change Polkit actions to 'server'  (more restricted)
+	    </para>
+	  </listitem>
+	</varlistentry>
+	<varlistentry>
+          <term><option>--policy-desktop</option></term>
+          <listitem>
+	    <para>
+	      Change Polkit actions to 'desktop'  (less restricted)
+	    </para>
+	  </listitem>
+	</varlistentry>
+      </variablelist>
+    </refsect2>
+
+  </refsect1>
+
+  &seealso;
+
+  &notes;
+
+</refentry>
diff --git a/doc/xml/firewalld.xml b/doc/xml/firewalld.xml
deleted file mode 100644
index 3083727..0000000
--- a/doc/xml/firewalld.xml
+++ /dev/null
@@ -1,237 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN" "http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd"
-[
-<!ENTITY authors SYSTEM "authors.xml">
-<!ENTITY seealso SYSTEM "seealso.xml">
-<!ENTITY notes SYSTEM "notes.xml">
-]>
-
-<!--
-  This file is part of firewalld.
-
-  Copyright (C) 2010-2013 Red Hat, Inc.
-  Authors:
-  Thomas Woerner <twoerner@redhat.com>
-
-  This program is free software; you can redistribute it and/or modify
-  it under the terms of the GNU General Public License as published by
-  the Free Software Foundation; either version 2 of the License, or
-  (at your option) any later version.
-
-  This program is distributed in the hope that it will be useful,
-  but WITHOUT ANY WARRANTY; without even the implied warranty of
-  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-  GNU General Public License for more details.
-
-  You should have received a copy of the GNU General Public License
-  along with this program.  If not, see <http://www.gnu.org/licenses/>.
--->
-
-<refentry id="firewalld">
-
-  <refentryinfo>
-    <title>firewalld</title>
-    <productname>firewalld</productname>
-    &authors;
-  </refentryinfo>
-
-  <refmeta>
-    <refentrytitle>firewalld</refentrytitle>
-    <manvolnum>1</manvolnum>
-  </refmeta>
-
-  <refnamediv>
-    <refname>firewalld</refname>
-    <refpurpose>Dynamic Firewall Manager</refpurpose>
-  </refnamediv>
-
-  <refsynopsisdiv>
-    <cmdsynopsis>
-      <command>firewalld <arg choice="opt" rep="repeat">OPTIONS</arg></command>
-    </cmdsynopsis>
-  </refsynopsisdiv>
-
-  <refsect1>
-    <title>Description</title>
-		
-    <para>
-      firewalld provides a dynamically managed firewall with support for network/firewall zones to define the trust level of network connections or interfaces. It has support for IPv4, IPv6 firewall settings and for ethernet bridges and has a separation of runtime and permanent configuration options. It also supports an interface for services or applications to add firewall rules directly.
-    </para>
-  </refsect1>
-
-  <refsect1>
-    <title>Options</title>
-    <para>
-      These are the command line options of firewalld:
-    </para>
-
-    <variablelist>
-      <varlistentry>
-        <term><option>-h</option></term>
-        <term><option>--help</option></term>
-        <listitem>
-	  <para>
-	    Prints a short help text and exists.
-	  </para>
-	</listitem>
-      </varlistentry>
-
-      <varlistentry>
-        <term><option>--debug</option><optional>=<replaceable>level</replaceable></optional></term>
-        <listitem>
-	  <para>
-	    Set the debug level for firewalld to <replaceable>level</replaceable>. The range of the debug level is 1 (lowest level) to 10 (highest level). The debug output will be written to the firewalld log file <filename class="directory">/var/log/firewalld</filename>.
-	  </para>
-	</listitem>
-      </varlistentry>
-
-      <varlistentry>
-        <term><option>--debug-gc</option></term>
-        <listitem>
-	  <para>
-	    Print garbage collector leak information. The collector runs every 10 seconds and if there are leaks, it prints information about the leaks.
-	  </para>
-	</listitem>
-      </varlistentry>
-
-      <varlistentry>
-        <term><option>--nofork</option></term>
-        <listitem>
-	  <para>
-	    Turn off daemon forking. Force firewalld to run as a foreground process instead of as a daemon in the background.
-	  </para>
-	</listitem>
-      </varlistentry>
-
-      <varlistentry>
-        <term><option>--nopid</option></term>
-        <listitem>
-	  <para>
-	    Disable writing pid file. By default the program will write a pid file. If the program is invoked with this option it will not check for an existing server process.
-	  </para>
-	</listitem>
-      </varlistentry>
-    </variablelist>
-  </refsect1>
-
-  <refsect1 id="concepts">
-    <title>Concepts</title>
-    <para>
-      firewalld has a D-Bus interface for firewall configuration of services and applications. It also has a command line client for the user. Services or applications already using D-Bus can request changes to the firewall with the D-Bus interface directly.  For more information on the firewalld D-Bus interface, please have a look at <citerefentry><refentrytitle>firewalld.dbus</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
-    </para>
-    <para>
-      firewalld provides support for zones, predefined services and ICMP types and has a separation of runtime and permanent configuration options. Permanent configuration is loaded from XML files in <filename class="directory">/usr/lib/firewalld</filename> or <filename class="directory">/etc/firewalld</filename> (see <xref linkend="directories"/>).
-    </para>
-    <para>
-      If NetworkManager is not in use and firewalld gets started after the network is already up, the connections and manually created interfaces are not bound to the zone specified in the ifcfg file.
-      The interfaces will automatically be handled by the default zone.
-      firewalld will also not get notified about network device renames.
-      All this also applies to interfaces that are not controlled by NetworkManager if <replaceable>NM_CONTROLLED=no</replaceable> is set.
-    </para>
-    <para>
-      You can add these interfaces to a zone with <command>firewall-cmd [--permanent] --zone=<replaceable>zone</replaceable> --add-interface=<replaceable>interface</replaceable></command>,
-      but make sure that if there's a /etc/sysconfig/network-scripts/ifcfg-<replaceable>interface</replaceable>,
-      the zone specified there with ZONE=<replaceable>zone</replaceable>
-      is the same (or both are empty/missing for default zone), otherwise the behaviour would be undefined.
-    </para>
-    <para>
-      If firewalld gets reloaded, it will restore the interface bindings that were in place before reloading to keep interface bindings stable in the case of NetworkManager uncontrolled interfaces.
-      This mechanism is not possible in the case of a firewalld service restart.
-    </para>
-    <para>
-      It is essential to keep the ZONE= setting in the ifcfg file consistent to the binding in firewalld in the case of NetworkManager uncontrolled interfaces.
-    </para>
-
-    <refsect2>
-      <title>Zones</title>
-      <para>
-	A network or firewall zone defines the trust level of the interface used for a connection. There are several pre-defined zones provided by firewalld. Zone configuration options and generic information about zones are described in <citerefentry><refentrytitle>firewalld.zone</refentrytitle><manvolnum>5</manvolnum></citerefentry>
-      </para>
-    </refsect2>
-
-    <refsect2>
-      <title>Services</title>
-      <para>
-	A service can be a list of local ports, protocols and destinations and additionally also a list of firewall helper modules automatically loaded if a service is enabled. Service configuration options and generic information about services are described in <citerefentry><refentrytitle>firewalld.service</refentrytitle><manvolnum>5</manvolnum></citerefentry>. The use of predefined services makes it easier for the user to enable and disable access to a service.
-      </para>
-    </refsect2>
-
-    <refsect2>
-      <title>ICMP types</title>
-      <para>
-	The Internet Control Message Protocol (ICMP) is used to exchange information and also error messages in the Internet Protocol (IP). ICMP types can be used in firewalld to limit the exchange of these messages. For more information, please have a look at <citerefentry><refentrytitle>firewalld.icmptype</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
-      </para>
-    </refsect2>
-
-    <refsect2>
-      <title>Runtime configuration</title>
-      <para>
-	Runtime configuration is the actual active configuration and is not permanent. After reload/restart of the service or a system reboot, runtime settings will be gone if they haven't been also in permanent configuration.
-      </para>
-    </refsect2>
-
-    <refsect2>
-      <title>Permanent configuration</title>
-      <para>
-	The permanent configuration is stored in config files and will be loaded and become new runtime configuration with every machine boot or service reload/restart.
-      </para>
-    </refsect2>
-
-    <refsect2>
-      <title>Direct interface</title>
-      <para>
-	The direct interface is mainly used by services or applications to add specific firewall rules. It requires basic knowledge of ip(6)tables concepts (tables, chains, commands, parameters, targets).
-      </para>
-    </refsect2>
-  </refsect1>
-
-  <refsect1 id="directories">
-    <title>Directories</title>
-    <para>
-      firewalld supports two configuration directories:
-    </para>
-
-    <refsect2>
-      <title>Default/Fallback configuration in <filename class="directory">/usr/lib/firewalld</filename></title>
-
-      <para>
-	This directory contains the default and fallback configuration provided by firewalld for icmptypes, services and zones. The files provided with the firewalld package should not get changed and the changes are gone with an update of the firewalld package. Additional <option>icmptypes</option>, <option>services</option> and <option>zones</option> can be provided with packages or by creating files.
-      </para>
-    </refsect2>
-
-    <refsect2>
-      <title>System configuration settings in <filename class="directory">/etc/firewalld</filename></title>
-
-      <para>
-	The system or user configuration stored here is either created by the system administrator or by customization with the configuration interface of firewalld or by hand. The files will overload the default configuration files.
-      </para>
-
-      <para>
-	To manually change settings of pre-defined icmptypes, zones or services, copy the file from the default configuration directory to the corresponding directory in the system configuration directory and change it accordingly.
-      </para>
-
-      <para>
-	For more information on icmptypes, please have a look at the <citerefentry><refentrytitle>firewalld.icmptype</refentrytitle><manvolnum>5</manvolnum></citerefentry> man page, for services at <citerefentry><refentrytitle>firewalld.service</refentrytitle><manvolnum>5</manvolnum></citerefentry> and for zones at <citerefentry><refentrytitle>firewalld.zone</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
-      </para>
-    </refsect2>
-  </refsect1>
-
-  <refsect1>
-    <title>SIGNALS</title>
-    <para>
-      Currently only SIGHUP is supported.
-    </para>
-
-    <refsect2>
-      <title>SIGHUP</title>
-      <para>
-	Reloads the complete firewall configuration. You can also use <command>firewall-cmd --reload</command>. All runtime configuration settings will be restored. Permanent configuration will change according to options defined in the configuration files.
-      </para>
-    </refsect2>
-  </refsect1>
-
-  &seealso;
-
-  &notes;
-
-</refentry>
diff --git a/doc/xml/firewalld.xml.in b/doc/xml/firewalld.xml.in
new file mode 100644
index 0000000..414c7a7
--- /dev/null
+++ b/doc/xml/firewalld.xml.in
@@ -0,0 +1,237 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN" "http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd"
+[
+<!ENTITY authors SYSTEM "authors.xml">
+<!ENTITY seealso SYSTEM "seealso.xml">
+<!ENTITY notes SYSTEM "notes.xml">
+]>
+
+<!--
+  This file is part of firewalld.
+
+  Copyright (C) 2010-2013 Red Hat, Inc.
+  Authors:
+  Thomas Woerner <twoerner@redhat.com>
+
+  This program is free software; you can redistribute it and/or modify
+  it under the terms of the GNU General Public License as published by
+  the Free Software Foundation; either version 2 of the License, or
+  (at your option) any later version.
+
+  This program is distributed in the hope that it will be useful,
+  but WITHOUT ANY WARRANTY; without even the implied warranty of
+  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+  GNU General Public License for more details.
+
+  You should have received a copy of the GNU General Public License
+  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+-->
+
+<refentry id="firewalld">
+
+  <refentryinfo>
+    <title>firewalld</title>
+    <productname>firewalld</productname>
+    &authors;
+  </refentryinfo>
+
+  <refmeta>
+    <refentrytitle>firewalld</refentrytitle>
+    <manvolnum>1</manvolnum>
+  </refmeta>
+
+  <refnamediv>
+    <refname>firewalld</refname>
+    <refpurpose>Dynamic Firewall Manager</refpurpose>
+  </refnamediv>
+
+  <refsynopsisdiv>
+    <cmdsynopsis>
+      <command>firewalld <arg choice="opt" rep="repeat">OPTIONS</arg></command>
+    </cmdsynopsis>
+  </refsynopsisdiv>
+
+  <refsect1>
+    <title>Description</title>
+		
+    <para>
+      firewalld provides a dynamically managed firewall with support for network/firewall zones to define the trust level of network connections or interfaces. It has support for IPv4, IPv6 firewall settings and for ethernet bridges and has a separation of runtime and permanent configuration options. It also supports an interface for services or applications to add firewall rules directly.
+    </para>
+  </refsect1>
+
+  <refsect1>
+    <title>Options</title>
+    <para>
+      These are the command line options of firewalld:
+    </para>
+
+    <variablelist>
+      <varlistentry>
+        <term><option>-h</option></term>
+        <term><option>--help</option></term>
+        <listitem>
+	  <para>
+	    Prints a short help text and exists.
+	  </para>
+	</listitem>
+      </varlistentry>
+
+      <varlistentry>
+        <term><option>--debug</option><optional>=<replaceable>level</replaceable></optional></term>
+        <listitem>
+	  <para>
+	    Set the debug level for firewalld to <replaceable>level</replaceable>. The range of the debug level is 1 (lowest level) to 10 (highest level). The debug output will be written to the firewalld log file <filename class="directory">/var/log/firewalld</filename>.
+	  </para>
+	</listitem>
+      </varlistentry>
+
+      <varlistentry>
+        <term><option>--debug-gc</option></term>
+        <listitem>
+	  <para>
+	    Print garbage collector leak information. The collector runs every 10 seconds and if there are leaks, it prints information about the leaks.
+	  </para>
+	</listitem>
+      </varlistentry>
+
+      <varlistentry>
+        <term><option>--nofork</option></term>
+        <listitem>
+	  <para>
+	    Turn off daemon forking. Force firewalld to run as a foreground process instead of as a daemon in the background.
+	  </para>
+	</listitem>
+      </varlistentry>
+
+      <varlistentry>
+        <term><option>--nopid</option></term>
+        <listitem>
+	  <para>
+	    Disable writing pid file. By default the program will write a pid file. If the program is invoked with this option it will not check for an existing server process.
+	  </para>
+	</listitem>
+      </varlistentry>
+    </variablelist>
+  </refsect1>
+
+  <refsect1 id="concepts">
+    <title>Concepts</title>
+    <para>
+      firewalld has a D-Bus interface for firewall configuration of services and applications. It also has a command line client for the user. Services or applications already using D-Bus can request changes to the firewall with the D-Bus interface directly.  For more information on the firewalld D-Bus interface, please have a look at <citerefentry><refentrytitle>firewalld.dbus</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
+    </para>
+    <para>
+      firewalld provides support for zones, predefined services and ICMP types and has a separation of runtime and permanent configuration options. Permanent configuration is loaded from XML files in <filename class="directory">/usr/lib/firewalld</filename> or <filename class="directory">/etc/firewalld</filename> (see <xref linkend="directories"/>).
+    </para>
+    <para>
+      If NetworkManager is not in use and firewalld gets started after the network is already up, the connections and manually created interfaces are not bound to the zone specified in the ifcfg file.
+      The interfaces will automatically be handled by the default zone.
+      firewalld will also not get notified about network device renames.
+      All this also applies to interfaces that are not controlled by NetworkManager if <replaceable>NM_CONTROLLED=no</replaceable> is set.
+    </para>
+    <para>
+      You can add these interfaces to a zone with <command>firewall-cmd [--permanent] --zone=<replaceable>zone</replaceable> --add-interface=<replaceable>interface</replaceable></command>,
+      but make sure that if there's a @SYSCONFIGDIR@/network-scripts/ifcfg-<replaceable>interface</replaceable>,
+      the zone specified there with ZONE=<replaceable>zone</replaceable>
+      is the same (or both are empty/missing for default zone), otherwise the behaviour would be undefined.
+    </para>
+    <para>
+      If firewalld gets reloaded, it will restore the interface bindings that were in place before reloading to keep interface bindings stable in the case of NetworkManager uncontrolled interfaces.
+      This mechanism is not possible in the case of a firewalld service restart.
+    </para>
+    <para>
+      It is essential to keep the ZONE= setting in the ifcfg file consistent to the binding in firewalld in the case of NetworkManager uncontrolled interfaces.
+    </para>
+
+    <refsect2>
+      <title>Zones</title>
+      <para>
+	A network or firewall zone defines the trust level of the interface used for a connection. There are several pre-defined zones provided by firewalld. Zone configuration options and generic information about zones are described in <citerefentry><refentrytitle>firewalld.zone</refentrytitle><manvolnum>5</manvolnum></citerefentry>
+      </para>
+    </refsect2>
+
+    <refsect2>
+      <title>Services</title>
+      <para>
+	A service can be a list of local ports, protocols and destinations and additionally also a list of firewall helper modules automatically loaded if a service is enabled. Service configuration options and generic information about services are described in <citerefentry><refentrytitle>firewalld.service</refentrytitle><manvolnum>5</manvolnum></citerefentry>. The use of predefined services makes it easier for the user to enable and disable access to a service.
+      </para>
+    </refsect2>
+
+    <refsect2>
+      <title>ICMP types</title>
+      <para>
+	The Internet Control Message Protocol (ICMP) is used to exchange information and also error messages in the Internet Protocol (IP). ICMP types can be used in firewalld to limit the exchange of these messages. For more information, please have a look at <citerefentry><refentrytitle>firewalld.icmptype</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
+      </para>
+    </refsect2>
+
+    <refsect2>
+      <title>Runtime configuration</title>
+      <para>
+	Runtime configuration is the actual active configuration and is not permanent. After reload/restart of the service or a system reboot, runtime settings will be gone if they haven't been also in permanent configuration.
+      </para>
+    </refsect2>
+
+    <refsect2>
+      <title>Permanent configuration</title>
+      <para>
+	The permanent configuration is stored in config files and will be loaded and become new runtime configuration with every machine boot or service reload/restart.
+      </para>
+    </refsect2>
+
+    <refsect2>
+      <title>Direct interface</title>
+      <para>
+	The direct interface is mainly used by services or applications to add specific firewall rules. It requires basic knowledge of ip(6)tables concepts (tables, chains, commands, parameters, targets).
+      </para>
+    </refsect2>
+  </refsect1>
+
+  <refsect1 id="directories">
+    <title>Directories</title>
+    <para>
+      firewalld supports two configuration directories:
+    </para>
+
+    <refsect2>
+      <title>Default/Fallback configuration in <filename class="directory">/usr/lib/firewalld</filename></title>
+
+      <para>
+	This directory contains the default and fallback configuration provided by firewalld for icmptypes, services and zones. The files provided with the firewalld package should not get changed and the changes are gone with an update of the firewalld package. Additional <option>icmptypes</option>, <option>services</option> and <option>zones</option> can be provided with packages or by creating files.
+      </para>
+    </refsect2>
+
+    <refsect2>
+      <title>System configuration settings in <filename class="directory">/etc/firewalld</filename></title>
+
+      <para>
+	The system or user configuration stored here is either created by the system administrator or by customization with the configuration interface of firewalld or by hand. The files will overload the default configuration files.
+      </para>
+
+      <para>
+	To manually change settings of pre-defined icmptypes, zones or services, copy the file from the default configuration directory to the corresponding directory in the system configuration directory and change it accordingly.
+      </para>
+
+      <para>
+	For more information on icmptypes, please have a look at the <citerefentry><refentrytitle>firewalld.icmptype</refentrytitle><manvolnum>5</manvolnum></citerefentry> man page, for services at <citerefentry><refentrytitle>firewalld.service</refentrytitle><manvolnum>5</manvolnum></citerefentry> and for zones at <citerefentry><refentrytitle>firewalld.zone</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
+      </para>
+    </refsect2>
+  </refsect1>
+
+  <refsect1>
+    <title>SIGNALS</title>
+    <para>
+      Currently only SIGHUP is supported.
+    </para>
+
+    <refsect2>
+      <title>SIGHUP</title>
+      <para>
+	Reloads the complete firewall configuration. You can also use <command>firewall-cmd --reload</command>. All runtime configuration settings will be restored. Permanent configuration will change according to options defined in the configuration files.
+      </para>
+    </refsect2>
+  </refsect1>
+
+  &seealso;
+
+  &notes;
+
+</refentry>
diff --git a/src/Makefile.am b/src/Makefile.am
index 2aace31..a8adecd 100644
--- a/src/Makefile.am
+++ b/src/Makefile.am
@@ -60,10 +60,20 @@ nobase_dist_python_DATA = \
 	tests/firewall-offline-cmd_test.sh
 
 EXTRA_DIST = \
-	firewall/config/__init__.py.in
+	firewall/config/__init__.py.in \
+	firewall-offline-cmd.in \
+	tests/firewall-offline-cmd_test.sh.in
 
 CLEANFILES = *~ *\# .\#* *.py?
 
+edit = sed \
+	-e 's|@SYSCONFIGDIR[@]|$(SYSCONFIGDIR)|g'
+
+firewall-offline-cmd: firewall-offline-cmd.in
+	$(edit) $< >$@
+tests/firewall-offline-cmd_test.sh: tests/firewall-offline-cmd_test.sh.in
+	$(edit) $< >$@
+
 install-data-local: install-dist_sbinSCRIPTS install-dist_binSCRIPTS
 	@echo "Fixing python shebang"
 	@list='$(dist_bin_SCRIPTS)'; \
diff --git a/src/firewall-offline-cmd b/src/firewall-offline-cmd
deleted file mode 100755
index acdc9ee..0000000
--- a/src/firewall-offline-cmd
+++ /dev/null
@@ -1,1737 +0,0 @@
-#!/usr/bin/python
-# -*- coding: utf-8 -*-
-#
-# Copyright (C) 2009-2014 Red Hat, Inc.
-#
-# Authors:
-# Thomas Woerner <twoerner@redhat.com>
-# Jiri Popelka <jpopelka@redhat.com>
-#
-# This program is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2 of the License, or
-# (at your option) any later version.
-#
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-#
-# You should have received a copy of the GNU General Public License
-# along with this program.  If not, see <http://www.gnu.org/licenses/>.
-#
-
-from gi.repository import GObject
-import sys
-sys.modules['gobject'] = GObject
-
-import argparse
-import dbus
-import os
-
-#from firewall.config import *
-from firewall.core.fw_test import Firewall_test
-from firewall.client import *
-from firewall.errors import *
-from firewall.functions import joinArgs, splitArgs
-
-# check for root user
-if os.getuid() != 0:
-    print(_("You need to be root to run %s.") % sys.argv[0])
-    sys.exit(-1)
-
-def __usage():
-    print ("""
-Usage: firewall-offline-cmd [OPTIONS...]
-
-If no options are given, configuration from '/etc/sysconfig/system-config-firewall' will be migrated.
-
-General Options
-  -h, --help           Prints a short help text and exists
-  -V, --version        Print the version string of firewalld
-
-Lokkit Compatibility Options
-  --enabled             Enable firewall (default)
-  --disabled            Disable firewall
-  --addmodule=<module>  Ignored option, was used to enable an iptables module
-  --removemodule=<module>
-                        Ignored option, was used to disable an iptables module
-  -s <service>, --service=<service>
-                        Enable a service in the default zone (example: ssh)
-  --remove-service=<service>
-                        Disable a service in the default zone (example: ssh)
-  -p <port>[-<port>]:<protocol>, --port=<port>[-<port>]:<protocol>
-                        Enable a port in the default zone (example: ssh:tcp)
-  -t <interface>, --trust=<interface>
-                        Bind an interface to the trusted zone
-  -m <interface>, --masq=<interface>
-                        Enables masquerading in the default zone, interface
-                        argument is ignored. This is IPv4 only.
-  --custom-rules=[<type>:][<table>:]<filename>
-                        Ignored option. Was used to add custom rules to the
-                        firewall (Example:
-                        ipv4:filter:/etc/sysconfig/ipv4_filter_addon)
-  --forward-port=if=<interface>:port=<port>:proto=<protocol>[:toport=<destination port>][:toaddr=<destination address>]
-                        Forward the port with protocol for the interface to
-                        either another local destination port (no destination
-                        address given) or to an other destination address with
-                        an optional destination port. This will be added to
-                        the default zone. This is IPv4 only.
-  --block-icmp=<icmp type>
-                        Block this ICMP type in the default zone. The default
-                        is to accept all ICMP types.
-
-Zone Options
-  --get-default-zone   Print default zone for connections and interfaces
-  --set-default-zone=<zone>
-                       Set default zone
-  --get-zones          Print predefined zones
-  --get-services       Print predefined services
-  --get-icmptypes      Print predefined icmptypes
-  --get-zone-of-interface=<interface>
-                       Print name of the zone the interface is bound to
-  --get-zone-of-source=<source>[/<mask>]
-                       Print name of the zone the source[/mask] is bound to
-  --list-all-zones     List everything added for or enabled in all zones
-  --new-zone=<zone>    Add a new zone
-  --delete-zone=<zone> Delete an existing zone
-  --zone=<zone>        Use this zone to set or query options, else default zone
-                       Usable for options marked with [Z]
-  --set-description=<description>
-                       Set new description to zone
-  --get-description    Print description for zone
-  --get-target         Get the zone target
-  --set-target=<target>
-                       Set the zone target
-  --info-zone=<zone>   Print information about a zone
-
-IPSet Options
-  --new-ipset=<ipset> --type=<ipset type> [--option=<key>[=<value>]]..
-                       Add a new ipset
-  --delete-ipset=<ipset>
-                       Delete an existing ipset
-  --info-ipset=<ipset> Print information about an ipset
-  --get-ipsets         Print predefined ipsets
-  --ipset=<ipset> --set-description=<description>
-                       Set new description to ipset
-  --ipset=<ipset> --get-description
-                       Print description for ipset
-  --ipset=<ipset> --set-short=<description>
-                       Set new short description to ipset
-  --ipset=<ipset> --get-short
-                       Print short description for ipset
-  --ipset=<ipset> --add-entry=<entry>
-                       Add a new entry to an ipset
-  --ipset=<ipset> --remove-entry=<entry>
-                       Remove an entry from an ipset
-  --ipset=<ipset> --query-entry=<entry>
-                       Return whether ipset has an entry
-  --ipset=<ipset> --get-entries
-                       List entries of an ipset
-
-IcmpType Options
-  --new-icmptype=<icmptype>
-                       Add a new icmptype
-  --delete-icmptype=<icmptype>
-                       Delete an existing icmptype
-  --info-icmptype=<icmptype>
-                       Print information about an icmptype
-  --icmptype=<icmptype> --set-description=<description>
-                       Set new description to icmptype
-  --icmptype=<icmptype> --get-description
-                       Print description for icmptype
-  --icmptype=<icmptype> --set-short=<description>
-                       Set new short description to icmptype
-  --icmptype=<icmptype> --get-short
-                       Print short description for icmptype
-  --icmptype=<icmptype> --add-destination=<ipv>
-                       Enable destination for ipv in icmptype
-  --icmptype=<icmptype> --remove-destination=<ipv>
-                       Disable destination for ipv in icmptype
-  --icmptype=<icmptype> --query-destination=<ipv>
-                       Return whether destination ipv is enabled in icmptype
-  --icmptype=<icmptype> --get-destinations
-                       List destinations in icmptype
-
-Service Options
-  --new-service=<service>
-                       Add a new service
-  --delete-service=<service>
-                       Delete an existing service
-  --info-service=<service>
-                       Print information about a service
-  --service=<service> --set-description=<description>
-                       Set new description to service
-  --service=<service> --get-description
-                       Print description for service
-  --service=<service> --set-short=<description>
-                       Set new short description to service
-  --service=<service> --get-short
-                       Print short description for service
-  --service=<service> --add-port=<portid>[-<portid>]/<protocol>
-                       Add a new port to service
-  --service=<service> --remove-port=<portid>[-<portid>]/<protocol>
-                       Remove an entry from service
-  --service=<service> --query-port=<portid>[-<portid>]/<protocol>
-                       Return whether the port has been added for service
-  --service=<service> --get-ports
-                       List ports of service
-  --service=<service> --add-protocol=<protocol>
-                       Add a new protocol to service
-  --service=<service> --remove-protocol=<protocol>
-                       Remove an entry from service
-  --service=<service> --query-protocol=<protocol>
-                       Return whether the protocol has been added for service
-  --service=<service> --get-protocols
-                       List protocols of service
-  --service=<service> --add-module=<module>
-                       Add a new module to service
-  --service=<service> --remove-module=<module>
-                       Remove an entry from service
-  --service=<service> --query-module=<module>
-                       Return whether the module has been added for service
-  --service=<service> --get-modules
-                       List modules of service
-  --service=<service> --add-destination=<ipv>:<address>[/<mask>]
-                       Set destination for ipv to address in service
-  --service=<service> --remove-destination=<ipv>
-                       Disable destination for ipv i service
-  --service=<service> --query-destination=<ipv>:<address>[/<mask>]
-                       Return whether destination ipv is set for service
-  --service=<service> --get-destinations
-                       List destinations in service
-
-Options to Adapt and Query Zones
-  --list-all           List everything added for or enabled in a zone [Z]
-  --list-services      List services added for a zone [Z]
-  --add-service=<service>
-                       Add a service for a zone [Z]
-  --remove-service-from-zone=<service>
-                       Remove a service from a zone [Z]
-  --query-service=<service>
-                       Return whether service has been added for a zone [Z]
-  --list-ports         List ports added for a zone [Z]
-  --add-port=<portid>[-<portid>]/<protocol>
-                       Add the port for a zone [Z]
-  --remove-port=<portid>[-<portid>]/<protocol>
-                       Remove the port from a zone [Z]
-  --query-port=<portid>[-<portid>]/<protocol>
-                       Return whether the port has been added for zone [Z]
-  --list-protocols     List protocols added for a zone [Z]
-  --add-protocol=<protocol>
-                       Add the protocol for a zone [Z]
-  --remove-protocol=<protocol>
-                       Remove the protocol from a zone [Z]
-  --query-protocol=<protocol>
-                       Return whether the protocol has been added for zone [Z]
-  --list-icmp-blocks   List Internet ICMP type blocks added for a zone [Z]
-  --add-icmp-block=<icmptype>
-                       Add an ICMP block for a zone [Z]
-  --remove-icmp-block=<icmptype>
-                       Remove the ICMP block from a zone [Z]
-  --query-icmp-block=<icmptype>
-                       Return whether an ICMP block has been added for a zone
-                       [Z]
-  --list-forward-ports List IPv4 forward ports added for a zone [Z]
-  --add-forward-port=port=<portid>[-<portid>]:proto=<protocol>[:toport=<portid>[-<portid>]][:toaddr=<address>[/<mask>]]
-                       Add the IPv4 forward port for a zone [Z]
-  --remove-forward-port=port=<portid>[-<portid>]:proto=<protocol>[:toport=<portid>[-<portid>]][:toaddr=<address>[/<mask>]]
-                       Remove the IPv4 forward port from a zone [Z]
-
-
-  --query-forward-port=port=<portid>[-<portid>]:proto=<protocol>[:toport=<portid>[-<portid>]][:toaddr=<address>[/<mask>]]
-                       Return whether the IPv4 forward port has been added for
-                       a zone [Z]
-  --add-masquerade     Enable IPv4 masquerade for a zone [Z]
-  --remove-masquerade  Disable IPv4 masquerade for a zone [Z]
-  --query-masquerade   Return whether IPv4 masquerading has been enabled for a
-                       zone [Z]
-  --list-rich-rules    List rich language rules added for a zone [Z]
-  --add-rich-rule=<rule>
-                       Add rich language rule 'rule' for a zone [Z]
-  --remove-rich-rule=<rule>
-                       Remove rich language rule 'rule' from a zone [Z]
-  --query-rich-rule=<rule>
-                       Return whether a rich language rule 'rule' has been
-                       added for a zone [Z]
-
-Options to Handle Bindings of Interfaces
-  --list-interfaces    List interfaces that are bound to a zone [Z]
-  --add-interface=<interface>
-                       Bind the <interface> to a zone [Z]
-  --change-interface=<interface>
-                       Change zone the <interface> is bound to [Z]
-  --query-interface=<interface>
-                       Query whether <interface> is bound to a zone [Z]
-  --remove-interface=<interface>
-                       Remove binding of <interface> from a zone [Z]
-
-Options to Handle Bindings of Sources
-  --list-sources       List sources that are bound to a zone [Z]
-  --add-source=<source>[/<mask>]
-                       Bind <source>[/<mask>] to a zone [Z]
-  --change-source=<source>[/<mask>]
-                       Change zone the <source>[/<mask>] is bound to [Z]
-  --query-source=<source>[/<mask>]
-                       Query whether <source>[/<mask>] is bound to a zone
-                       [Z]
-  --remove-source=<source>[/<mask>]
-                       Remove binding of <source>[/<mask>] from a zone [Z]
-
-Direct Options
-  --direct             First option for all direct options
-  --get-all-chains
-                       Get all chains
-  --get-chains {ipv4|ipv6|eb} <table>
-                       Get all chains added to the table
-  --add-chain {ipv4|ipv6|eb} <table> <chain>
-                       Add a new chain to the table
-  --remove-chain {ipv4|ipv6|eb} <table> <chain>
-                       Remove the chain from the table
-  --query-chain {ipv4|ipv6|eb} <table> <chain>
-                       Return whether the chain has been added to the table
-  --get-all-rules
-                       Get all rules
-  --get-rules {ipv4|ipv6|eb} <table> <chain>
-                       Get all rules added to chain in table
-  --add-rule {ipv4|ipv6|eb} <table> <chain> <priority> <arg>...
-                       Add rule to chain in table
-  --remove-rule {ipv4|ipv6|eb} <table> <chain> <priority> <arg>...
-                       Remove rule with priority from chain in table
-  --remove-rules {ipv4|ipv6|eb} <table> <chain>
-                       Remove rules from chain in table
-  --query-rule {ipv4|ipv6|eb} <table> <chain> <priority> <arg>...
-                       Return whether a rule with priority has been added to
-                       chain in table
-  --get-all-passthroughs
-                       Get all passthrough rules
-  --get-passthroughs {ipv4|ipv6|eb} <arg>...
-                       Get passthrough rules
-  --add-passthrough {ipv4|ipv6|eb} <arg>...
-                       Add a new passthrough rule
-  --remove-passthrough {ipv4|ipv6|eb} <arg>...
-                       Remove a passthrough rule
-  --query-passthrough {ipv4|ipv6|eb} <arg>...
-                       Return whether the passthrough rule has been added
-
-Lockdown Options
-  --lockdown-on        Enable lockdown.
-  --lockdown-off       Disable lockdown.
-  --query-lockdown     Query whether lockdown is enabled
-
-Lockdown Whitelist Options
-  --list-lockdown-whitelist-commands
-                       List all command lines that are on the whitelist
-  --add-lockdown-whitelist-command=<command>
-                       Add the command to the whitelist
-  --remove-lockdown-whitelist-command=<command>
-                       Remove the command from the whitelist
-  --query-lockdown-whitelist-command=<command>
-                       Query whether the command is on the whitelist
-  --list-lockdown-whitelist-contexts
-                       List all contexts that are on the whitelist
-  --add-lockdown-whitelist-context=<context>
-                       Add the context context to the whitelist
-  --remove-lockdown-whitelist-context=<context>
-                       Remove the context from the whitelist
-  --query-lockdown-whitelist-context=<context>
-                       Query whether the context is on the whitelist
-  --list-lockdown-whitelist-uids
-                       List all user ids that are on the whitelist
-  --add-lockdown-whitelist-uid=<uid>
-                       Add the user id uid to the whitelist
-  --remove-lockdown-whitelist-uid=<uid>
-                       Remove the user id uid from the whitelist
-  --query-lockdown-whitelist-uid=<uid>
-                       Query whether the user id uid is on the whitelist
-  --list-lockdown-whitelist-users
-                       List all user names that are on the whitelist
-  --add-lockdown-whitelist-user=<user>
-                       Add the user name user to the whitelist
-  --remove-lockdown-whitelist-user=<user>
-                       Remove the user name user from the whitelist
-  --query-lockdown-whitelist-user=<user>
-                       Query whether the user name user is on the whitelist
-
-Polkit Options
-  --policy-server      Change Polkit actions to 'server'  (more restricted)
-  --policy-desktop     Change Polkit actions to 'desktop' (less restricted)
-
-""")
-
-def __print(msg=None):
-    if msg:
-        print(msg)
-
-def __print_and_exit(msg=None, exit_code=0):
-    FAIL = '\033[91m'
-    OK =   '\033[92m'
-    END =  '\033[00m'
-    if exit_code != 0:
-        __print(msg)
-        #__print(FAIL + msg + END)
-    else:
-        __print(msg)
-        #__print(OK + msg + END)
-    sys.exit(exit_code)
-
-def __fail(msg=None):
-    __print_and_exit(msg, 2)
-
-def __parse_port(value):
-    try:
-        (port, proto) = value.split("/")
-    except Exception as e:
-        __fail("bad port (most likely missing protocol), correct syntax is portid[-portid]/protocol")
-    return (port, proto)
-
-def __parse_port_lokkit(value):
-    try:
-        (port, proto) = value.split(":")
-    except Exception as e:
-        __fail("bad port (most likely missing protocol), correct syntax is portid[-portid]:protocol")
-    return (port, proto)
-
-def __parse_forward_port(value):
-    port = None
-    protocol = None
-    toport = None
-    toaddr = None
-    args = value.split(":")
-    for arg in args:
-        try:
-            (opt,val) = arg.split("=")
-            if opt == "port":
-                port = val
-            elif opt == "proto":
-                protocol = val
-            elif opt == "toport":
-                toport = val
-            elif opt == "toaddr":
-                toaddr = val
-        except:
-            __fail("invalid forward port arg '%s'" % (arg))
-    if not port:
-        __fail("missing port")
-    if not protocol:
-        __fail("missing protocol")
-    if not (toport or toaddr):
-        __fail("missing destination")
-    return (port, protocol, toport, toaddr)
-
-def __parse_ipset_option(value):
-    args = value.split("=")
-    if len(args) == 1:
-        return (args[0], "")
-    elif len(args) == 2:
-        return args
-    else:
-        __fail("invalid ipset option '%s'" % (value))
-
-def _check_destination_ipv(value):
-    if value not in [ "ipv4", "ipv6" ]:
-        __fail("invalid argument: %s (choose from 'ipv4', 'ipv6')" % value)
-    return value
-
-def __parse_service_destination(value):
-    try:
-        (ipv, destination) = value.split(":", 1)
-    except Exception as e:
-        __fail("bad destination, correct syntax is ipv:address[/mask]")
-    return (_check_destination_ipv(ipv), destination)
-
-def _check_ipv(value):
-    if value != "ipv4" and value != "ipv6" and value != "eb":
-        __fail("invalid argument: %s (choose from 'ipv4', 'ipv6', 'eb')" % value)
-    return value
-
-def __print_zone_info(zone, settings, verbose = False):
-    interfaces = settings.getInterfaces()
-    sources = settings.getSources()
-    services = settings.getServices()
-    ports = settings.getPorts()
-    protocols = settings.getProtocols()
-    masquerade = settings.getMasquerade()
-    forward_ports = settings.getForwardPorts()
-    icmp_blocks = settings.getIcmpBlocks()
-    rules = settings.getRichRules()
-    description = settings.getDescription()
-    short_description = settings.getShort()
-    __print(zone)
-    if verbose:
-        __print("  summary: " + short_description)
-        __print("  description: " + description)
-    __print("  interfaces: " + " ".join(interfaces))
-    __print("  sources: " + " ".join(sources))
-    __print("  services: " + " ".join(services))
-    __print("  ports: " + " ".join(["%s/%s" % (port[0], port[1]) for port in ports]))
-    __print("  protocols: " + " ".join(protocols))
-    __print("  masquerade: %s" % ("yes" if masquerade else "no"))
-    __print("  forward-ports: " + "\n\t".join(["port=%s:proto=%s:toport=%s:toaddr=%s" % (port, protocol, toport, toaddr) for (port, protocol, toport, toaddr) in forward_ports]))
-    __print("  icmp-blocks: " + " ".join(icmp_blocks))
-    __print("  rich rules: \n\t" + "\n\t".join(rules))
-
-def __print_service_info(service, settings):
-    ports = settings.getPorts()
-    protocols = settings.getProtocols()
-    modules = settings.getModules()
-    description = settings.getDescription()
-    destinations = settings.getDestinations()
-    short_description = settings.getShort()
-    __print(service)
-    __print("  summary: " + short_description)
-    __print("  ports: " + " ".join(["%s/%s" % (port[0], port[1]) for port in ports]))
-    __print("  protocols: " + " ".join(protocols))
-    __print("  modules: " + " ".join(modules))
-    __print("  destination: " + " ".join(["%s:%s" % (k,v)
-                                          for k,v in destinations.items()]))
-    __print("  description: " + description)
-
-def __print_icmptype_info(icmptype, settings):
-    destinations = settings.getDestinations()
-    description = settings.getDescription()
-    short_description = settings.getShort()
-    if len(destinations) == 0:
-        destinations = [ "ipv4", "ipv6" ]
-    __print(icmptype)
-    __print("  summary: " + short_description)
-    __print("  destination: " + " ".join(destinations))
-    __print("  description: " + description)
-
-def __print_ipset_info(ipset, settings):
-    ipset_type = settings.getType()
-    options = settings.getOptions()
-    entries = settings.getEntries()
-    description = settings.getDescription()
-    short_description = settings.getShort()
-    __print(ipset)
-    __print("  summary: " + short_description)
-    __print("  type: " + ipset_type)
-    __print("  options: " + " ".join(["%s=%s" % (k,v) if v else k
-                                      for k,v in options.items()]))
-    __print("  entries: " + " ".join(entries))
-    __print("  description: " + description)
-
-def __print_query_result(value):
-    if value:
-        __print_and_exit("yes")
-    else:
-        __print_and_exit("no", 1)
-
-def __pk_symlink(product='server'):
-    _PK_DIR='/usr/share/polkit-1/actions/'
-    _PK_NAME='org.fedoraproject.FirewallD1.'
-    os.chdir(_PK_DIR)
-    if os.path.isfile(_PK_NAME+product+'.policy'):
-        if os.path.isfile(_PK_NAME+'policy'):
-            os.remove(_PK_NAME+'policy')
-        os.symlink(_PK_NAME+product+'.policy', _PK_NAME+'policy')
-        __print_and_exit('symlink '+_PK_DIR+_PK_NAME+product+'.policy -> '+_PK_NAME+'policy')
-    else:
-        __fail('no such file '+_PK_DIR+_PK_NAME+product+'.policy')
-
-# system-config-firewall: fw_sysconfig
-CONF = '/etc/sysconfig/system-config-firewall'
-def read_sysconfig_args():
-    filename = None
-    if os.path.exists(CONF) and os.path.isfile(CONF):
-        filename = CONF
-    try:
-        f = open(filename, 'r')
-    except:
-        return None
-    argv = [ ]
-    for line in f:
-        if not line:
-            break
-        line = line.strip()
-        if len(line) < 1 or line[0] == '#':
-            continue
-        argv.append(line)
-    f.close()
-    return argv
-
-##############################################################################
-
-parser = argparse.ArgumentParser(usage="see firewall-offline-cmd man page",
-                                 add_help=False)
-
-parser_group_lokkit = parser.add_argument_group()
-parser_group_lokkit.add_argument("--enabled", action="store_true")
-parser_group_lokkit.add_argument("--disabled", action="store_true")
-parser_group_lokkit.add_argument("--addmodule", metavar="<module>", action='append')
-parser_group_lokkit.add_argument("--removemodule", metavar="<module>", action='append')
-parser_group_lokkit.add_argument("--service", "-s", metavar="<service>", action='append')
-parser_group_lokkit.add_argument("--remove-service", metavar="<service>", action='append')
-parser_group_lokkit.add_argument("--port", "-p", metavar="<port>", action='append')
-parser_group_lokkit.add_argument("--trust", "-t", metavar="<iface>", action='append')
-parser_group_lokkit.add_argument("--masq", "-m", metavar="<iface>", action='append')
-parser_group_lokkit.add_argument("--custom-rules", metavar="<filename>", action='append')
-parser_group_lokkit.add_argument("--forward-port", metavar="<port>", action='append')
-parser_group_lokkit.add_argument("--block-icmp", metavar="<icmptype>", action='append')
-
-parser_group_standalone = parser.add_mutually_exclusive_group()
-parser_group_standalone.add_argument("-h", "--help",
-                                     action="store_true")
-parser_group_standalone.add_argument("-V", "--version", action="store_true")
-parser_group_standalone.add_argument("--policy-server", action="store_true")
-parser_group_standalone.add_argument("--policy-desktop", action="store_true")
-parser_group_standalone.add_argument("--lockdown-on", action="store_true")
-parser_group_standalone.add_argument("--lockdown-off", action="store_true")
-parser_group_standalone.add_argument("--query-lockdown", action="store_true")
-
-parser_group_standalone.add_argument("--get-default-zone", action="store_true")
-parser_group_standalone.add_argument("--set-default-zone", metavar="<zone>")
-parser_group_standalone.add_argument("--get-zones", action="store_true")
-parser_group_standalone.add_argument("--get-services", action="store_true")
-parser_group_standalone.add_argument("--get-icmptypes", action="store_true")
-parser_group_standalone.add_argument("--get-zone-of-interface", metavar="<iface>")
-parser_group_standalone.add_argument("--get-zone-of-source", metavar="<source>")
-parser_group_standalone.add_argument("--list-all-zones", action="store_true")
-
-parser_group_standalone.add_argument("--info-zone", metavar="<zone>")
-parser_group_standalone.add_argument("--info-service", metavar="<service>")
-parser_group_standalone.add_argument("--info-icmptype", metavar="<icmptype>")
-parser_group_standalone.add_argument("--info-ipset", metavar="<ipset>")
-
-parser_group_config = parser.add_mutually_exclusive_group()
-parser_group_config.add_argument("--new-icmptype", metavar="<icmptype>")
-parser_group_config.add_argument("--delete-icmptype", metavar="<icmptype>")
-parser_group_config.add_argument("--new-service", metavar="<service>")
-parser_group_config.add_argument("--delete-service", metavar="<service>")
-parser_group_config.add_argument("--new-zone", metavar="<zone>")
-parser_group_config.add_argument("--delete-zone", metavar="<zone>")
-parser_group_config.add_argument("--new-ipset", metavar="<ipset>")
-parser_group_config.add_argument("--delete-ipset", metavar="<ipset>")
-
-parser_group_lockdown_whitelist = parser.add_mutually_exclusive_group()
-parser_group_lockdown_whitelist.add_argument("--list-lockdown-whitelist-commands", action="store_true")
-parser_group_lockdown_whitelist.add_argument("--add-lockdown-whitelist-command", metavar="<command>")
-parser_group_lockdown_whitelist.add_argument("--remove-lockdown-whitelist-command", metavar="<command>")
-parser_group_lockdown_whitelist.add_argument("--query-lockdown-whitelist-command", metavar="<command>")
-
-parser_group_lockdown_whitelist.add_argument("--list-lockdown-whitelist-contexts", action="store_true")
-parser_group_lockdown_whitelist.add_argument("--add-lockdown-whitelist-context", metavar="<context>")
-parser_group_lockdown_whitelist.add_argument("--remove-lockdown-whitelist-context", metavar="<context>")
-parser_group_lockdown_whitelist.add_argument("--query-lockdown-whitelist-context", metavar="<context>")
-
-parser_group_lockdown_whitelist.add_argument("--list-lockdown-whitelist-uids", action="store_true")
-parser_group_lockdown_whitelist.add_argument("--add-lockdown-whitelist-uid", metavar="<uid>", type=int)
-parser_group_lockdown_whitelist.add_argument("--remove-lockdown-whitelist-uid", metavar="<uid>", type=int)
-parser_group_lockdown_whitelist.add_argument("--query-lockdown-whitelist-uid", metavar="<uid>", type=int)
-
-parser_group_lockdown_whitelist.add_argument("--list-lockdown-whitelist-users", action="store_true")
-parser_group_lockdown_whitelist.add_argument("--add-lockdown-whitelist-user", metavar="<user>")
-parser_group_lockdown_whitelist.add_argument("--remove-lockdown-whitelist-user", metavar="<user>")
-parser_group_lockdown_whitelist.add_argument("--query-lockdown-whitelist-user", metavar="<user>")
-
-parser.add_argument("--zone", default="", metavar="<zone>")
-
-parser_group_zone = parser.add_mutually_exclusive_group()
-parser_group_zone.add_argument("--add-interface", metavar="<iface>")
-parser_group_zone.add_argument("--remove-interface", metavar="<iface>")
-parser_group_zone.add_argument("--query-interface", metavar="<iface>")
-parser_group_zone.add_argument("--change-interface", "--change-zone", metavar="<iface>")
-parser_group_zone.add_argument("--list-interfaces", action="store_true")
-parser_group_zone.add_argument("--add-source", metavar="<source>")
-parser_group_zone.add_argument("--remove-source", metavar="<source>")
-parser_group_zone.add_argument("--query-source", metavar="<source>")
-parser_group_zone.add_argument("--change-source", metavar="<source>")
-parser_group_zone.add_argument("--list-sources", action="store_true")
-parser_group_zone.add_argument("--add-rich-rule", metavar="<rule>", action='append')
-parser_group_zone.add_argument("--remove-rich-rule", metavar="<rule>", action='append')
-parser_group_zone.add_argument("--query-rich-rule", metavar="<rule>")
-parser_group_zone.add_argument("--add-service", metavar="<service>", action='append')
-parser_group_zone.add_argument("--remove-service-from-zone", metavar="<zone>", action='append')
-parser_group_zone.add_argument("--query-service", metavar="<zone>")
-parser_group_zone.add_argument("--add-port", metavar="<port>", action='append')
-parser_group_zone.add_argument("--remove-port", metavar="<port>", action='append')
-parser_group_zone.add_argument("--query-port", metavar="<port>")
-parser_group_zone.add_argument("--add-protocol", metavar="<protocol>", action='append')
-parser_group_zone.add_argument("--remove-protocol", metavar="<protocol>", action='append')
-parser_group_zone.add_argument("--query-protocol", metavar="<protocol>")
-parser_group_zone.add_argument("--add-masquerade", action="store_true")
-parser_group_zone.add_argument("--remove-masquerade", action="store_true")
-parser_group_zone.add_argument("--query-masquerade", action="store_true")
-parser_group_zone.add_argument("--add-icmp-block", metavar="<icmptype>", action='append')
-parser_group_zone.add_argument("--remove-icmp-block", metavar="<icmptype>", action='append')
-parser_group_zone.add_argument("--query-icmp-block", metavar="<icmptype>")
-parser_group_zone.add_argument("--add-forward-port", metavar="<port>", action='append')
-parser_group_zone.add_argument("--remove-forward-port", metavar="<port>", action='append')
-parser_group_zone.add_argument("--query-forward-port", metavar="<port>")
-parser_group_zone.add_argument("--list-rich-rules", action="store_true")
-parser_group_zone.add_argument("--list-services", action="store_true")
-parser_group_zone.add_argument("--list-ports", action="store_true")
-parser_group_zone.add_argument("--list-protocols", action="store_true")
-parser_group_zone.add_argument("--list-icmp-blocks", action="store_true")
-parser_group_zone.add_argument("--list-forward-ports", action="store_true")
-parser_group_zone.add_argument("--list-all", action="store_true")
-parser_group_zone.add_argument("--get-target", action="store_true")
-parser_group_zone.add_argument("--set-target", metavar="<target>")
-
-parser.add_argument("--option", metavar="<key>[=<value>]", action='append')
-parser.add_argument("--type", metavar="<ipsettype>")
-parser.add_argument("--ipset", metavar="<ipset>")
-
-parser_ipset = parser.add_mutually_exclusive_group()
-#parser_ipset.add_argument("--add-option", metavar="<key>[=<value>]")
-#parser_ipset.add_argument("--remove-option", metavar="<key>[=<value>]")
-#parser_ipset.add_argument("--query-option", metavar="<key>[=<value>]")
-#parser_ipset.add_argument("--get-options", action="store_true")
-
-parser_ipset.add_argument("--get-ipsets", action="store_true")
-parser_ipset.add_argument("--add-entry", metavar="<entry>")
-parser_ipset.add_argument("--remove-entry", metavar="<entry>")
-parser_ipset.add_argument("--query-entry", metavar="<entry>")
-parser_ipset.add_argument("--get-entries", action="store_true")
-
-parser.add_argument("--icmptype", metavar="<icmptype>")
-
-parser_icmptype = parser.add_mutually_exclusive_group()
-parser_icmptype.add_argument("--add-destination", metavar="<ipv>", action='append')
-parser_icmptype.add_argument("--remove-destination", metavar="<ipv>", action='append')
-parser_icmptype.add_argument("--query-destination", metavar="<ipv>")
-parser_icmptype.add_argument("--get-destinations", action="store_true")
-
-#parser.add_argument("--service", metavar="<service>")
-
-parser_service = parser.add_mutually_exclusive_group()
-parser_service.add_argument("--get-ports", action="store_true")
-parser_service.add_argument("--get-protocols", action="store_true")
-
-parser_service.add_argument("--add-module", metavar="<module>", action='append')
-parser_service.add_argument("--remove-module", metavar="<module>", action='append')
-parser_service.add_argument("--query-module", metavar="<module>")
-parser_service.add_argument("--get-modules", action="store_true")
-
-parser_service.add_argument("--set-destination", metavar="<destination>")
-parser_service.add_argument("--get-destination", action="store_true")
-
-parser_service.add_argument("--set-description", metavar="<description>")
-parser_service.add_argument("--get-description", action="store_true")
-
-parser_service.add_argument("--set-short", metavar="<description>")
-parser_service.add_argument("--get-short", action="store_true")
-
-parser.add_argument("--direct", action="store_true")
-
-parser_direct = parser.add_mutually_exclusive_group()
-parser_direct.add_argument("--add-passthrough", nargs=argparse.REMAINDER,
-                    metavar=("{ ipv4 | ipv6 | eb }", "<args>"))
-parser_direct.add_argument("--remove-passthrough", nargs=argparse.REMAINDER,
-                    metavar=("{ ipv4 | ipv6 | eb }", "<args>"))
-parser_direct.add_argument("--query-passthrough", nargs=argparse.REMAINDER,
-                    metavar=("{ ipv4 | ipv6 | eb }", "<args>"))
-parser_direct.add_argument("--get-passthroughs", nargs=1,
-                    metavar=("{ ipv4 | ipv6 | eb }"))
-parser_direct.add_argument("--get-all-passthroughs", action="store_true")
-parser_direct.add_argument("--add-chain", nargs=3,
-                    metavar=("{ ipv4 | ipv6 | eb }", "<table>", "<chain>"))
-parser_direct.add_argument("--remove-chain", nargs=3,
-                        metavar=("{ ipv4 | ipv6 | eb }", "<table>", "<chain>"))
-parser_direct.add_argument("--query-chain", nargs=3,
-                        metavar=("{ ipv4 | ipv6 | eb }", "<table>", "<chain>"))
-parser_direct.add_argument("--get-all-chains", action="store_true")
-parser_direct.add_argument("--get-chains", nargs=2,
-                        metavar=("{ ipv4 | ipv6 | eb }", "<table>"))
-parser_direct.add_argument("--add-rule", nargs=argparse.REMAINDER,
-                        metavar=("{ ipv4 | ipv6 | eb }", "<table> <chain> <priority> <args>"))
-parser_direct.add_argument("--remove-rule", nargs=argparse.REMAINDER,
-                        metavar=("{ ipv4 | ipv6 | eb }", "<table> <chain> <priority> <args>"))
-parser_direct.add_argument("--remove-rules", nargs=3,
-                        metavar=("{ ipv4 | ipv6 | eb }", "<table> <chain>"))
-parser_direct.add_argument("--query-rule", nargs=argparse.REMAINDER,
-                        metavar=("{ ipv4 | ipv6 | eb }", "<table> <chain> <priority> <args>"))
-parser_direct.add_argument("--get-rules", nargs=3,
-                        metavar=("{ ipv4 | ipv6 | eb }", "<table>", "<chain>"))
-parser_direct.add_argument("--get-all-rules", action="store_true")
-
-##############################################################################
-
-if len(sys.argv) > 1:
-    i = -1
-    args = sys.argv[1:]
-    if '--add-passthrough' in args:
-        i = args.index('--add-passthrough') + 1
-    elif '--remove-passthrough' in args:
-        i = args.index('--remove-passthrough') + 1
-    elif '--query-passthrough' in args:
-        i = args.index('--query-passthrough') + 1
-    elif '--add-rule' in args:
-        i = args.index('--add-rule') + 4
-    elif '--remove-rule' in args:
-        i = args.index('--remove-rule') + 4
-    elif '--query-rule' in args:
-        i = args.index('--query-rule') + 4
-    # join <args> into one argument to prevent parser from parsing each iptables
-    # option, because they can conflict with firewall-cmd options
-    # # e.g. --delete (iptables) and --delete-* (firewall-cmd)
-    if (i > -1) and (i < len(args) - 1):
-        aux_args = args[:]
-        args = aux_args[:i+1] # all but not <args>
-        args.append(joinArgs(aux_args[i+1:])) # add <args> as one arg
-    a = parser.parse_args(args)
-else:
-    # migrate configuration from /etc/sysconfig/system-config-firewall
-    args = read_sysconfig_args()
-    if args:
-        a = parser.parse_args(args)
-    else:
-        __fail("Opening of '%s' failed, exiting." % CONF)
-
-options_lokkit = a.enabled or a.disabled or a.addmodule or a.removemodule or \
-                 a.trust or a.masq or a.custom_rules or \
-                 a.service or a.remove_service or a.port or \
-                 a.trust or a.masq or a.forward_port or a.block_icmp
-
-options_desc_xml_file = a.set_description or a.get_description or \
-                        a.set_short or a.get_short
-
-options_standalone = a.help or a.version or \
-    a.policy_server or a.policy_desktop or \
-    a.lockdown_on or a.lockdown_off or a.query_lockdown or \
-    a.get_default_zone or a.set_default_zone
-
-options_lockdown_whitelist = \
-    a.list_lockdown_whitelist_commands or a.add_lockdown_whitelist_command or \
-    a.remove_lockdown_whitelist_command or \
-    a.query_lockdown_whitelist_command or \
-    a.list_lockdown_whitelist_contexts or a.add_lockdown_whitelist_context or \
-    a.remove_lockdown_whitelist_context or \
-    a.query_lockdown_whitelist_context or \
-    a.list_lockdown_whitelist_uids or a.add_lockdown_whitelist_uid is not None or \
-    a.remove_lockdown_whitelist_uid is not None or \
-    a.query_lockdown_whitelist_uid is not None or \
-    a.list_lockdown_whitelist_users or a.add_lockdown_whitelist_user or \
-    a.remove_lockdown_whitelist_user or \
-    a.query_lockdown_whitelist_user
-
-options_config = a.get_zones or a.get_services or a.get_icmptypes or \
-                 options_lockdown_whitelist or a.list_all_zones or \
-                 a.get_zone_of_interface or a.get_zone_of_source or \
-                 a.info_zone or a.info_icmptype or a.info_service or \
-                 a.info_ipset or a.get_ipsets
-
-options_zone_action_action = \
-    a.add_service or a.remove_service_from_zone or a.query_service or \
-    a.add_port or a.remove_port or a.query_port or \
-    a.add_protocol or a.remove_protocol or a.query_protocol or \
-    a.add_icmp_block or a.remove_icmp_block or a.query_icmp_block or \
-    a.add_forward_port or a.remove_forward_port or a.query_forward_port
-
-options_zone_interfaces_sources = \
-    a.list_interfaces or a.change_interface or \
-    a.add_interface or a.remove_interface or a.query_interface or \
-    a.list_sources or a.change_source or \
-    a.add_source or a.remove_source or a.query_source
-
-options_zone_adapt_query = \
-    a.add_rich_rule or a.remove_rich_rule or a.query_rich_rule or \
-    a.add_masquerade or a.remove_masquerade or a.query_masquerade or \
-    a.list_services or a.list_ports or a.list_protocols or \
-    a.list_icmp_blocks or a.list_forward_ports or a.list_rich_rules or \
-    a.list_all or a.get_target or a.set_target
-
-options_zone_ops = options_zone_interfaces_sources or \
-               options_zone_action_action or options_zone_adapt_query
-
-options_zone = a.zone or options_zone_ops or options_desc_xml_file
-
-options_ipset = a.add_entry or a.remove_entry or a.query_entry or \
-                a.get_entries or options_desc_xml_file
-
-options_icmptype = a.add_destination or a.remove_destination or \
-                   a.query_destination or a.get_destinations or \
-                   options_desc_xml_file
-
-options_service = a.add_port or a.remove_port or a.query_port or \
-                  a.get_ports or \
-                  a.add_protocol or a.remove_protocol or a.query_protocol or \
-                  a.get_protocols or \
-                  a.add_module or a.remove_module or a.query_module or \
-                  a.get_modules or \
-                  a.set_destination or a.remove_destination or \
-                  a.query_destination or a.get_destinations or \
-                  options_desc_xml_file
-
-options_permanent = options_config or options_zone or \
-                    a.new_icmptype or a.delete_icmptype or \
-                    a.new_service or a.delete_service or \
-                    a.new_zone or a.delete_zone or \
-                    a.new_ipset or a.delete_ipset or \
-                    a.ipset or options_ipset or \
-                    (a.icmptype and options_icmptype) or \
-                    (a.service and options_service)
-
-options_direct = \
-           a.add_chain or a.remove_chain or a.query_chain or \
-           a.get_chains or a.get_all_chains or \
-           a.add_rule or a.remove_rule or a.remove_rules or a.query_rule or \
-           a.get_rules or a.get_all_rules or \
-           a.add_passthrough or a.remove_passthrough or a.query_passthrough or \
-           a.get_passthroughs or a.get_all_passthroughs
-
-# these are supposed to only write out some output
-options_list_get = a.help or a.version or a.list_all or a.list_all_zones or \
- a.list_lockdown_whitelist_commands or a.list_lockdown_whitelist_contexts or \
- a.list_lockdown_whitelist_uids or a.list_lockdown_whitelist_users or \
- a.list_services or a.list_ports or a.list_protocols or a.list_icmp_blocks or \
- a.list_forward_ports or a.list_rich_rules or a.list_interfaces or \
- a.list_sources or \
- a.get_default_zone or a.get_zone_of_interface or \
- a.get_zone_of_source or a.get_zones or a.get_services or a.get_icmptypes or \
- a.get_target or a.set_target or \
- a.info_zone or a.info_icmptype or a.info_service or \
- a.info_ipset or a.get_ipsets or a.get_entries or \
- a.get_destinations or a.get_description
-
-###############################################################################
-
-# Check various impossible combinations of options
-
-if not (options_lokkit or options_standalone or options_ipset or \
-        options_icmptype or options_service or \
-        options_permanent or options_direct or options_desc_xml_file):
-    __fail(parser.format_usage() + "No option specified.")
-
-if options_lokkit and (options_standalone or \
-                       options_permanent or options_direct) and \
-                       not (options_service and a.service):
-    __fail(parser.format_usage() +
-           "Can't use lokkit options with other options.")
-
-if options_standalone and (options_permanent or \
-                           options_direct or options_ipset):
-    __fail(parser.format_usage() +
-           "Can't use stand-alone options with other options.")
-
-if (options_ipset and not options_desc_xml_file and not a.ipset):
-    __fail(parser.format_usage() + "No ipset specified.")
-
-if (options_icmptype and not a.icmptype) and \
-   not (options_service and a.service) and not options_desc_xml_file:
-    __fail(parser.format_usage() + "No icmptype specified.")
-
-if (options_service and a.service and len(a.service) > 0):
-    if len(a.service) > 1:
-        __fail(parser.format_usage() + "More than one service specified.")
-    # use the first entry in the array only
-    a.service = a.service[0]
-
-if options_direct and options_zone:
-    __fail(parser.format_usage() +
-           "Can't use 'direct' options with other options.")
-
-if (a.direct and not options_direct) or (options_direct and not a.direct):
-    __fail(parser.format_usage() +
-           "Wrong usage of 'direct' options.")
-
-if options_config and options_zone:
-    __fail(parser.format_usage() +
-           "Wrong usage of --get-zones | --get-services | --get-icmptypes.")
-
-if a.help:
-    __usage()
-    sys.exit(0)
-
-zone = a.zone
-fw = Firewall_test()
-fw.start()
-
-try:
-    if a.version:
-        __print_and_exit(config.VERSION)
-
-    if a.policy_server:
-        __pk_symlink('server')
-    if a.policy_desktop:
-        __pk_symlink('desktop')
-
-    # Lokkit Compatibility Options
-    if options_lokkit and not (options_service and a.service):
-        trusted_zone = "trusted"
-        default_zone = fw.get_default_zone()
-        fw_zone = fw.config.get_zone(default_zone)
-        fw_settings = FirewallClientZoneSettings(
-            list(fw.config.get_zone_config(fw_zone)))
-
-        if a.enabled:
-            # Enable firewall (default)
-            os.system("systemctl enable firewalld.service")
-        if a.disabled:
-            # Disable firewall
-            os.system("systemctl disable firewalld.service")
-        if a.addmodule:
-            for m in a.addmodule:
-                __print("Ignoring addmodule '%s'" % m)
-        if a.removemodule:
-            for m in a.removemodule:
-                __print("Ignoring removemodule '%s'" % m)
-        if a.custom_rules:
-            for c in a.custom_rules:
-                __print("Ignoring custom-rule '%s'" % c)
-        if a.service:
-            for s in a.service:
-                __print("Adding service '%s' to default zone." % s)
-                if not fw_settings.queryService(s):
-                    fw_settings.addService(s)
-                else:
-                    __print("ALREADY_ENABLED: %s" % s)
-        if a.remove_service:
-            for s in a.remove_service:
-                __print("Removing service '%s' from default zone." % s)
-                if fw_settings.queryService(s):
-                    fw_settings.removeService(s)
-                else:
-                    __print("NOT_ENABLED: %s" % s)
-        if a.port:
-            for port_proto in a.port:
-                (port, proto) = __parse_port_lokkit(port_proto)
-                __print("Adding port '%s/%s' to default zone." % (port, proto))
-                if not fw_settings.queryPort(port, proto):
-                    fw_settings.addPort(port, proto)
-                else:
-                    __print("ALREADY_ENABLED: %s" % port_proto)
-        if a.trust:
-            if default_zone != trusted_zone:
-                fw_trusted = fw.config.get_zone("trusted")
-                fw_trusted_settings = FirewallClientZoneSettings(
-                                 list(fw.config.get_zone_config(fw_trusted)))
-                # Bind an interface to the trusted zone
-                for i in a.trust:
-                    __print("Interface '%s' will be bound to zone '%s'." % \
-                            (i, trusted_zone))
-                    if not fw_trusted_settings.queryInterface(i):
-                        fw_trusted_settings.addInterface(i)
-                    else:
-                        __print("ALREADY_ENABLED: %s" % i)
-                fw.config.set_zone_config(fw_trusted, fw_trusted_settings.settings)
-            else:
-                for i in a.trust:
-                    __print("Interface '%s' will be bound to zone '%s'." % \
-                            (i, trusted_zone))
-                    if not fw_settings.queryInterface(i):
-                        fw_settings.addInterface(i)
-                    else:
-                        __print("ALREADY_ENABLED: %s" % i)
-        if a.masq:
-            # Enables masquerading in the default zone, interface argument is ignored
-            __print("Enabling masquerade for the default zone.")
-            fw_settings.setMasquerade(True)
-        if a.forward_port:
-            for fp in a.forward_port:
-                (port, protocol, toport, toaddr) = __parse_forward_port(fp)
-                __print("Adding forward port %s:%s:%s:%s to default zone." % \
-                      (port, protocol, toport, toaddr))
-                if not fw_settings.queryForwardPort(port, protocol, toport,
-                                                    toaddr):
-                    fw_settings.addForwardPort(port, protocol, toport, toaddr)
-                else:
-                    __print("ALREADY_ENABLED: %s" % fp)
-        if a.block_icmp:
-            for ib in a.block_icmp:
-                __print("Adding icmpblock '%s' to default zone." % ib)
-                if not fw_settings.queryIcmpBlock(ib):
-                    fw_settings.addIcmpBlock(ib)
-                else:
-                    __print("ALREADY_ENABLED: %s" % ib)
-
-        fw.config.set_zone_config(fw_zone, fw_settings.settings)
-
-    # options from firewall-cmd
-    elif a.get_default_zone:
-        __print_and_exit(fw.get_default_zone())
-    elif a.set_default_zone:
-        fw.set_default_zone(a.set_default_zone)
-
-    # lockdown
-    elif a.lockdown_on:
-        fw.enable_lockdown()
-    elif a.lockdown_off:
-        fw.disable_lockdown()
-    elif a.query_lockdown:
-        __print_query_result(fw.policies.query_lockdown())
-
-    # zones
-    elif a.get_zones:
-        zones = fw.config.get_zones()
-        __print_and_exit(" ".join(zones))
-
-    elif a.new_zone:
-        fw.config.new_zone(a.new_zone, FirewallClientZoneSettings().settings)
-
-    elif a.delete_zone:
-        obj = fw.config.get_zone(a.delete_zone)
-        fw.config.remove_zone(obj)
-
-    elif a.info_zone:
-        zone = fw.config.get_zone(a.info_zone)
-        settings = FirewallClientZoneSettings(
-            list(fw.config.get_zone_config(zone)))
-        __print_zone_info(a.info_zone, settings, True)
-        sys.exit(0)
-
-    # services
-    elif a.get_services:
-        services = fw.config.get_services()
-        __print_and_exit(" ".join(services))
-
-    elif a.new_service:
-        fw.config.new_service(a.new_service,
-                              FirewallClientServiceSettings().settings)
-
-    elif a.delete_service:
-        obj = fw.config.get_service(a.delete_service)
-        fw.config.remove_service(obj)
-
-        # remove service from all zones
-        zones = fw.config.get_zones()
-        for zone in zones:
-            _zone = fw.config.get_zone(zone)
-            _settings = FirewallClientZoneSettings(
-                list(fw.config.get_zone_config(_zone)))
-            if _settings.queryService(a.delete_service):
-                _settings.removeService(a.delete_service)
-                fw.config.set_zone_config(_zone, _settings.settings)
-
-    elif a.info_service:
-        service = fw.config.get_service(a.info_service)
-        settings = FirewallClientServiceSettings(
-            list(fw.config.get_service_config(service)))
-        __print_service_info(a.info_service, settings)
-        sys.exit(0)
-
-    # icmptypes
-    elif a.get_icmptypes:
-        icmptypes = fw.config.get_icmptypes()
-        __print_and_exit(" ".join(icmptypes))
-
-    elif a.new_icmptype:
-        fw.config.new_icmptype(a.new_icmptype,
-                               FirewallClientIcmpTypeSettings().settings)
-
-    elif a.delete_icmptype:
-        obj = fw.config.get_icmptype(a.delete_icmptype)
-        fw.config.remove_icmptype(obj)
-
-        # remove icmpyte from all zones
-        zones = fw.config.get_zones()
-        for zone in zones:
-            _zone = fw.config.get_zone(zone)
-            _settings = FirewallClientZoneSettings(
-                list(fw.config.get_zone_config(_zone)))
-            if _settings.queryIcmpBlock(a.delete_icmptype):
-                _settings.removeIcmpBlock(a.delete_icmptype)
-                fw.config.set_zone_config(_zone, _settings.settings)
-
-    elif a.info_icmptype:
-        icmptype = fw.config.get_icmptype(a.info_icmptype)
-        settings = FirewallClientIcmpTypeSettings(
-            list(fw.config.get_icmptype_config(icmptype)))
-
-        __print_icmptype_info(a.info_icmptype, settings)
-        sys.exit(0)
-
-    elif a.icmptype and options_icmptype:
-        icmptype = fw.config.get_icmptype(a.icmptype)
-        settings = FirewallClientIcmpTypeSettings(
-            list(fw.config.get_icmptype_config(icmptype)))
-
-        if a.add_destination:
-            for ipv in a.add_destination:
-                settings.addDestination(_check_destination_ipv(ipv))
-            icmptype.update(settings)
-            fw.config.set_icmptype_config(icmptype, settings.settings)
-
-        elif a.remove_destination:
-            for ipv in a.remove_destination:
-                settings.removeDestination(_check_destination_ipv(ipv))
-            fw.config.set_icmptype_config(icmptype, settings.settings)
-
-        elif a.query_destination:
-            r = a.query_destination in settings.getDestinations()
-            __print_query_result(r)
-
-        elif a.get_destinations:
-            l = settings.getDestinations()
-            if len(l) == 0:
-                l = [ "ipv4", "ipv6" ]
-            __print_and_exit("\n".join(l))
-
-        elif a.set_description:
-            settings.setDescription(a.set_description)
-            fw.config.set_icmptype_config(icmptype, settings.settings)
-
-        elif a.get_description:
-            __print_and_exit(settings.getDescription())
-
-        elif a.set_short:
-            settings.setShort(a.set_short)
-            fw.config.set_icmptype_config(icmptype, settings.settings)
-
-        elif a.get_short:
-            __print_and_exit(settings.getShort())
-
-        else:
-            __fail(parser.format_usage() + "Unknown option")
-
-    elif a.service and options_service:
-        service = fw.config.get_service(a.service)
-        settings = FirewallClientServiceSettings(
-            list(fw.config.get_service_config(service)))
-
-        if a.add_port:
-            for port_proto in a.add_port:
-                (port, proto) = __parse_port(port_proto)
-                settings.addPort(port, proto)
-            fw.config.set_service_config(service, settings.settings)
-
-        elif a.remove_port:
-            for port_proto in a.remove_port:
-                (port, proto) = __parse_port(port_proto)
-                settings.removePort(port, proto)
-            fw.config.set_service_config(service, settings.settings)
-
-        elif a.query_port:
-            (port, proto) = __parse_port(a.query_port)
-            __print_query_result(settings.queryPort(port, proto))
-
-        elif a.get_ports:
-            l = settings.getPorts()
-            __print_and_exit(" ".join(["%s/%s" % (port[0], port[1]) for port in l]))
-
-        elif a.add_protocol:
-            for protocol in a.add_protocol:
-                settings.addProtocol(protocol)
-            fw.config.set_service_config(service, settings.settings)
-
-        elif a.remove_protocol:
-            for protocol in a.remove_protocol:
-                settings.removeProtocol(protocol)
-            fw.config.set_service_config(service, settings.settings)
-
-        elif a.query_protocol:
-            __print_query_result(settings.queryProtocol(a.query_protocol))
-
-        elif a.get_protocols:
-            l = settings.getProtocols()
-            __print_and_exit(" ".join(["%s" % protocol for protocol in l]))
-
-        elif a.add_module:
-            for module in a.add_module:
-                settings.addModule(module)
-            fw.config.set_service_config(service, settings.settings)
-
-        elif a.remove_module:
-            for module in a.remove_module:
-                settings.removeModule(module)
-            fw.config.set_service_config(service, settings.settings)
-
-        elif a.query_module:
-            __print_query_result(settings.queryModule(a.query_module))
-
-        elif a.get_modules:
-            l = settings.getModules()
-            __print_and_exit(" ".join(["%s" % module for module in l]))
-
-        elif a.set_destination:
-            (ipv, dest) = __parse_service_destination(a.set_destination)
-            settings.setDestination(ipv, dest)
-            fw.config.set_service_config(service, settings.settings)
-
-        elif a.remove_destination:
-            for dest in a.remove_destination:
-                settings.removeDestination(
-                    _check_destination_ipv(dest))
-            fw.config.set_service_config(service, settings.settings)
-
-        elif a.query_destination:
-            (ipv, dest) = __parse_service_destination(a.query_destination)
-            __print_query_result(settings.queryDestination(ipv, dest))
-
-        elif a.get_destinations:
-            l = settings.getDestinations()
-            __print_and_exit(" ".join(["%s:%s" % (dest[0], dest[1]) for dest in l.items()]))
-
-        elif a.set_description:
-            settings.setDescription(a.set_description)
-            fw.config.set_service_config(service, settings.settings)
-
-        elif a.get_description:
-            __print_and_exit(settings.getDescription())
-
-        elif a.set_short:
-            settings.setShort(a.set_short)
-            fw.config.set_service_config(service, settings.settings)
-
-        elif a.get_short:
-            __print_and_exit(settings.getShort())
-
-        else:
-            __fail(parser.format_usage() + "Unknown option")
-
-    # ipsets
-    if a.get_ipsets:
-        ipsets = fw.config.get_ipsets()
-        __print_and_exit(" ".join(sorted(ipsets)))
-
-    elif a.new_ipset:
-        if not a.type:
-            __fail(parser.format_usage() + "No type specified.")
-
-        settings = FirewallClientIPSetSettings()
-        settings.setType(a.type)
-        if a.option:
-            for opt in a.option:
-                settings.addOption(*__parse_ipset_option(opt))
-        fw.config.new_ipset(a.new_ipset, settings.settings)
-
-    elif a.delete_ipset:
-        ipset = fw.config.get_ipset(a.delete_ipset)
-        fw.config.remove_ipset(ipset)
-
-    elif a.info_ipset:
-        ipset = fw.config.get_ipset(a.info_ipset)
-        settings = FirewallClientIPSetSettings(
-            list(fw.config.get_ipset_config(ipset)))
-        __print_ipset_info(a.info_ipset, settings)
-        sys.exit(0)
-
-    elif a.ipset:
-        if a.add_entry:
-            ipset = fw.config.get_ipset(a.ipset)
-            settings = FirewallClientIPSetSettings(
-            list(fw.config.get_ipset_config(ipset)))
-            settings.addEntry(a.add_entry)
-            fw.config.set_ipset_config(ipset, settings.settings)
-
-        elif a.remove_entry:
-            ipset = fw.config.get_ipset(a.ipset)
-            settings = FirewallClientIPSetSettings(
-                list(fw.config.get_ipset_config(ipset)))
-            settings.removeEntry(a.remove_entry)
-            fw.config.set_ipset_config(ipset, settings.settings)
-
-        elif a.query_entry:
-            ipset = fw.config.get_ipset(a.ipset)
-            settings = FirewallClientIPSetSettings(
-                list(fw.config.get_ipset_config(ipset)))
-            r = settings.queryEntry(a.query_entry)
-            __print_query_result(r)
-
-        elif a.get_entries:
-            ipset = fw.config.get_ipset(a.ipset)
-            settings = FirewallClientIPSetSettings(
-                list(fw.config.get_ipset_config(ipset)))
-            l = settings.getEntries()
-            __print_and_exit("\n".join(l))
-
-        elif a.set_description:
-             ipset = fw.config.get_ipset(a.ipset)
-             settings = FirewallClientIPSetSettings(
-                list(fw.config.get_ipset_config(ipset)))
-             settings.setDescription(a.set_description)
-
-             fw.config.set_ipset_config(ipset, settings.settings)
-
-        elif a.get_description:
-            ipset = fw.config.get_ipset(a.ipset)
-            settings = FirewallClientIPSetSettings(
-                list(fw.config.get_ipset_config(ipset)))
-
-            __print_and_exit(settings.getDescription())
-
-        elif a.set_short:
-             ipset = fw.config.get_ipset(a.ipset)
-             settings = FirewallClientIPSetSettings(
-                list(fw.config.get_ipset_config(ipset)))
-             settings.setShort(a.set_short)
-
-             fw.config.set_ipset_config(ipset, settings.settings)
-
-        elif a.get_short:
-            ipset = fw.config.get_ipset(a.ipset)
-            settings = FirewallClientIPSetSettings(
-                list(fw.config.get_ipset_config(ipset)))
-
-            __print_and_exit(settings.getShort())
-
-        else:
-            __fail(parser.format_usage() + "Unknown option")
-
-    # lockdown whitelist
-
-    elif options_lockdown_whitelist:
-        whitelist = fw.config.get_policies().lockdown_whitelist
-
-        # commands
-        if a.list_lockdown_whitelist_commands:
-            l = whitelist.get_commands()
-            __print_and_exit("\n".join(l))
-        elif a.add_lockdown_whitelist_command:
-            whitelist.add_command(a.add_lockdown_whitelist_command)
-        elif a.remove_lockdown_whitelist_command:
-            whitelist.remove_command(a.remove_lockdown_whitelist_command)
-        elif a.query_lockdown_whitelist_command:
-            __print_query_result(a.query_lockdown_whitelist_command in 
-                                 whitelist.get_commands())
-
-        # contexts
-        elif a.list_lockdown_whitelist_contexts:
-            l = whitelist.get_contexts()
-            __print_and_exit("\n".join(l))
-        elif a.add_lockdown_whitelist_context:
-            whitelist.add_context(a.add_lockdown_whitelist_context)
-        elif a.remove_lockdown_whitelist_context:
-            whitelist.remove_context(a.remove_lockdown_whitelist_context)
-        elif a.query_lockdown_whitelist_context:
-            __print_query_result(a.query_lockdown_whitelist_context in 
-                                 whitelist.get_contexts())
-
-        # uids
-        elif a.list_lockdown_whitelist_uids:
-            l = whitelist.get_uids()
-            __print_and_exit(" ".join(map(str, l)))
-        elif a.add_lockdown_whitelist_uid is not None:
-            whitelist.add_uid(a.add_lockdown_whitelist_uid)
-        elif a.remove_lockdown_whitelist_uid is not None:
-            whitelist.remove_uid(a.remove_lockdown_whitelist_uid)
-        elif a.query_lockdown_whitelist_uid is not None:
-            __print_query_result(a.query_lockdown_whitelist_uid in
-                                 whitelist.get_uids())
-
-        # users
-        elif a.list_lockdown_whitelist_users:
-            l = whitelist.get_users()
-            __print_and_exit("\n".join(l))
-        elif a.add_lockdown_whitelist_user:
-            whitelist.add_user(a.add_lockdown_whitelist_user)
-        elif a.remove_lockdown_whitelist_user:
-            whitelist.remove_user(a.remove_lockdown_whitelist_user)
-        elif a.query_lockdown_whitelist_user:
-            __print_query_result(a.query_lockdown_whitelist_user in
-                                 whitelist.get_users())
-
-        # apply whitelist changes
-        whitelist.write()
-
-    elif options_direct:
-        settings = fw.config.get_direct()
-
-        if a.add_passthrough:
-            if len (a.add_passthrough) < 2:
-                __fail("usage: --direct --add-passthrough { ipv4 | ipv6 | eb } <args>")
-            __print(settings.add_passthrough(_check_ipv(a.add_passthrough[0]),
-                                             splitArgs(a.add_passthrough[1])))
-
-        elif a.remove_passthrough:
-            if len (a.remove_passthrough) < 2:
-                __fail("usage: --direct --remove-passthrough { ipv4 | ipv6 | eb } <args>")
-            settings.remove_passthrough(_check_ipv(a.remove_passthrough[0]),
-                                        splitArgs(a.remove_passthrough[1]))
-        elif a.query_passthrough:
-            if len (a.query_passthrough) < 2:
-                __fail("usage: --direct --query-passthrough { ipv4 | ipv6 | eb } <args>")
-            __print_query_result(
-                settings.query_passthrough(_check_ipv(a.query_passthrough[0]),
-                                           splitArgs(a.query_passthrough[1])))
-            sys.exit(0)
-        elif a.get_passthroughs:
-            rules = settings.get_passthroughs(_check_ipv(a.get_passthroughs[0]))
-            for rule in rules:
-                __print(joinArgs(rule))
-            sys.exit(0)
-        elif a.get_all_passthroughs:
-            pt = settings.get_all_passthroughs()
-            for ipv in pt:
-                for rule in pt[ipv]:
-                    __print("%s %s" % (ipv, joinArgs(rule)))
-            sys.exit(0)
-
-        elif a.add_chain:
-            settings.add_chain(_check_ipv(a.add_chain[0]),
-                               a.add_chain[1], a.add_chain[2])
-        elif a.remove_chain:
-            settings.remove_chain(_check_ipv(a.remove_chain[0]),
-                                  a.remove_chain[1], a.remove_chain[2])
-        elif a.query_chain:
-            __print_query_result(
-                settings.query_chain(_check_ipv(a.query_chain[0]),
-                                     a.query_chain[1], a.query_chain[2]))
-            sys.exit(0)
-        elif a.get_chains:
-            __print_and_exit(
-                    " ".join(settings.get_chains(_check_ipv(a.get_chains[0]),
-                                                 a.get_chains[1])))
-            sys.exit(0)
-        elif a.get_all_chains:
-            chains = settings.get_all_chains()
-            for (ipv, table) in chains:
-                for chain in chains[(ipv,table)]:
-                    __print("%s %s %s" % (ipv, table, chain))
-            sys.exit(0)
-
-        elif a.add_rule:
-            if len (a.add_rule) < 5:
-                __fail("usage: --direct --add-rule { ipv4 | ipv6 | eb } <table> <chain> <priority> <args>")
-            try:
-                priority = int(a.add_rule[3])
-            except ValueError:
-                __fail("wrong priority\nusage: --direct --add-rule { ipv4 | ipv6 | eb } <table> <chain> <priority> <args>")
-            settings.add_rule(_check_ipv(a.add_rule[0]), a.add_rule[1],
-                              a.add_rule[2], priority, splitArgs(a.add_rule[4]))
-        elif a.remove_rule:
-            if len (a.remove_rule) < 5:
-                __fail("usage: --direct --remove-rule { ipv4 | ipv6 | eb } <table> <chain> <priority> <args>")
-            try:
-                priority = int(a.remove_rule[3])
-            except ValueError:
-                __fail("usage: --direct --remove-rule { ipv4 | ipv6 | eb } <table> <chain> <priority> <args>")
-            settings.remove_rule(_check_ipv(a.remove_rule[0]), a.remove_rule[1],
-                                a.remove_rule[2], priority, splitArgs(a.remove_rule[4]))
-        elif a.remove_rules:
-            if len (a.remove_rules) < 3:
-                __fail("usage: --direct --remove-rules { ipv4 | ipv6 | eb } <table> <chain>")
-            settings.remove_rules(_check_ipv(a.remove_rules[0]),
-                                  a.remove_rules[1], a.remove_rules[2])
-        elif a.query_rule:
-            if len (a.query_rule) < 5:
-                __fail("usage: --direct --query-rule { ipv4 | ipv6 | eb } <table> <chain> <priority> <args>")
-            try:
-                priority = int(a.query_rule[3])
-            except ValueError:
-                __fail("usage: --direct --query-rule { ipv4 | ipv6 | eb } <table> <chain> <priority> <args>")
-            __print_query_result(
-                    settings.query_rule(_check_ipv(a.query_rule[0]),
-                                        a.query_rule[1], a.query_rule[2],
-                                        priority, splitArgs(a.query_rule[4])))
-            sys.exit(0)
-        elif a.get_rules:
-            rules = settings.get_rules(_check_ipv(a.get_rules[0]),
-                                       a.get_rules[1], a.get_rules[2])
-            for (priority, rule) in rules:
-                __print("%d %s" % (priority, joinArgs(rule)))
-            sys.exit(0)
-        elif a.get_all_rules:
-            rules = settings.get_all_rules()
-            for (ipv, table, chain) in rules:
-                for (priority, rule) in rules[(ipv, table, chain)]:
-                    __print("%s %s %s %d %s" % (ipv, table, chain, priority,
-                                                joinArgs(rule)))
-            sys.exit(0)
-
-        settings.write()
-
-    else:
-        if zone == "":
-            zone = fw.get_default_zone()
-        fw_zone = fw.config.get_zone(zone)
-        fw_settings = FirewallClientZoneSettings(
-            list(fw.config.get_zone_config(fw_zone))) # convert to list, for setMasquerade
-
-        # interface
-        if a.list_interfaces:
-            l = fw_settings.getInterfaces()
-            __print_and_exit(" ".join(l))
-        elif a.get_zone_of_interface:
-            ret = []
-            for zone in fw.config.get_zones():
-                obj = fw.config.get_zone(zone)
-                if a.get_zone_of_interface in obj.interfaces:
-                    ret.append(obj.name)
-            if len(ret) > 1:
-                # Even it shouldn't happen, it's actually possible that
-                # the same interface is in several zone XML files
-                __print_and_exit(" ".join(ret) + "  (ERROR: interface '%s' is in %s zone XML files, can be only in one)" % (a.get_zone_of_interface, len(ret)))
-            if len(ret) == 1:
-                __print_and_exit(ret[0])
-            else:
-                __print_and_exit("no zone", 2)
-        elif a.change_interface:
-            ret = []
-            for old_zone in fw.config.get_zones():
-                old_zone_obj = fw.config.get_zone(old_zone)
-                if a.change_interface in old_zone_obj.interfaces:
-                    if old_zone_obj.name != zone:
-                        old_zone_settings = FirewallClientZoneSettings(
-                            fw.config.get_zone_config(old_zone_obj))
-
-                        old_zone_settings.removeInterface(a.change_interface) # remove from old
-                        fw.config.set_zone_config(old_zone_obj, old_zone_settings.settings)
-            fw_settings.addInterface(a.change_interface)              # add to new
-        elif a.add_interface:
-            fw_settings.addInterface(a.add_interface)
-        elif a.remove_interface:
-            fw_settings.removeInterface(a.remove_interface)
-        elif a.query_interface:
-            __print_query_result(fw_settings.queryInterface(a.query_interface))
-
-        # source
-        if a.list_sources:
-            sources = fw_settings.getSources()
-            __print_and_exit(" ".join(sources))
-        elif a.get_zone_of_source:
-            ret = []
-            for zone in fw.config.get_zones():
-                obj = fw.config.get_zone(zone)
-                if a.get_zone_of_source in obj.sources:
-                    ret.append(obj.name)
-            if len(ret) > 1:
-                # Even it shouldn't happen, it's actually possible that
-                # the same source is in several zone XML files
-                __print_and_exit(" ".join(ret) + "  (ERROR: source '%s' is in %s zone XML files, can be only in one)" % (a.get_zone_of_source, len(ret)))
-            if len(ret) == 1:
-                __print_and_exit(ret[0])
-            else:
-                __print_and_exit("no zone", 2)
-        elif a.change_source:
-            ret = []
-            for old_zone in fw.config.get_zones():
-                old_zone_obj = fw.config.get_zone(old_zone)
-                if a.change_source in old_zone_obj.sources:
-                    if old_zone_obj.name != zone:
-                        old_zone_settings = FirewallClientZoneSettings(
-                            fw.config.get_zone_config(old_zone_obj))
-
-                        old_zone_settings.removeSource(a.change_source) # remove from old
-                        fw.config.set_zone_config(old_zone_obj, old_zone_settings.settings)
-            fw_settings.addSource(a.change_source)              # add to new
-        elif a.add_source:
-            fw_settings.addSource(a.add_source)
-        elif a.remove_source:
-            fw_settings.removeSource(a.remove_source)
-        elif a.query_source:
-            __print_query_result(fw_settings.querySource(a.query_source))
-
-        # rich rules
-        if a.list_rich_rules:
-            l = fw_settings.getRichRules()
-            __print_and_exit("\n".join(l))
-        elif a.add_rich_rule:
-            for s in a.add_rich_rule:
-                fw_settings.addRichRule(s)
-        elif a.remove_rich_rule:
-            for s in a.remove_rich_rule:
-                fw_settings.removeRichRule(s)
-        elif a.query_rich_rule:
-            __print_query_result(fw_settings.queryRichRule(a.query_rich_rule))
-
-        # service
-        if a.list_services:
-            l = fw_settings.getServices()
-            __print_and_exit(" ".join(l))
-        elif a.add_service:
-            for s in a.add_service:
-                fw_settings.addService(s)
-        elif a.remove_service_from_zone:
-            for s in a.remove_service_from_zone:
-                fw_settings.removeService(s)
-        elif a.query_service:
-            __print_query_result(fw_settings.queryService(a.query_service))
-
-        # port
-        elif a.list_ports:
-            l = fw_settings.getPorts()
-            __print_and_exit(" ".join(["%s/%s" % (port[0], port[1]) for port in l]))
-        elif a.add_port:
-            for port_proto in a.add_port:
-                (port, proto) = __parse_port(port_proto)
-                fw_settings.addPort(port, proto)
-        elif a.remove_port:
-            for port_proto in a.remove_port:
-                (port, proto) = __parse_port(port_proto)
-                fw_settings.removePort(port, proto)
-        elif a.query_port:
-            (port, proto) = __parse_port(a.query_port)
-            __print_query_result(fw_settings.queryPort(port, proto))
-
-        # protocol
-        elif a.list_protocols:
-            l = fw_settings.getProtocols()
-            __print_and_exit(" ".join(l))
-        elif a.add_protocol:
-            for proto in a.add_protocol:
-                fw_settings.addProtocol(proto)
-        elif a.remove_protocol:
-            for proto in a.remove_protocol:
-                fw_settings.removeProtocol(proto)
-        elif a.query_protocol:
-            __print_query_result(fw_settings.queryProtocol(a.query_protocol))
-
-        # masquerade
-        elif a.add_masquerade:
-            fw_settings.setMasquerade(True)
-        elif a.remove_masquerade:
-            fw_settings.setMasquerade(False)
-        elif a.query_masquerade:
-            __print_query_result(fw_settings.getMasquerade())
-
-        # forward port
-        elif a.list_forward_ports:
-            l = fw_settings.getForwardPorts()
-            __print_and_exit("\n".join(["port=%s:proto=%s:toport=%s:toaddr=%s" % (port, protocol, toport, toaddr) for (port, protocol, toport, toaddr) in l]))
-        elif a.add_forward_port:
-            for fp in a.add_forward_port:
-                (port, protocol, toport, toaddr) = __parse_forward_port(fp)
-                fw_settings.addForwardPort(port, protocol, toport, toaddr)
-        elif a.remove_forward_port:
-            for fp in a.remove_forward_port:
-                (port, protocol, toport, toaddr) = __parse_forward_port(fp)
-                fw_settings.removeForwardPort(port, protocol, toport, toaddr)
-        elif a.query_forward_port:
-            (port, protocol, toport, toaddr) = __parse_forward_port(a.query_forward_port)
-            __print_query_result(fw_settings.queryForwardPort(port, protocol, toport, toaddr))
-
-        # block icmp
-        elif a.list_icmp_blocks:
-            l = fw_settings.getIcmpBlocks()
-            __print_and_exit(" ".join(l))
-        elif a.add_icmp_block:
-            for ib in a.add_icmp_block:
-                fw_settings.addIcmpBlock(ib)
-        elif a.remove_icmp_block:
-            for ib in a.remove_icmp_block:
-                fw_settings.removeIcmpBlock(ib)
-        elif a.query_icmp_block:
-            __print_query_result(fw_settings.queryIcmpBlock(a.query_icmp_block))
-
-        # zone target
-        elif a.get_target:
-            __print_and_exit(fw_settings.getTarget())
-        elif a.set_target:
-            fw_settings.setTarget(a.set_target)
-
-        # list all zone settings
-        elif a.list_all:
-            __print_zone_info(zone if zone else fw.get_default_zone(),
-                              fw_settings)
-            sys.exit(0)
-
-        # list everything
-        elif a.list_all_zones:
-            zones = fw.config.get_zones()
-            for zone in zones:
-                fw_zone = fw.config.get_zone(zone)
-                fw_settings = FirewallClientZoneSettings(list(fw.config.get_zone_config(fw_zone)))
-                __print_zone_info(zone, fw_settings)
-                __print("")
-            sys.exit(0)
-
-        elif a.set_description:
-            fw_settings.setDescription(a.set_description)
-
-        elif a.get_description:
-            __print_and_exit(fw_settings.getDescription())
-
-        elif a.set_short:
-            fw_settings.setShort(a.set_short)
-
-        elif a.get_short:
-            __print_and_exit(fw_settings.getShort())
-
-        fw.config.set_zone_config(fw_zone, fw_settings.settings)
-
-except Exception as msg:
-    __fail("%s" % msg)
-else:
-    __print_and_exit("success")
diff --git a/src/firewall-offline-cmd.in b/src/firewall-offline-cmd.in
new file mode 100755
index 0000000..2bd2cc8
--- /dev/null
+++ b/src/firewall-offline-cmd.in
@@ -0,0 +1,1737 @@
+#!/usr/bin/python
+# -*- coding: utf-8 -*-
+#
+# Copyright (C) 2009-2014 Red Hat, Inc.
+#
+# Authors:
+# Thomas Woerner <twoerner@redhat.com>
+# Jiri Popelka <jpopelka@redhat.com>
+#
+# This program is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program.  If not, see <http://www.gnu.org/licenses/>.
+#
+
+from gi.repository import GObject
+import sys
+sys.modules['gobject'] = GObject
+
+import argparse
+import dbus
+import os
+
+#from firewall.config import *
+from firewall.core.fw_test import Firewall_test
+from firewall.client import *
+from firewall.errors import *
+from firewall.functions import joinArgs, splitArgs
+
+# check for root user
+if os.getuid() != 0:
+    print(_("You need to be root to run %s.") % sys.argv[0])
+    sys.exit(-1)
+
+def __usage():
+    print ("""
+Usage: firewall-offline-cmd [OPTIONS...]
+
+If no options are given, configuration from '@SYSCONFIGDIR@/system-config-firewall' will be migrated.
+
+General Options
+  -h, --help           Prints a short help text and exists
+  -V, --version        Print the version string of firewalld
+
+Lokkit Compatibility Options
+  --enabled             Enable firewall (default)
+  --disabled            Disable firewall
+  --addmodule=<module>  Ignored option, was used to enable an iptables module
+  --removemodule=<module>
+                        Ignored option, was used to disable an iptables module
+  -s <service>, --service=<service>
+                        Enable a service in the default zone (example: ssh)
+  --remove-service=<service>
+                        Disable a service in the default zone (example: ssh)
+  -p <port>[-<port>]:<protocol>, --port=<port>[-<port>]:<protocol>
+                        Enable a port in the default zone (example: ssh:tcp)
+  -t <interface>, --trust=<interface>
+                        Bind an interface to the trusted zone
+  -m <interface>, --masq=<interface>
+                        Enables masquerading in the default zone, interface
+                        argument is ignored. This is IPv4 only.
+  --custom-rules=[<type>:][<table>:]<filename>
+                        Ignored option. Was used to add custom rules to the
+                        firewall (Example:
+                        ipv4:filter:@SYSCONFIGDIR@/ipv4_filter_addon)
+  --forward-port=if=<interface>:port=<port>:proto=<protocol>[:toport=<destination port>][:toaddr=<destination address>]
+                        Forward the port with protocol for the interface to
+                        either another local destination port (no destination
+                        address given) or to an other destination address with
+                        an optional destination port. This will be added to
+                        the default zone. This is IPv4 only.
+  --block-icmp=<icmp type>
+                        Block this ICMP type in the default zone. The default
+                        is to accept all ICMP types.
+
+Zone Options
+  --get-default-zone   Print default zone for connections and interfaces
+  --set-default-zone=<zone>
+                       Set default zone
+  --get-zones          Print predefined zones
+  --get-services       Print predefined services
+  --get-icmptypes      Print predefined icmptypes
+  --get-zone-of-interface=<interface>
+                       Print name of the zone the interface is bound to
+  --get-zone-of-source=<source>[/<mask>]
+                       Print name of the zone the source[/mask] is bound to
+  --list-all-zones     List everything added for or enabled in all zones
+  --new-zone=<zone>    Add a new zone
+  --delete-zone=<zone> Delete an existing zone
+  --zone=<zone>        Use this zone to set or query options, else default zone
+                       Usable for options marked with [Z]
+  --set-description=<description>
+                       Set new description to zone
+  --get-description    Print description for zone
+  --get-target         Get the zone target
+  --set-target=<target>
+                       Set the zone target
+  --info-zone=<zone>   Print information about a zone
+
+IPSet Options
+  --new-ipset=<ipset> --type=<ipset type> [--option=<key>[=<value>]]..
+                       Add a new ipset
+  --delete-ipset=<ipset>
+                       Delete an existing ipset
+  --info-ipset=<ipset> Print information about an ipset
+  --get-ipsets         Print predefined ipsets
+  --ipset=<ipset> --set-description=<description>
+                       Set new description to ipset
+  --ipset=<ipset> --get-description
+                       Print description for ipset
+  --ipset=<ipset> --set-short=<description>
+                       Set new short description to ipset
+  --ipset=<ipset> --get-short
+                       Print short description for ipset
+  --ipset=<ipset> --add-entry=<entry>
+                       Add a new entry to an ipset
+  --ipset=<ipset> --remove-entry=<entry>
+                       Remove an entry from an ipset
+  --ipset=<ipset> --query-entry=<entry>
+                       Return whether ipset has an entry
+  --ipset=<ipset> --get-entries
+                       List entries of an ipset
+
+IcmpType Options
+  --new-icmptype=<icmptype>
+                       Add a new icmptype
+  --delete-icmptype=<icmptype>
+                       Delete an existing icmptype
+  --info-icmptype=<icmptype>
+                       Print information about an icmptype
+  --icmptype=<icmptype> --set-description=<description>
+                       Set new description to icmptype
+  --icmptype=<icmptype> --get-description
+                       Print description for icmptype
+  --icmptype=<icmptype> --set-short=<description>
+                       Set new short description to icmptype
+  --icmptype=<icmptype> --get-short
+                       Print short description for icmptype
+  --icmptype=<icmptype> --add-destination=<ipv>
+                       Enable destination for ipv in icmptype
+  --icmptype=<icmptype> --remove-destination=<ipv>
+                       Disable destination for ipv in icmptype
+  --icmptype=<icmptype> --query-destination=<ipv>
+                       Return whether destination ipv is enabled in icmptype
+  --icmptype=<icmptype> --get-destinations
+                       List destinations in icmptype
+
+Service Options
+  --new-service=<service>
+                       Add a new service
+  --delete-service=<service>
+                       Delete an existing service
+  --info-service=<service>
+                       Print information about a service
+  --service=<service> --set-description=<description>
+                       Set new description to service
+  --service=<service> --get-description
+                       Print description for service
+  --service=<service> --set-short=<description>
+                       Set new short description to service
+  --service=<service> --get-short
+                       Print short description for service
+  --service=<service> --add-port=<portid>[-<portid>]/<protocol>
+                       Add a new port to service
+  --service=<service> --remove-port=<portid>[-<portid>]/<protocol>
+                       Remove an entry from service
+  --service=<service> --query-port=<portid>[-<portid>]/<protocol>
+                       Return whether the port has been added for service
+  --service=<service> --get-ports
+                       List ports of service
+  --service=<service> --add-protocol=<protocol>
+                       Add a new protocol to service
+  --service=<service> --remove-protocol=<protocol>
+                       Remove an entry from service
+  --service=<service> --query-protocol=<protocol>
+                       Return whether the protocol has been added for service
+  --service=<service> --get-protocols
+                       List protocols of service
+  --service=<service> --add-module=<module>
+                       Add a new module to service
+  --service=<service> --remove-module=<module>
+                       Remove an entry from service
+  --service=<service> --query-module=<module>
+                       Return whether the module has been added for service
+  --service=<service> --get-modules
+                       List modules of service
+  --service=<service> --add-destination=<ipv>:<address>[/<mask>]
+                       Set destination for ipv to address in service
+  --service=<service> --remove-destination=<ipv>
+                       Disable destination for ipv i service
+  --service=<service> --query-destination=<ipv>:<address>[/<mask>]
+                       Return whether destination ipv is set for service
+  --service=<service> --get-destinations
+                       List destinations in service
+
+Options to Adapt and Query Zones
+  --list-all           List everything added for or enabled in a zone [Z]
+  --list-services      List services added for a zone [Z]
+  --add-service=<service>
+                       Add a service for a zone [Z]
+  --remove-service-from-zone=<service>
+                       Remove a service from a zone [Z]
+  --query-service=<service>
+                       Return whether service has been added for a zone [Z]
+  --list-ports         List ports added for a zone [Z]
+  --add-port=<portid>[-<portid>]/<protocol>
+                       Add the port for a zone [Z]
+  --remove-port=<portid>[-<portid>]/<protocol>
+                       Remove the port from a zone [Z]
+  --query-port=<portid>[-<portid>]/<protocol>
+                       Return whether the port has been added for zone [Z]
+  --list-protocols     List protocols added for a zone [Z]
+  --add-protocol=<protocol>
+                       Add the protocol for a zone [Z]
+  --remove-protocol=<protocol>
+                       Remove the protocol from a zone [Z]
+  --query-protocol=<protocol>
+                       Return whether the protocol has been added for zone [Z]
+  --list-icmp-blocks   List Internet ICMP type blocks added for a zone [Z]
+  --add-icmp-block=<icmptype>
+                       Add an ICMP block for a zone [Z]
+  --remove-icmp-block=<icmptype>
+                       Remove the ICMP block from a zone [Z]
+  --query-icmp-block=<icmptype>
+                       Return whether an ICMP block has been added for a zone
+                       [Z]
+  --list-forward-ports List IPv4 forward ports added for a zone [Z]
+  --add-forward-port=port=<portid>[-<portid>]:proto=<protocol>[:toport=<portid>[-<portid>]][:toaddr=<address>[/<mask>]]
+                       Add the IPv4 forward port for a zone [Z]
+  --remove-forward-port=port=<portid>[-<portid>]:proto=<protocol>[:toport=<portid>[-<portid>]][:toaddr=<address>[/<mask>]]
+                       Remove the IPv4 forward port from a zone [Z]
+
+
+  --query-forward-port=port=<portid>[-<portid>]:proto=<protocol>[:toport=<portid>[-<portid>]][:toaddr=<address>[/<mask>]]
+                       Return whether the IPv4 forward port has been added for
+                       a zone [Z]
+  --add-masquerade     Enable IPv4 masquerade for a zone [Z]
+  --remove-masquerade  Disable IPv4 masquerade for a zone [Z]
+  --query-masquerade   Return whether IPv4 masquerading has been enabled for a
+                       zone [Z]
+  --list-rich-rules    List rich language rules added for a zone [Z]
+  --add-rich-rule=<rule>
+                       Add rich language rule 'rule' for a zone [Z]
+  --remove-rich-rule=<rule>
+                       Remove rich language rule 'rule' from a zone [Z]
+  --query-rich-rule=<rule>
+                       Return whether a rich language rule 'rule' has been
+                       added for a zone [Z]
+
+Options to Handle Bindings of Interfaces
+  --list-interfaces    List interfaces that are bound to a zone [Z]
+  --add-interface=<interface>
+                       Bind the <interface> to a zone [Z]
+  --change-interface=<interface>
+                       Change zone the <interface> is bound to [Z]
+  --query-interface=<interface>
+                       Query whether <interface> is bound to a zone [Z]
+  --remove-interface=<interface>
+                       Remove binding of <interface> from a zone [Z]
+
+Options to Handle Bindings of Sources
+  --list-sources       List sources that are bound to a zone [Z]
+  --add-source=<source>[/<mask>]
+                       Bind <source>[/<mask>] to a zone [Z]
+  --change-source=<source>[/<mask>]
+                       Change zone the <source>[/<mask>] is bound to [Z]
+  --query-source=<source>[/<mask>]
+                       Query whether <source>[/<mask>] is bound to a zone
+                       [Z]
+  --remove-source=<source>[/<mask>]
+                       Remove binding of <source>[/<mask>] from a zone [Z]
+
+Direct Options
+  --direct             First option for all direct options
+  --get-all-chains
+                       Get all chains
+  --get-chains {ipv4|ipv6|eb} <table>
+                       Get all chains added to the table
+  --add-chain {ipv4|ipv6|eb} <table> <chain>
+                       Add a new chain to the table
+  --remove-chain {ipv4|ipv6|eb} <table> <chain>
+                       Remove the chain from the table
+  --query-chain {ipv4|ipv6|eb} <table> <chain>
+                       Return whether the chain has been added to the table
+  --get-all-rules
+                       Get all rules
+  --get-rules {ipv4|ipv6|eb} <table> <chain>
+                       Get all rules added to chain in table
+  --add-rule {ipv4|ipv6|eb} <table> <chain> <priority> <arg>...
+                       Add rule to chain in table
+  --remove-rule {ipv4|ipv6|eb} <table> <chain> <priority> <arg>...
+                       Remove rule with priority from chain in table
+  --remove-rules {ipv4|ipv6|eb} <table> <chain>
+                       Remove rules from chain in table
+  --query-rule {ipv4|ipv6|eb} <table> <chain> <priority> <arg>...
+                       Return whether a rule with priority has been added to
+                       chain in table
+  --get-all-passthroughs
+                       Get all passthrough rules
+  --get-passthroughs {ipv4|ipv6|eb} <arg>...
+                       Get passthrough rules
+  --add-passthrough {ipv4|ipv6|eb} <arg>...
+                       Add a new passthrough rule
+  --remove-passthrough {ipv4|ipv6|eb} <arg>...
+                       Remove a passthrough rule
+  --query-passthrough {ipv4|ipv6|eb} <arg>...
+                       Return whether the passthrough rule has been added
+
+Lockdown Options
+  --lockdown-on        Enable lockdown.
+  --lockdown-off       Disable lockdown.
+  --query-lockdown     Query whether lockdown is enabled
+
+Lockdown Whitelist Options
+  --list-lockdown-whitelist-commands
+                       List all command lines that are on the whitelist
+  --add-lockdown-whitelist-command=<command>
+                       Add the command to the whitelist
+  --remove-lockdown-whitelist-command=<command>
+                       Remove the command from the whitelist
+  --query-lockdown-whitelist-command=<command>
+                       Query whether the command is on the whitelist
+  --list-lockdown-whitelist-contexts
+                       List all contexts that are on the whitelist
+  --add-lockdown-whitelist-context=<context>
+                       Add the context context to the whitelist
+  --remove-lockdown-whitelist-context=<context>
+                       Remove the context from the whitelist
+  --query-lockdown-whitelist-context=<context>
+                       Query whether the context is on the whitelist
+  --list-lockdown-whitelist-uids
+                       List all user ids that are on the whitelist
+  --add-lockdown-whitelist-uid=<uid>
+                       Add the user id uid to the whitelist
+  --remove-lockdown-whitelist-uid=<uid>
+                       Remove the user id uid from the whitelist
+  --query-lockdown-whitelist-uid=<uid>
+                       Query whether the user id uid is on the whitelist
+  --list-lockdown-whitelist-users
+                       List all user names that are on the whitelist
+  --add-lockdown-whitelist-user=<user>
+                       Add the user name user to the whitelist
+  --remove-lockdown-whitelist-user=<user>
+                       Remove the user name user from the whitelist
+  --query-lockdown-whitelist-user=<user>
+                       Query whether the user name user is on the whitelist
+
+Polkit Options
+  --policy-server      Change Polkit actions to 'server'  (more restricted)
+  --policy-desktop     Change Polkit actions to 'desktop' (less restricted)
+
+""")
+
+def __print(msg=None):
+    if msg:
+        print(msg)
+
+def __print_and_exit(msg=None, exit_code=0):
+    FAIL = '\033[91m'
+    OK =   '\033[92m'
+    END =  '\033[00m'
+    if exit_code != 0:
+        __print(msg)
+        #__print(FAIL + msg + END)
+    else:
+        __print(msg)
+        #__print(OK + msg + END)
+    sys.exit(exit_code)
+
+def __fail(msg=None):
+    __print_and_exit(msg, 2)
+
+def __parse_port(value):
+    try:
+        (port, proto) = value.split("/")
+    except Exception as e:
+        __fail("bad port (most likely missing protocol), correct syntax is portid[-portid]/protocol")
+    return (port, proto)
+
+def __parse_port_lokkit(value):
+    try:
+        (port, proto) = value.split(":")
+    except Exception as e:
+        __fail("bad port (most likely missing protocol), correct syntax is portid[-portid]:protocol")
+    return (port, proto)
+
+def __parse_forward_port(value):
+    port = None
+    protocol = None
+    toport = None
+    toaddr = None
+    args = value.split(":")
+    for arg in args:
+        try:
+            (opt,val) = arg.split("=")
+            if opt == "port":
+                port = val
+            elif opt == "proto":
+                protocol = val
+            elif opt == "toport":
+                toport = val
+            elif opt == "toaddr":
+                toaddr = val
+        except:
+            __fail("invalid forward port arg '%s'" % (arg))
+    if not port:
+        __fail("missing port")
+    if not protocol:
+        __fail("missing protocol")
+    if not (toport or toaddr):
+        __fail("missing destination")
+    return (port, protocol, toport, toaddr)
+
+def __parse_ipset_option(value):
+    args = value.split("=")
+    if len(args) == 1:
+        return (args[0], "")
+    elif len(args) == 2:
+        return args
+    else:
+        __fail("invalid ipset option '%s'" % (value))
+
+def _check_destination_ipv(value):
+    if value not in [ "ipv4", "ipv6" ]:
+        __fail("invalid argument: %s (choose from 'ipv4', 'ipv6')" % value)
+    return value
+
+def __parse_service_destination(value):
+    try:
+        (ipv, destination) = value.split(":", 1)
+    except Exception as e:
+        __fail("bad destination, correct syntax is ipv:address[/mask]")
+    return (_check_destination_ipv(ipv), destination)
+
+def _check_ipv(value):
+    if value != "ipv4" and value != "ipv6" and value != "eb":
+        __fail("invalid argument: %s (choose from 'ipv4', 'ipv6', 'eb')" % value)
+    return value
+
+def __print_zone_info(zone, settings, verbose = False):
+    interfaces = settings.getInterfaces()
+    sources = settings.getSources()
+    services = settings.getServices()
+    ports = settings.getPorts()
+    protocols = settings.getProtocols()
+    masquerade = settings.getMasquerade()
+    forward_ports = settings.getForwardPorts()
+    icmp_blocks = settings.getIcmpBlocks()
+    rules = settings.getRichRules()
+    description = settings.getDescription()
+    short_description = settings.getShort()
+    __print(zone)
+    if verbose:
+        __print("  summary: " + short_description)
+        __print("  description: " + description)
+    __print("  interfaces: " + " ".join(interfaces))
+    __print("  sources: " + " ".join(sources))
+    __print("  services: " + " ".join(services))
+    __print("  ports: " + " ".join(["%s/%s" % (port[0], port[1]) for port in ports]))
+    __print("  protocols: " + " ".join(protocols))
+    __print("  masquerade: %s" % ("yes" if masquerade else "no"))
+    __print("  forward-ports: " + "\n\t".join(["port=%s:proto=%s:toport=%s:toaddr=%s" % (port, protocol, toport, toaddr) for (port, protocol, toport, toaddr) in forward_ports]))
+    __print("  icmp-blocks: " + " ".join(icmp_blocks))
+    __print("  rich rules: \n\t" + "\n\t".join(rules))
+
+def __print_service_info(service, settings):
+    ports = settings.getPorts()
+    protocols = settings.getProtocols()
+    modules = settings.getModules()
+    description = settings.getDescription()
+    destinations = settings.getDestinations()
+    short_description = settings.getShort()
+    __print(service)
+    __print("  summary: " + short_description)
+    __print("  ports: " + " ".join(["%s/%s" % (port[0], port[1]) for port in ports]))
+    __print("  protocols: " + " ".join(protocols))
+    __print("  modules: " + " ".join(modules))
+    __print("  destination: " + " ".join(["%s:%s" % (k,v)
+                                          for k,v in destinations.items()]))
+    __print("  description: " + description)
+
+def __print_icmptype_info(icmptype, settings):
+    destinations = settings.getDestinations()
+    description = settings.getDescription()
+    short_description = settings.getShort()
+    if len(destinations) == 0:
+        destinations = [ "ipv4", "ipv6" ]
+    __print(icmptype)
+    __print("  summary: " + short_description)
+    __print("  destination: " + " ".join(destinations))
+    __print("  description: " + description)
+
+def __print_ipset_info(ipset, settings):
+    ipset_type = settings.getType()
+    options = settings.getOptions()
+    entries = settings.getEntries()
+    description = settings.getDescription()
+    short_description = settings.getShort()
+    __print(ipset)
+    __print("  summary: " + short_description)
+    __print("  type: " + ipset_type)
+    __print("  options: " + " ".join(["%s=%s" % (k,v) if v else k
+                                      for k,v in options.items()]))
+    __print("  entries: " + " ".join(entries))
+    __print("  description: " + description)
+
+def __print_query_result(value):
+    if value:
+        __print_and_exit("yes")
+    else:
+        __print_and_exit("no", 1)
+
+def __pk_symlink(product='server'):
+    _PK_DIR='/usr/share/polkit-1/actions/'
+    _PK_NAME='org.fedoraproject.FirewallD1.'
+    os.chdir(_PK_DIR)
+    if os.path.isfile(_PK_NAME+product+'.policy'):
+        if os.path.isfile(_PK_NAME+'policy'):
+            os.remove(_PK_NAME+'policy')
+        os.symlink(_PK_NAME+product+'.policy', _PK_NAME+'policy')
+        __print_and_exit('symlink '+_PK_DIR+_PK_NAME+product+'.policy -> '+_PK_NAME+'policy')
+    else:
+        __fail('no such file '+_PK_DIR+_PK_NAME+product+'.policy')
+
+# system-config-firewall: fw_sysconfig
+CONF = '@SYSCONFIGDIR@/system-config-firewall'
+def read_sysconfig_args():
+    filename = None
+    if os.path.exists(CONF) and os.path.isfile(CONF):
+        filename = CONF
+    try:
+        f = open(filename, 'r')
+    except:
+        return None
+    argv = [ ]
+    for line in f:
+        if not line:
+            break
+        line = line.strip()
+        if len(line) < 1 or line[0] == '#':
+            continue
+        argv.append(line)
+    f.close()
+    return argv
+
+##############################################################################
+
+parser = argparse.ArgumentParser(usage="see firewall-offline-cmd man page",
+                                 add_help=False)
+
+parser_group_lokkit = parser.add_argument_group()
+parser_group_lokkit.add_argument("--enabled", action="store_true")
+parser_group_lokkit.add_argument("--disabled", action="store_true")
+parser_group_lokkit.add_argument("--addmodule", metavar="<module>", action='append')
+parser_group_lokkit.add_argument("--removemodule", metavar="<module>", action='append')
+parser_group_lokkit.add_argument("--service", "-s", metavar="<service>", action='append')
+parser_group_lokkit.add_argument("--remove-service", metavar="<service>", action='append')
+parser_group_lokkit.add_argument("--port", "-p", metavar="<port>", action='append')
+parser_group_lokkit.add_argument("--trust", "-t", metavar="<iface>", action='append')
+parser_group_lokkit.add_argument("--masq", "-m", metavar="<iface>", action='append')
+parser_group_lokkit.add_argument("--custom-rules", metavar="<filename>", action='append')
+parser_group_lokkit.add_argument("--forward-port", metavar="<port>", action='append')
+parser_group_lokkit.add_argument("--block-icmp", metavar="<icmptype>", action='append')
+
+parser_group_standalone = parser.add_mutually_exclusive_group()
+parser_group_standalone.add_argument("-h", "--help",
+                                     action="store_true")
+parser_group_standalone.add_argument("-V", "--version", action="store_true")
+parser_group_standalone.add_argument("--policy-server", action="store_true")
+parser_group_standalone.add_argument("--policy-desktop", action="store_true")
+parser_group_standalone.add_argument("--lockdown-on", action="store_true")
+parser_group_standalone.add_argument("--lockdown-off", action="store_true")
+parser_group_standalone.add_argument("--query-lockdown", action="store_true")
+
+parser_group_standalone.add_argument("--get-default-zone", action="store_true")
+parser_group_standalone.add_argument("--set-default-zone", metavar="<zone>")
+parser_group_standalone.add_argument("--get-zones", action="store_true")
+parser_group_standalone.add_argument("--get-services", action="store_true")
+parser_group_standalone.add_argument("--get-icmptypes", action="store_true")
+parser_group_standalone.add_argument("--get-zone-of-interface", metavar="<iface>")
+parser_group_standalone.add_argument("--get-zone-of-source", metavar="<source>")
+parser_group_standalone.add_argument("--list-all-zones", action="store_true")
+
+parser_group_standalone.add_argument("--info-zone", metavar="<zone>")
+parser_group_standalone.add_argument("--info-service", metavar="<service>")
+parser_group_standalone.add_argument("--info-icmptype", metavar="<icmptype>")
+parser_group_standalone.add_argument("--info-ipset", metavar="<ipset>")
+
+parser_group_config = parser.add_mutually_exclusive_group()
+parser_group_config.add_argument("--new-icmptype", metavar="<icmptype>")
+parser_group_config.add_argument("--delete-icmptype", metavar="<icmptype>")
+parser_group_config.add_argument("--new-service", metavar="<service>")
+parser_group_config.add_argument("--delete-service", metavar="<service>")
+parser_group_config.add_argument("--new-zone", metavar="<zone>")
+parser_group_config.add_argument("--delete-zone", metavar="<zone>")
+parser_group_config.add_argument("--new-ipset", metavar="<ipset>")
+parser_group_config.add_argument("--delete-ipset", metavar="<ipset>")
+
+parser_group_lockdown_whitelist = parser.add_mutually_exclusive_group()
+parser_group_lockdown_whitelist.add_argument("--list-lockdown-whitelist-commands", action="store_true")
+parser_group_lockdown_whitelist.add_argument("--add-lockdown-whitelist-command", metavar="<command>")
+parser_group_lockdown_whitelist.add_argument("--remove-lockdown-whitelist-command", metavar="<command>")
+parser_group_lockdown_whitelist.add_argument("--query-lockdown-whitelist-command", metavar="<command>")
+
+parser_group_lockdown_whitelist.add_argument("--list-lockdown-whitelist-contexts", action="store_true")
+parser_group_lockdown_whitelist.add_argument("--add-lockdown-whitelist-context", metavar="<context>")
+parser_group_lockdown_whitelist.add_argument("--remove-lockdown-whitelist-context", metavar="<context>")
+parser_group_lockdown_whitelist.add_argument("--query-lockdown-whitelist-context", metavar="<context>")
+
+parser_group_lockdown_whitelist.add_argument("--list-lockdown-whitelist-uids", action="store_true")
+parser_group_lockdown_whitelist.add_argument("--add-lockdown-whitelist-uid", metavar="<uid>", type=int)
+parser_group_lockdown_whitelist.add_argument("--remove-lockdown-whitelist-uid", metavar="<uid>", type=int)
+parser_group_lockdown_whitelist.add_argument("--query-lockdown-whitelist-uid", metavar="<uid>", type=int)
+
+parser_group_lockdown_whitelist.add_argument("--list-lockdown-whitelist-users", action="store_true")
+parser_group_lockdown_whitelist.add_argument("--add-lockdown-whitelist-user", metavar="<user>")
+parser_group_lockdown_whitelist.add_argument("--remove-lockdown-whitelist-user", metavar="<user>")
+parser_group_lockdown_whitelist.add_argument("--query-lockdown-whitelist-user", metavar="<user>")
+
+parser.add_argument("--zone", default="", metavar="<zone>")
+
+parser_group_zone = parser.add_mutually_exclusive_group()
+parser_group_zone.add_argument("--add-interface", metavar="<iface>")
+parser_group_zone.add_argument("--remove-interface", metavar="<iface>")
+parser_group_zone.add_argument("--query-interface", metavar="<iface>")
+parser_group_zone.add_argument("--change-interface", "--change-zone", metavar="<iface>")
+parser_group_zone.add_argument("--list-interfaces", action="store_true")
+parser_group_zone.add_argument("--add-source", metavar="<source>")
+parser_group_zone.add_argument("--remove-source", metavar="<source>")
+parser_group_zone.add_argument("--query-source", metavar="<source>")
+parser_group_zone.add_argument("--change-source", metavar="<source>")
+parser_group_zone.add_argument("--list-sources", action="store_true")
+parser_group_zone.add_argument("--add-rich-rule", metavar="<rule>", action='append')
+parser_group_zone.add_argument("--remove-rich-rule", metavar="<rule>", action='append')
+parser_group_zone.add_argument("--query-rich-rule", metavar="<rule>")
+parser_group_zone.add_argument("--add-service", metavar="<service>", action='append')
+parser_group_zone.add_argument("--remove-service-from-zone", metavar="<zone>", action='append')
+parser_group_zone.add_argument("--query-service", metavar="<zone>")
+parser_group_zone.add_argument("--add-port", metavar="<port>", action='append')
+parser_group_zone.add_argument("--remove-port", metavar="<port>", action='append')
+parser_group_zone.add_argument("--query-port", metavar="<port>")
+parser_group_zone.add_argument("--add-protocol", metavar="<protocol>", action='append')
+parser_group_zone.add_argument("--remove-protocol", metavar="<protocol>", action='append')
+parser_group_zone.add_argument("--query-protocol", metavar="<protocol>")
+parser_group_zone.add_argument("--add-masquerade", action="store_true")
+parser_group_zone.add_argument("--remove-masquerade", action="store_true")
+parser_group_zone.add_argument("--query-masquerade", action="store_true")
+parser_group_zone.add_argument("--add-icmp-block", metavar="<icmptype>", action='append')
+parser_group_zone.add_argument("--remove-icmp-block", metavar="<icmptype>", action='append')
+parser_group_zone.add_argument("--query-icmp-block", metavar="<icmptype>")
+parser_group_zone.add_argument("--add-forward-port", metavar="<port>", action='append')
+parser_group_zone.add_argument("--remove-forward-port", metavar="<port>", action='append')
+parser_group_zone.add_argument("--query-forward-port", metavar="<port>")
+parser_group_zone.add_argument("--list-rich-rules", action="store_true")
+parser_group_zone.add_argument("--list-services", action="store_true")
+parser_group_zone.add_argument("--list-ports", action="store_true")
+parser_group_zone.add_argument("--list-protocols", action="store_true")
+parser_group_zone.add_argument("--list-icmp-blocks", action="store_true")
+parser_group_zone.add_argument("--list-forward-ports", action="store_true")
+parser_group_zone.add_argument("--list-all", action="store_true")
+parser_group_zone.add_argument("--get-target", action="store_true")
+parser_group_zone.add_argument("--set-target", metavar="<target>")
+
+parser.add_argument("--option", metavar="<key>[=<value>]", action='append')
+parser.add_argument("--type", metavar="<ipsettype>")
+parser.add_argument("--ipset", metavar="<ipset>")
+
+parser_ipset = parser.add_mutually_exclusive_group()
+#parser_ipset.add_argument("--add-option", metavar="<key>[=<value>]")
+#parser_ipset.add_argument("--remove-option", metavar="<key>[=<value>]")
+#parser_ipset.add_argument("--query-option", metavar="<key>[=<value>]")
+#parser_ipset.add_argument("--get-options", action="store_true")
+
+parser_ipset.add_argument("--get-ipsets", action="store_true")
+parser_ipset.add_argument("--add-entry", metavar="<entry>")
+parser_ipset.add_argument("--remove-entry", metavar="<entry>")
+parser_ipset.add_argument("--query-entry", metavar="<entry>")
+parser_ipset.add_argument("--get-entries", action="store_true")
+
+parser.add_argument("--icmptype", metavar="<icmptype>")
+
+parser_icmptype = parser.add_mutually_exclusive_group()
+parser_icmptype.add_argument("--add-destination", metavar="<ipv>", action='append')
+parser_icmptype.add_argument("--remove-destination", metavar="<ipv>", action='append')
+parser_icmptype.add_argument("--query-destination", metavar="<ipv>")
+parser_icmptype.add_argument("--get-destinations", action="store_true")
+
+#parser.add_argument("--service", metavar="<service>")
+
+parser_service = parser.add_mutually_exclusive_group()
+parser_service.add_argument("--get-ports", action="store_true")
+parser_service.add_argument("--get-protocols", action="store_true")
+
+parser_service.add_argument("--add-module", metavar="<module>", action='append')
+parser_service.add_argument("--remove-module", metavar="<module>", action='append')
+parser_service.add_argument("--query-module", metavar="<module>")
+parser_service.add_argument("--get-modules", action="store_true")
+
+parser_service.add_argument("--set-destination", metavar="<destination>")
+parser_service.add_argument("--get-destination", action="store_true")
+
+parser_service.add_argument("--set-description", metavar="<description>")
+parser_service.add_argument("--get-description", action="store_true")
+
+parser_service.add_argument("--set-short", metavar="<description>")
+parser_service.add_argument("--get-short", action="store_true")
+
+parser.add_argument("--direct", action="store_true")
+
+parser_direct = parser.add_mutually_exclusive_group()
+parser_direct.add_argument("--add-passthrough", nargs=argparse.REMAINDER,
+                    metavar=("{ ipv4 | ipv6 | eb }", "<args>"))
+parser_direct.add_argument("--remove-passthrough", nargs=argparse.REMAINDER,
+                    metavar=("{ ipv4 | ipv6 | eb }", "<args>"))
+parser_direct.add_argument("--query-passthrough", nargs=argparse.REMAINDER,
+                    metavar=("{ ipv4 | ipv6 | eb }", "<args>"))
+parser_direct.add_argument("--get-passthroughs", nargs=1,
+                    metavar=("{ ipv4 | ipv6 | eb }"))
+parser_direct.add_argument("--get-all-passthroughs", action="store_true")
+parser_direct.add_argument("--add-chain", nargs=3,
+                    metavar=("{ ipv4 | ipv6 | eb }", "<table>", "<chain>"))
+parser_direct.add_argument("--remove-chain", nargs=3,
+                        metavar=("{ ipv4 | ipv6 | eb }", "<table>", "<chain>"))
+parser_direct.add_argument("--query-chain", nargs=3,
+                        metavar=("{ ipv4 | ipv6 | eb }", "<table>", "<chain>"))
+parser_direct.add_argument("--get-all-chains", action="store_true")
+parser_direct.add_argument("--get-chains", nargs=2,
+                        metavar=("{ ipv4 | ipv6 | eb }", "<table>"))
+parser_direct.add_argument("--add-rule", nargs=argparse.REMAINDER,
+                        metavar=("{ ipv4 | ipv6 | eb }", "<table> <chain> <priority> <args>"))
+parser_direct.add_argument("--remove-rule", nargs=argparse.REMAINDER,
+                        metavar=("{ ipv4 | ipv6 | eb }", "<table> <chain> <priority> <args>"))
+parser_direct.add_argument("--remove-rules", nargs=3,
+                        metavar=("{ ipv4 | ipv6 | eb }", "<table> <chain>"))
+parser_direct.add_argument("--query-rule", nargs=argparse.REMAINDER,
+                        metavar=("{ ipv4 | ipv6 | eb }", "<table> <chain> <priority> <args>"))
+parser_direct.add_argument("--get-rules", nargs=3,
+                        metavar=("{ ipv4 | ipv6 | eb }", "<table>", "<chain>"))
+parser_direct.add_argument("--get-all-rules", action="store_true")
+
+##############################################################################
+
+if len(sys.argv) > 1:
+    i = -1
+    args = sys.argv[1:]
+    if '--add-passthrough' in args:
+        i = args.index('--add-passthrough') + 1
+    elif '--remove-passthrough' in args:
+        i = args.index('--remove-passthrough') + 1
+    elif '--query-passthrough' in args:
+        i = args.index('--query-passthrough') + 1
+    elif '--add-rule' in args:
+        i = args.index('--add-rule') + 4
+    elif '--remove-rule' in args:
+        i = args.index('--remove-rule') + 4
+    elif '--query-rule' in args:
+        i = args.index('--query-rule') + 4
+    # join <args> into one argument to prevent parser from parsing each iptables
+    # option, because they can conflict with firewall-cmd options
+    # # e.g. --delete (iptables) and --delete-* (firewall-cmd)
+    if (i > -1) and (i < len(args) - 1):
+        aux_args = args[:]
+        args = aux_args[:i+1] # all but not <args>
+        args.append(joinArgs(aux_args[i+1:])) # add <args> as one arg
+    a = parser.parse_args(args)
+else:
+    # migrate configuration from @SYSCONFIGDIR@/system-config-firewall
+    args = read_sysconfig_args()
+    if args:
+        a = parser.parse_args(args)
+    else:
+        __fail("Opening of '%s' failed, exiting." % CONF)
+
+options_lokkit = a.enabled or a.disabled or a.addmodule or a.removemodule or \
+                 a.trust or a.masq or a.custom_rules or \
+                 a.service or a.remove_service or a.port or \
+                 a.trust or a.masq or a.forward_port or a.block_icmp
+
+options_desc_xml_file = a.set_description or a.get_description or \
+                        a.set_short or a.get_short
+
+options_standalone = a.help or a.version or \
+    a.policy_server or a.policy_desktop or \
+    a.lockdown_on or a.lockdown_off or a.query_lockdown or \
+    a.get_default_zone or a.set_default_zone
+
+options_lockdown_whitelist = \
+    a.list_lockdown_whitelist_commands or a.add_lockdown_whitelist_command or \
+    a.remove_lockdown_whitelist_command or \
+    a.query_lockdown_whitelist_command or \
+    a.list_lockdown_whitelist_contexts or a.add_lockdown_whitelist_context or \
+    a.remove_lockdown_whitelist_context or \
+    a.query_lockdown_whitelist_context or \
+    a.list_lockdown_whitelist_uids or a.add_lockdown_whitelist_uid is not None or \
+    a.remove_lockdown_whitelist_uid is not None or \
+    a.query_lockdown_whitelist_uid is not None or \
+    a.list_lockdown_whitelist_users or a.add_lockdown_whitelist_user or \
+    a.remove_lockdown_whitelist_user or \
+    a.query_lockdown_whitelist_user
+
+options_config = a.get_zones or a.get_services or a.get_icmptypes or \
+                 options_lockdown_whitelist or a.list_all_zones or \
+                 a.get_zone_of_interface or a.get_zone_of_source or \
+                 a.info_zone or a.info_icmptype or a.info_service or \
+                 a.info_ipset or a.get_ipsets
+
+options_zone_action_action = \
+    a.add_service or a.remove_service_from_zone or a.query_service or \
+    a.add_port or a.remove_port or a.query_port or \
+    a.add_protocol or a.remove_protocol or a.query_protocol or \
+    a.add_icmp_block or a.remove_icmp_block or a.query_icmp_block or \
+    a.add_forward_port or a.remove_forward_port or a.query_forward_port
+
+options_zone_interfaces_sources = \
+    a.list_interfaces or a.change_interface or \
+    a.add_interface or a.remove_interface or a.query_interface or \
+    a.list_sources or a.change_source or \
+    a.add_source or a.remove_source or a.query_source
+
+options_zone_adapt_query = \
+    a.add_rich_rule or a.remove_rich_rule or a.query_rich_rule or \
+    a.add_masquerade or a.remove_masquerade or a.query_masquerade or \
+    a.list_services or a.list_ports or a.list_protocols or \
+    a.list_icmp_blocks or a.list_forward_ports or a.list_rich_rules or \
+    a.list_all or a.get_target or a.set_target
+
+options_zone_ops = options_zone_interfaces_sources or \
+               options_zone_action_action or options_zone_adapt_query
+
+options_zone = a.zone or options_zone_ops or options_desc_xml_file
+
+options_ipset = a.add_entry or a.remove_entry or a.query_entry or \
+                a.get_entries or options_desc_xml_file
+
+options_icmptype = a.add_destination or a.remove_destination or \
+                   a.query_destination or a.get_destinations or \
+                   options_desc_xml_file
+
+options_service = a.add_port or a.remove_port or a.query_port or \
+                  a.get_ports or \
+                  a.add_protocol or a.remove_protocol or a.query_protocol or \
+                  a.get_protocols or \
+                  a.add_module or a.remove_module or a.query_module or \
+                  a.get_modules or \
+                  a.set_destination or a.remove_destination or \
+                  a.query_destination or a.get_destinations or \
+                  options_desc_xml_file
+
+options_permanent = options_config or options_zone or \
+                    a.new_icmptype or a.delete_icmptype or \
+                    a.new_service or a.delete_service or \
+                    a.new_zone or a.delete_zone or \
+                    a.new_ipset or a.delete_ipset or \
+                    a.ipset or options_ipset or \
+                    (a.icmptype and options_icmptype) or \
+                    (a.service and options_service)
+
+options_direct = \
+           a.add_chain or a.remove_chain or a.query_chain or \
+           a.get_chains or a.get_all_chains or \
+           a.add_rule or a.remove_rule or a.remove_rules or a.query_rule or \
+           a.get_rules or a.get_all_rules or \
+           a.add_passthrough or a.remove_passthrough or a.query_passthrough or \
+           a.get_passthroughs or a.get_all_passthroughs
+
+# these are supposed to only write out some output
+options_list_get = a.help or a.version or a.list_all or a.list_all_zones or \
+ a.list_lockdown_whitelist_commands or a.list_lockdown_whitelist_contexts or \
+ a.list_lockdown_whitelist_uids or a.list_lockdown_whitelist_users or \
+ a.list_services or a.list_ports or a.list_protocols or a.list_icmp_blocks or \
+ a.list_forward_ports or a.list_rich_rules or a.list_interfaces or \
+ a.list_sources or \
+ a.get_default_zone or a.get_zone_of_interface or \
+ a.get_zone_of_source or a.get_zones or a.get_services or a.get_icmptypes or \
+ a.get_target or a.set_target or \
+ a.info_zone or a.info_icmptype or a.info_service or \
+ a.info_ipset or a.get_ipsets or a.get_entries or \
+ a.get_destinations or a.get_description
+
+###############################################################################
+
+# Check various impossible combinations of options
+
+if not (options_lokkit or options_standalone or options_ipset or \
+        options_icmptype or options_service or \
+        options_permanent or options_direct or options_desc_xml_file):
+    __fail(parser.format_usage() + "No option specified.")
+
+if options_lokkit and (options_standalone or \
+                       options_permanent or options_direct) and \
+                       not (options_service and a.service):
+    __fail(parser.format_usage() +
+           "Can't use lokkit options with other options.")
+
+if options_standalone and (options_permanent or \
+                           options_direct or options_ipset):
+    __fail(parser.format_usage() +
+           "Can't use stand-alone options with other options.")
+
+if (options_ipset and not options_desc_xml_file and not a.ipset):
+    __fail(parser.format_usage() + "No ipset specified.")
+
+if (options_icmptype and not a.icmptype) and \
+   not (options_service and a.service) and not options_desc_xml_file:
+    __fail(parser.format_usage() + "No icmptype specified.")
+
+if (options_service and a.service and len(a.service) > 0):
+    if len(a.service) > 1:
+        __fail(parser.format_usage() + "More than one service specified.")
+    # use the first entry in the array only
+    a.service = a.service[0]
+
+if options_direct and options_zone:
+    __fail(parser.format_usage() +
+           "Can't use 'direct' options with other options.")
+
+if (a.direct and not options_direct) or (options_direct and not a.direct):
+    __fail(parser.format_usage() +
+           "Wrong usage of 'direct' options.")
+
+if options_config and options_zone:
+    __fail(parser.format_usage() +
+           "Wrong usage of --get-zones | --get-services | --get-icmptypes.")
+
+if a.help:
+    __usage()
+    sys.exit(0)
+
+zone = a.zone
+fw = Firewall_test()
+fw.start()
+
+try:
+    if a.version:
+        __print_and_exit(config.VERSION)
+
+    if a.policy_server:
+        __pk_symlink('server')
+    if a.policy_desktop:
+        __pk_symlink('desktop')
+
+    # Lokkit Compatibility Options
+    if options_lokkit and not (options_service and a.service):
+        trusted_zone = "trusted"
+        default_zone = fw.get_default_zone()
+        fw_zone = fw.config.get_zone(default_zone)
+        fw_settings = FirewallClientZoneSettings(
+            list(fw.config.get_zone_config(fw_zone)))
+
+        if a.enabled:
+            # Enable firewall (default)
+            os.system("systemctl enable firewalld.service")
+        if a.disabled:
+            # Disable firewall
+            os.system("systemctl disable firewalld.service")
+        if a.addmodule:
+            for m in a.addmodule:
+                __print("Ignoring addmodule '%s'" % m)
+        if a.removemodule:
+            for m in a.removemodule:
+                __print("Ignoring removemodule '%s'" % m)
+        if a.custom_rules:
+            for c in a.custom_rules:
+                __print("Ignoring custom-rule '%s'" % c)
+        if a.service:
+            for s in a.service:
+                __print("Adding service '%s' to default zone." % s)
+                if not fw_settings.queryService(s):
+                    fw_settings.addService(s)
+                else:
+                    __print("ALREADY_ENABLED: %s" % s)
+        if a.remove_service:
+            for s in a.remove_service:
+                __print("Removing service '%s' from default zone." % s)
+                if fw_settings.queryService(s):
+                    fw_settings.removeService(s)
+                else:
+                    __print("NOT_ENABLED: %s" % s)
+        if a.port:
+            for port_proto in a.port:
+                (port, proto) = __parse_port_lokkit(port_proto)
+                __print("Adding port '%s/%s' to default zone." % (port, proto))
+                if not fw_settings.queryPort(port, proto):
+                    fw_settings.addPort(port, proto)
+                else:
+                    __print("ALREADY_ENABLED: %s" % port_proto)
+        if a.trust:
+            if default_zone != trusted_zone:
+                fw_trusted = fw.config.get_zone("trusted")
+                fw_trusted_settings = FirewallClientZoneSettings(
+                                 list(fw.config.get_zone_config(fw_trusted)))
+                # Bind an interface to the trusted zone
+                for i in a.trust:
+                    __print("Interface '%s' will be bound to zone '%s'." % \
+                            (i, trusted_zone))
+                    if not fw_trusted_settings.queryInterface(i):
+                        fw_trusted_settings.addInterface(i)
+                    else:
+                        __print("ALREADY_ENABLED: %s" % i)
+                fw.config.set_zone_config(fw_trusted, fw_trusted_settings.settings)
+            else:
+                for i in a.trust:
+                    __print("Interface '%s' will be bound to zone '%s'." % \
+                            (i, trusted_zone))
+                    if not fw_settings.queryInterface(i):
+                        fw_settings.addInterface(i)
+                    else:
+                        __print("ALREADY_ENABLED: %s" % i)
+        if a.masq:
+            # Enables masquerading in the default zone, interface argument is ignored
+            __print("Enabling masquerade for the default zone.")
+            fw_settings.setMasquerade(True)
+        if a.forward_port:
+            for fp in a.forward_port:
+                (port, protocol, toport, toaddr) = __parse_forward_port(fp)
+                __print("Adding forward port %s:%s:%s:%s to default zone." % \
+                      (port, protocol, toport, toaddr))
+                if not fw_settings.queryForwardPort(port, protocol, toport,
+                                                    toaddr):
+                    fw_settings.addForwardPort(port, protocol, toport, toaddr)
+                else:
+                    __print("ALREADY_ENABLED: %s" % fp)
+        if a.block_icmp:
+            for ib in a.block_icmp:
+                __print("Adding icmpblock '%s' to default zone." % ib)
+                if not fw_settings.queryIcmpBlock(ib):
+                    fw_settings.addIcmpBlock(ib)
+                else:
+                    __print("ALREADY_ENABLED: %s" % ib)
+
+        fw.config.set_zone_config(fw_zone, fw_settings.settings)
+
+    # options from firewall-cmd
+    elif a.get_default_zone:
+        __print_and_exit(fw.get_default_zone())
+    elif a.set_default_zone:
+        fw.set_default_zone(a.set_default_zone)
+
+    # lockdown
+    elif a.lockdown_on:
+        fw.enable_lockdown()
+    elif a.lockdown_off:
+        fw.disable_lockdown()
+    elif a.query_lockdown:
+        __print_query_result(fw.policies.query_lockdown())
+
+    # zones
+    elif a.get_zones:
+        zones = fw.config.get_zones()
+        __print_and_exit(" ".join(zones))
+
+    elif a.new_zone:
+        fw.config.new_zone(a.new_zone, FirewallClientZoneSettings().settings)
+
+    elif a.delete_zone:
+        obj = fw.config.get_zone(a.delete_zone)
+        fw.config.remove_zone(obj)
+
+    elif a.info_zone:
+        zone = fw.config.get_zone(a.info_zone)
+        settings = FirewallClientZoneSettings(
+            list(fw.config.get_zone_config(zone)))
+        __print_zone_info(a.info_zone, settings, True)
+        sys.exit(0)
+
+    # services
+    elif a.get_services:
+        services = fw.config.get_services()
+        __print_and_exit(" ".join(services))
+
+    elif a.new_service:
+        fw.config.new_service(a.new_service,
+                              FirewallClientServiceSettings().settings)
+
+    elif a.delete_service:
+        obj = fw.config.get_service(a.delete_service)
+        fw.config.remove_service(obj)
+
+        # remove service from all zones
+        zones = fw.config.get_zones()
+        for zone in zones:
+            _zone = fw.config.get_zone(zone)
+            _settings = FirewallClientZoneSettings(
+                list(fw.config.get_zone_config(_zone)))
+            if _settings.queryService(a.delete_service):
+                _settings.removeService(a.delete_service)
+                fw.config.set_zone_config(_zone, _settings.settings)
+
+    elif a.info_service:
+        service = fw.config.get_service(a.info_service)
+        settings = FirewallClientServiceSettings(
+            list(fw.config.get_service_config(service)))
+        __print_service_info(a.info_service, settings)
+        sys.exit(0)
+
+    # icmptypes
+    elif a.get_icmptypes:
+        icmptypes = fw.config.get_icmptypes()
+        __print_and_exit(" ".join(icmptypes))
+
+    elif a.new_icmptype:
+        fw.config.new_icmptype(a.new_icmptype,
+                               FirewallClientIcmpTypeSettings().settings)
+
+    elif a.delete_icmptype:
+        obj = fw.config.get_icmptype(a.delete_icmptype)
+        fw.config.remove_icmptype(obj)
+
+        # remove icmpyte from all zones
+        zones = fw.config.get_zones()
+        for zone in zones:
+            _zone = fw.config.get_zone(zone)
+            _settings = FirewallClientZoneSettings(
+                list(fw.config.get_zone_config(_zone)))
+            if _settings.queryIcmpBlock(a.delete_icmptype):
+                _settings.removeIcmpBlock(a.delete_icmptype)
+                fw.config.set_zone_config(_zone, _settings.settings)
+
+    elif a.info_icmptype:
+        icmptype = fw.config.get_icmptype(a.info_icmptype)
+        settings = FirewallClientIcmpTypeSettings(
+            list(fw.config.get_icmptype_config(icmptype)))
+
+        __print_icmptype_info(a.info_icmptype, settings)
+        sys.exit(0)
+
+    elif a.icmptype and options_icmptype:
+        icmptype = fw.config.get_icmptype(a.icmptype)
+        settings = FirewallClientIcmpTypeSettings(
+            list(fw.config.get_icmptype_config(icmptype)))
+
+        if a.add_destination:
+            for ipv in a.add_destination:
+                settings.addDestination(_check_destination_ipv(ipv))
+            icmptype.update(settings)
+            fw.config.set_icmptype_config(icmptype, settings.settings)
+
+        elif a.remove_destination:
+            for ipv in a.remove_destination:
+                settings.removeDestination(_check_destination_ipv(ipv))
+            fw.config.set_icmptype_config(icmptype, settings.settings)
+
+        elif a.query_destination:
+            r = a.query_destination in settings.getDestinations()
+            __print_query_result(r)
+
+        elif a.get_destinations:
+            l = settings.getDestinations()
+            if len(l) == 0:
+                l = [ "ipv4", "ipv6" ]
+            __print_and_exit("\n".join(l))
+
+        elif a.set_description:
+            settings.setDescription(a.set_description)
+            fw.config.set_icmptype_config(icmptype, settings.settings)
+
+        elif a.get_description:
+            __print_and_exit(settings.getDescription())
+
+        elif a.set_short:
+            settings.setShort(a.set_short)
+            fw.config.set_icmptype_config(icmptype, settings.settings)
+
+        elif a.get_short:
+            __print_and_exit(settings.getShort())
+
+        else:
+            __fail(parser.format_usage() + "Unknown option")
+
+    elif a.service and options_service:
+        service = fw.config.get_service(a.service)
+        settings = FirewallClientServiceSettings(
+            list(fw.config.get_service_config(service)))
+
+        if a.add_port:
+            for port_proto in a.add_port:
+                (port, proto) = __parse_port(port_proto)
+                settings.addPort(port, proto)
+            fw.config.set_service_config(service, settings.settings)
+
+        elif a.remove_port:
+            for port_proto in a.remove_port:
+                (port, proto) = __parse_port(port_proto)
+                settings.removePort(port, proto)
+            fw.config.set_service_config(service, settings.settings)
+
+        elif a.query_port:
+            (port, proto) = __parse_port(a.query_port)
+            __print_query_result(settings.queryPort(port, proto))
+
+        elif a.get_ports:
+            l = settings.getPorts()
+            __print_and_exit(" ".join(["%s/%s" % (port[0], port[1]) for port in l]))
+
+        elif a.add_protocol:
+            for protocol in a.add_protocol:
+                settings.addProtocol(protocol)
+            fw.config.set_service_config(service, settings.settings)
+
+        elif a.remove_protocol:
+            for protocol in a.remove_protocol:
+                settings.removeProtocol(protocol)
+            fw.config.set_service_config(service, settings.settings)
+
+        elif a.query_protocol:
+            __print_query_result(settings.queryProtocol(a.query_protocol))
+
+        elif a.get_protocols:
+            l = settings.getProtocols()
+            __print_and_exit(" ".join(["%s" % protocol for protocol in l]))
+
+        elif a.add_module:
+            for module in a.add_module:
+                settings.addModule(module)
+            fw.config.set_service_config(service, settings.settings)
+
+        elif a.remove_module:
+            for module in a.remove_module:
+                settings.removeModule(module)
+            fw.config.set_service_config(service, settings.settings)
+
+        elif a.query_module:
+            __print_query_result(settings.queryModule(a.query_module))
+
+        elif a.get_modules:
+            l = settings.getModules()
+            __print_and_exit(" ".join(["%s" % module for module in l]))
+
+        elif a.set_destination:
+            (ipv, dest) = __parse_service_destination(a.set_destination)
+            settings.setDestination(ipv, dest)
+            fw.config.set_service_config(service, settings.settings)
+
+        elif a.remove_destination:
+            for dest in a.remove_destination:
+                settings.removeDestination(
+                    _check_destination_ipv(dest))
+            fw.config.set_service_config(service, settings.settings)
+
+        elif a.query_destination:
+            (ipv, dest) = __parse_service_destination(a.query_destination)
+            __print_query_result(settings.queryDestination(ipv, dest))
+
+        elif a.get_destinations:
+            l = settings.getDestinations()
+            __print_and_exit(" ".join(["%s:%s" % (dest[0], dest[1]) for dest in l.items()]))
+
+        elif a.set_description:
+            settings.setDescription(a.set_description)
+            fw.config.set_service_config(service, settings.settings)
+
+        elif a.get_description:
+            __print_and_exit(settings.getDescription())
+
+        elif a.set_short:
+            settings.setShort(a.set_short)
+            fw.config.set_service_config(service, settings.settings)
+
+        elif a.get_short:
+            __print_and_exit(settings.getShort())
+
+        else:
+            __fail(parser.format_usage() + "Unknown option")
+
+    # ipsets
+    if a.get_ipsets:
+        ipsets = fw.config.get_ipsets()
+        __print_and_exit(" ".join(sorted(ipsets)))
+
+    elif a.new_ipset:
+        if not a.type:
+            __fail(parser.format_usage() + "No type specified.")
+
+        settings = FirewallClientIPSetSettings()
+        settings.setType(a.type)
+        if a.option:
+            for opt in a.option:
+                settings.addOption(*__parse_ipset_option(opt))
+        fw.config.new_ipset(a.new_ipset, settings.settings)
+
+    elif a.delete_ipset:
+        ipset = fw.config.get_ipset(a.delete_ipset)
+        fw.config.remove_ipset(ipset)
+
+    elif a.info_ipset:
+        ipset = fw.config.get_ipset(a.info_ipset)
+        settings = FirewallClientIPSetSettings(
+            list(fw.config.get_ipset_config(ipset)))
+        __print_ipset_info(a.info_ipset, settings)
+        sys.exit(0)
+
+    elif a.ipset:
+        if a.add_entry:
+            ipset = fw.config.get_ipset(a.ipset)
+            settings = FirewallClientIPSetSettings(
+            list(fw.config.get_ipset_config(ipset)))
+            settings.addEntry(a.add_entry)
+            fw.config.set_ipset_config(ipset, settings.settings)
+
+        elif a.remove_entry:
+            ipset = fw.config.get_ipset(a.ipset)
+            settings = FirewallClientIPSetSettings(
+                list(fw.config.get_ipset_config(ipset)))
+            settings.removeEntry(a.remove_entry)
+            fw.config.set_ipset_config(ipset, settings.settings)
+
+        elif a.query_entry:
+            ipset = fw.config.get_ipset(a.ipset)
+            settings = FirewallClientIPSetSettings(
+                list(fw.config.get_ipset_config(ipset)))
+            r = settings.queryEntry(a.query_entry)
+            __print_query_result(r)
+
+        elif a.get_entries:
+            ipset = fw.config.get_ipset(a.ipset)
+            settings = FirewallClientIPSetSettings(
+                list(fw.config.get_ipset_config(ipset)))
+            l = settings.getEntries()
+            __print_and_exit("\n".join(l))
+
+        elif a.set_description:
+             ipset = fw.config.get_ipset(a.ipset)
+             settings = FirewallClientIPSetSettings(
+                list(fw.config.get_ipset_config(ipset)))
+             settings.setDescription(a.set_description)
+
+             fw.config.set_ipset_config(ipset, settings.settings)
+
+        elif a.get_description:
+            ipset = fw.config.get_ipset(a.ipset)
+            settings = FirewallClientIPSetSettings(
+                list(fw.config.get_ipset_config(ipset)))
+
+            __print_and_exit(settings.getDescription())
+
+        elif a.set_short:
+             ipset = fw.config.get_ipset(a.ipset)
+             settings = FirewallClientIPSetSettings(
+                list(fw.config.get_ipset_config(ipset)))
+             settings.setShort(a.set_short)
+
+             fw.config.set_ipset_config(ipset, settings.settings)
+
+        elif a.get_short:
+            ipset = fw.config.get_ipset(a.ipset)
+            settings = FirewallClientIPSetSettings(
+                list(fw.config.get_ipset_config(ipset)))
+
+            __print_and_exit(settings.getShort())
+
+        else:
+            __fail(parser.format_usage() + "Unknown option")
+
+    # lockdown whitelist
+
+    elif options_lockdown_whitelist:
+        whitelist = fw.config.get_policies().lockdown_whitelist
+
+        # commands
+        if a.list_lockdown_whitelist_commands:
+            l = whitelist.get_commands()
+            __print_and_exit("\n".join(l))
+        elif a.add_lockdown_whitelist_command:
+            whitelist.add_command(a.add_lockdown_whitelist_command)
+        elif a.remove_lockdown_whitelist_command:
+            whitelist.remove_command(a.remove_lockdown_whitelist_command)
+        elif a.query_lockdown_whitelist_command:
+            __print_query_result(a.query_lockdown_whitelist_command in 
+                                 whitelist.get_commands())
+
+        # contexts
+        elif a.list_lockdown_whitelist_contexts:
+            l = whitelist.get_contexts()
+            __print_and_exit("\n".join(l))
+        elif a.add_lockdown_whitelist_context:
+            whitelist.add_context(a.add_lockdown_whitelist_context)
+        elif a.remove_lockdown_whitelist_context:
+            whitelist.remove_context(a.remove_lockdown_whitelist_context)
+        elif a.query_lockdown_whitelist_context:
+            __print_query_result(a.query_lockdown_whitelist_context in 
+                                 whitelist.get_contexts())
+
+        # uids
+        elif a.list_lockdown_whitelist_uids:
+            l = whitelist.get_uids()
+            __print_and_exit(" ".join(map(str, l)))
+        elif a.add_lockdown_whitelist_uid is not None:
+            whitelist.add_uid(a.add_lockdown_whitelist_uid)
+        elif a.remove_lockdown_whitelist_uid is not None:
+            whitelist.remove_uid(a.remove_lockdown_whitelist_uid)
+        elif a.query_lockdown_whitelist_uid is not None:
+            __print_query_result(a.query_lockdown_whitelist_uid in
+                                 whitelist.get_uids())
+
+        # users
+        elif a.list_lockdown_whitelist_users:
+            l = whitelist.get_users()
+            __print_and_exit("\n".join(l))
+        elif a.add_lockdown_whitelist_user:
+            whitelist.add_user(a.add_lockdown_whitelist_user)
+        elif a.remove_lockdown_whitelist_user:
+            whitelist.remove_user(a.remove_lockdown_whitelist_user)
+        elif a.query_lockdown_whitelist_user:
+            __print_query_result(a.query_lockdown_whitelist_user in
+                                 whitelist.get_users())
+
+        # apply whitelist changes
+        whitelist.write()
+
+    elif options_direct:
+        settings = fw.config.get_direct()
+
+        if a.add_passthrough:
+            if len (a.add_passthrough) < 2:
+                __fail("usage: --direct --add-passthrough { ipv4 | ipv6 | eb } <args>")
+            __print(settings.add_passthrough(_check_ipv(a.add_passthrough[0]),
+                                             splitArgs(a.add_passthrough[1])))
+
+        elif a.remove_passthrough:
+            if len (a.remove_passthrough) < 2:
+                __fail("usage: --direct --remove-passthrough { ipv4 | ipv6 | eb } <args>")
+            settings.remove_passthrough(_check_ipv(a.remove_passthrough[0]),
+                                        splitArgs(a.remove_passthrough[1]))
+        elif a.query_passthrough:
+            if len (a.query_passthrough) < 2:
+                __fail("usage: --direct --query-passthrough { ipv4 | ipv6 | eb } <args>")
+            __print_query_result(
+                settings.query_passthrough(_check_ipv(a.query_passthrough[0]),
+                                           splitArgs(a.query_passthrough[1])))
+            sys.exit(0)
+        elif a.get_passthroughs:
+            rules = settings.get_passthroughs(_check_ipv(a.get_passthroughs[0]))
+            for rule in rules:
+                __print(joinArgs(rule))
+            sys.exit(0)
+        elif a.get_all_passthroughs:
+            pt = settings.get_all_passthroughs()
+            for ipv in pt:
+                for rule in pt[ipv]:
+                    __print("%s %s" % (ipv, joinArgs(rule)))
+            sys.exit(0)
+
+        elif a.add_chain:
+            settings.add_chain(_check_ipv(a.add_chain[0]),
+                               a.add_chain[1], a.add_chain[2])
+        elif a.remove_chain:
+            settings.remove_chain(_check_ipv(a.remove_chain[0]),
+                                  a.remove_chain[1], a.remove_chain[2])
+        elif a.query_chain:
+            __print_query_result(
+                settings.query_chain(_check_ipv(a.query_chain[0]),
+                                     a.query_chain[1], a.query_chain[2]))
+            sys.exit(0)
+        elif a.get_chains:
+            __print_and_exit(
+                    " ".join(settings.get_chains(_check_ipv(a.get_chains[0]),
+                                                 a.get_chains[1])))
+            sys.exit(0)
+        elif a.get_all_chains:
+            chains = settings.get_all_chains()
+            for (ipv, table) in chains:
+                for chain in chains[(ipv,table)]:
+                    __print("%s %s %s" % (ipv, table, chain))
+            sys.exit(0)
+
+        elif a.add_rule:
+            if len (a.add_rule) < 5:
+                __fail("usage: --direct --add-rule { ipv4 | ipv6 | eb } <table> <chain> <priority> <args>")
+            try:
+                priority = int(a.add_rule[3])
+            except ValueError:
+                __fail("wrong priority\nusage: --direct --add-rule { ipv4 | ipv6 | eb } <table> <chain> <priority> <args>")
+            settings.add_rule(_check_ipv(a.add_rule[0]), a.add_rule[1],
+                              a.add_rule[2], priority, splitArgs(a.add_rule[4]))
+        elif a.remove_rule:
+            if len (a.remove_rule) < 5:
+                __fail("usage: --direct --remove-rule { ipv4 | ipv6 | eb } <table> <chain> <priority> <args>")
+            try:
+                priority = int(a.remove_rule[3])
+            except ValueError:
+                __fail("usage: --direct --remove-rule { ipv4 | ipv6 | eb } <table> <chain> <priority> <args>")
+            settings.remove_rule(_check_ipv(a.remove_rule[0]), a.remove_rule[1],
+                                a.remove_rule[2], priority, splitArgs(a.remove_rule[4]))
+        elif a.remove_rules:
+            if len (a.remove_rules) < 3:
+                __fail("usage: --direct --remove-rules { ipv4 | ipv6 | eb } <table> <chain>")
+            settings.remove_rules(_check_ipv(a.remove_rules[0]),
+                                  a.remove_rules[1], a.remove_rules[2])
+        elif a.query_rule:
+            if len (a.query_rule) < 5:
+                __fail("usage: --direct --query-rule { ipv4 | ipv6 | eb } <table> <chain> <priority> <args>")
+            try:
+                priority = int(a.query_rule[3])
+            except ValueError:
+                __fail("usage: --direct --query-rule { ipv4 | ipv6 | eb } <table> <chain> <priority> <args>")
+            __print_query_result(
+                    settings.query_rule(_check_ipv(a.query_rule[0]),
+                                        a.query_rule[1], a.query_rule[2],
+                                        priority, splitArgs(a.query_rule[4])))
+            sys.exit(0)
+        elif a.get_rules:
+            rules = settings.get_rules(_check_ipv(a.get_rules[0]),
+                                       a.get_rules[1], a.get_rules[2])
+            for (priority, rule) in rules:
+                __print("%d %s" % (priority, joinArgs(rule)))
+            sys.exit(0)
+        elif a.get_all_rules:
+            rules = settings.get_all_rules()
+            for (ipv, table, chain) in rules:
+                for (priority, rule) in rules[(ipv, table, chain)]:
+                    __print("%s %s %s %d %s" % (ipv, table, chain, priority,
+                                                joinArgs(rule)))
+            sys.exit(0)
+
+        settings.write()
+
+    else:
+        if zone == "":
+            zone = fw.get_default_zone()
+        fw_zone = fw.config.get_zone(zone)
+        fw_settings = FirewallClientZoneSettings(
+            list(fw.config.get_zone_config(fw_zone))) # convert to list, for setMasquerade
+
+        # interface
+        if a.list_interfaces:
+            l = fw_settings.getInterfaces()
+            __print_and_exit(" ".join(l))
+        elif a.get_zone_of_interface:
+            ret = []
+            for zone in fw.config.get_zones():
+                obj = fw.config.get_zone(zone)
+                if a.get_zone_of_interface in obj.interfaces:
+                    ret.append(obj.name)
+            if len(ret) > 1:
+                # Even it shouldn't happen, it's actually possible that
+                # the same interface is in several zone XML files
+                __print_and_exit(" ".join(ret) + "  (ERROR: interface '%s' is in %s zone XML files, can be only in one)" % (a.get_zone_of_interface, len(ret)))
+            if len(ret) == 1:
+                __print_and_exit(ret[0])
+            else:
+                __print_and_exit("no zone", 2)
+        elif a.change_interface:
+            ret = []
+            for old_zone in fw.config.get_zones():
+                old_zone_obj = fw.config.get_zone(old_zone)
+                if a.change_interface in old_zone_obj.interfaces:
+                    if old_zone_obj.name != zone:
+                        old_zone_settings = FirewallClientZoneSettings(
+                            fw.config.get_zone_config(old_zone_obj))
+
+                        old_zone_settings.removeInterface(a.change_interface) # remove from old
+                        fw.config.set_zone_config(old_zone_obj, old_zone_settings.settings)
+            fw_settings.addInterface(a.change_interface)              # add to new
+        elif a.add_interface:
+            fw_settings.addInterface(a.add_interface)
+        elif a.remove_interface:
+            fw_settings.removeInterface(a.remove_interface)
+        elif a.query_interface:
+            __print_query_result(fw_settings.queryInterface(a.query_interface))
+
+        # source
+        if a.list_sources:
+            sources = fw_settings.getSources()
+            __print_and_exit(" ".join(sources))
+        elif a.get_zone_of_source:
+            ret = []
+            for zone in fw.config.get_zones():
+                obj = fw.config.get_zone(zone)
+                if a.get_zone_of_source in obj.sources:
+                    ret.append(obj.name)
+            if len(ret) > 1:
+                # Even it shouldn't happen, it's actually possible that
+                # the same source is in several zone XML files
+                __print_and_exit(" ".join(ret) + "  (ERROR: source '%s' is in %s zone XML files, can be only in one)" % (a.get_zone_of_source, len(ret)))
+            if len(ret) == 1:
+                __print_and_exit(ret[0])
+            else:
+                __print_and_exit("no zone", 2)
+        elif a.change_source:
+            ret = []
+            for old_zone in fw.config.get_zones():
+                old_zone_obj = fw.config.get_zone(old_zone)
+                if a.change_source in old_zone_obj.sources:
+                    if old_zone_obj.name != zone:
+                        old_zone_settings = FirewallClientZoneSettings(
+                            fw.config.get_zone_config(old_zone_obj))
+
+                        old_zone_settings.removeSource(a.change_source) # remove from old
+                        fw.config.set_zone_config(old_zone_obj, old_zone_settings.settings)
+            fw_settings.addSource(a.change_source)              # add to new
+        elif a.add_source:
+            fw_settings.addSource(a.add_source)
+        elif a.remove_source:
+            fw_settings.removeSource(a.remove_source)
+        elif a.query_source:
+            __print_query_result(fw_settings.querySource(a.query_source))
+
+        # rich rules
+        if a.list_rich_rules:
+            l = fw_settings.getRichRules()
+            __print_and_exit("\n".join(l))
+        elif a.add_rich_rule:
+            for s in a.add_rich_rule:
+                fw_settings.addRichRule(s)
+        elif a.remove_rich_rule:
+            for s in a.remove_rich_rule:
+                fw_settings.removeRichRule(s)
+        elif a.query_rich_rule:
+            __print_query_result(fw_settings.queryRichRule(a.query_rich_rule))
+
+        # service
+        if a.list_services:
+            l = fw_settings.getServices()
+            __print_and_exit(" ".join(l))
+        elif a.add_service:
+            for s in a.add_service:
+                fw_settings.addService(s)
+        elif a.remove_service_from_zone:
+            for s in a.remove_service_from_zone:
+                fw_settings.removeService(s)
+        elif a.query_service:
+            __print_query_result(fw_settings.queryService(a.query_service))
+
+        # port
+        elif a.list_ports:
+            l = fw_settings.getPorts()
+            __print_and_exit(" ".join(["%s/%s" % (port[0], port[1]) for port in l]))
+        elif a.add_port:
+            for port_proto in a.add_port:
+                (port, proto) = __parse_port(port_proto)
+                fw_settings.addPort(port, proto)
+        elif a.remove_port:
+            for port_proto in a.remove_port:
+                (port, proto) = __parse_port(port_proto)
+                fw_settings.removePort(port, proto)
+        elif a.query_port:
+            (port, proto) = __parse_port(a.query_port)
+            __print_query_result(fw_settings.queryPort(port, proto))
+
+        # protocol
+        elif a.list_protocols:
+            l = fw_settings.getProtocols()
+            __print_and_exit(" ".join(l))
+        elif a.add_protocol:
+            for proto in a.add_protocol:
+                fw_settings.addProtocol(proto)
+        elif a.remove_protocol:
+            for proto in a.remove_protocol:
+                fw_settings.removeProtocol(proto)
+        elif a.query_protocol:
+            __print_query_result(fw_settings.queryProtocol(a.query_protocol))
+
+        # masquerade
+        elif a.add_masquerade:
+            fw_settings.setMasquerade(True)
+        elif a.remove_masquerade:
+            fw_settings.setMasquerade(False)
+        elif a.query_masquerade:
+            __print_query_result(fw_settings.getMasquerade())
+
+        # forward port
+        elif a.list_forward_ports:
+            l = fw_settings.getForwardPorts()
+            __print_and_exit("\n".join(["port=%s:proto=%s:toport=%s:toaddr=%s" % (port, protocol, toport, toaddr) for (port, protocol, toport, toaddr) in l]))
+        elif a.add_forward_port:
+            for fp in a.add_forward_port:
+                (port, protocol, toport, toaddr) = __parse_forward_port(fp)
+                fw_settings.addForwardPort(port, protocol, toport, toaddr)
+        elif a.remove_forward_port:
+            for fp in a.remove_forward_port:
+                (port, protocol, toport, toaddr) = __parse_forward_port(fp)
+                fw_settings.removeForwardPort(port, protocol, toport, toaddr)
+        elif a.query_forward_port:
+            (port, protocol, toport, toaddr) = __parse_forward_port(a.query_forward_port)
+            __print_query_result(fw_settings.queryForwardPort(port, protocol, toport, toaddr))
+
+        # block icmp
+        elif a.list_icmp_blocks:
+            l = fw_settings.getIcmpBlocks()
+            __print_and_exit(" ".join(l))
+        elif a.add_icmp_block:
+            for ib in a.add_icmp_block:
+                fw_settings.addIcmpBlock(ib)
+        elif a.remove_icmp_block:
+            for ib in a.remove_icmp_block:
+                fw_settings.removeIcmpBlock(ib)
+        elif a.query_icmp_block:
+            __print_query_result(fw_settings.queryIcmpBlock(a.query_icmp_block))
+
+        # zone target
+        elif a.get_target:
+            __print_and_exit(fw_settings.getTarget())
+        elif a.set_target:
+            fw_settings.setTarget(a.set_target)
+
+        # list all zone settings
+        elif a.list_all:
+            __print_zone_info(zone if zone else fw.get_default_zone(),
+                              fw_settings)
+            sys.exit(0)
+
+        # list everything
+        elif a.list_all_zones:
+            zones = fw.config.get_zones()
+            for zone in zones:
+                fw_zone = fw.config.get_zone(zone)
+                fw_settings = FirewallClientZoneSettings(list(fw.config.get_zone_config(fw_zone)))
+                __print_zone_info(zone, fw_settings)
+                __print("")
+            sys.exit(0)
+
+        elif a.set_description:
+            fw_settings.setDescription(a.set_description)
+
+        elif a.get_description:
+            __print_and_exit(fw_settings.getDescription())
+
+        elif a.set_short:
+            fw_settings.setShort(a.set_short)
+
+        elif a.get_short:
+            __print_and_exit(fw_settings.getShort())
+
+        fw.config.set_zone_config(fw_zone, fw_settings.settings)
+
+except Exception as msg:
+    __fail("%s" % msg)
+else:
+    __print_and_exit("success")
diff --git a/src/tests/firewall-offline-cmd_test.sh b/src/tests/firewall-offline-cmd_test.sh
deleted file mode 100755
index 303e00f..0000000
--- a/src/tests/firewall-offline-cmd_test.sh
+++ /dev/null
@@ -1,579 +0,0 @@
-#!/bin/bash
-
-#readonly path="/usr/bin/"
-readonly path="../"
-
-readonly RED='\033[00;31m'
-readonly GREEN='\033[00;32m'
-readonly RESTORE='\033[0m'
-
-assert_cmd_good() {
-  local args="${1}"
-
-  ${args} > /dev/null
-  if [[ "$?" -eq 0 ]]; then
-    echo "${args} ... OK"
-  else
-    ((failures++))
-    echo -e "${args} ... ${RED}${failures}. FAILED (non-zero exit status)${RESTORE}"
-  fi
-}
-
-assert_good() {
-  local args="${1}"
-
-  ${path}firewall-offline-cmd ${args} > /dev/null
-  if [[ "$?" -eq 0 ]]; then
-    echo "${args} ... OK"
-  else
-    ((failures++))
-    echo -e "${args} ... ${RED}${failures}. FAILED (non-zero exit status)${RESTORE}"
-  fi
-}
-
-assert_good_notempty() {
-  local args="${1}"
-  local ret
-
-  ret=$(${path}firewall-offline-cmd ${args}) > /dev/null
-  if [[ ( "$?" -eq 0 ) && ( -n "${ret}" ) ]]; then
-    echo "${args} ... OK"
-  else
-    ((failures++))
-    echo -e "${args} ... ${RED}${failures}. FAILED (non-zero exit status or empty return value)${RESTORE}"
-  fi
-}
-
-assert_good_empty() {
-  local args="${1}"
-  local ret
-
-  ret=$(${path}firewall-offline-cmd ${args}) > /dev/null
-  if [[ ( "$?" -eq 0 ) && ( -z "${ret}" ) ]]; then
-    echo "${args} ... OK"
-  else
-    ((failures++))
-    echo -e "${args} ... ${RED}${failures}. FAILED (non-zero exit status or non-empty return value)${RESTORE}"
-  fi
-}
-
-assert_good_equals() {
-  local args="${1}"
-  local value="${2}"
-  local ret
-
-  ret=$(${path}firewall-offline-cmd ${args}) > /dev/null
-  if [[ ( "$?" -eq 0 ) && ( "${ret}" = "${value}" ) ]]; then
-    echo "${args} ... OK"
-  else
-    ((failures++))
-    echo -e "${args} ... ${RED}${failures}. FAILED (non-zero exit status or '${ret}' != '${value}')${RESTORE}"
-  fi
-}
-
-assert_good_contains() {
-  local args="${1}"
-  local value="${2}"
-  local ret
-
-  ret=$(${path}firewall-offline-cmd ${args}) > /dev/null
-  if [[ ( "$?" -eq 0 ) && ( "${ret}" = *${value}* ) ]]; then
-    echo "${args} ... OK"
-  else
-    ((failures++))
-    echo -e "${args} ... ${RED}${failures}. FAILED (non-zero exit status or '${ret}' does not contain '${value}')${RESTORE}"
-  fi
-}
-
-assert_bad() {
-  local args="${1}"
-
-  ${path}firewall-offline-cmd ${args} 1> /dev/null 2>&1
-  if [[ "$?" -ne 0 ]]; then
-    echo "${args} ... OK"
-  else
-    ((failures++))
-    echo -e "${args} ... ${RED}${failures}. FAILED (zero exit status)${RESTORE}"
-  fi
-}
-
-assert_bad_contains() {
-  local args="${1}"
-  local value="${2}"
-  local ret
-
-  ret=$(${path}firewall-offline-cmd ${args}) > /dev/null
-  if [[ ( "$?" -ne 0 ) || ( "${ret}" = *${value}* ) ]]; then
-    ((failures++))
-    echo -e "${args} ... ${RED}${failures}. FAILED (non-zero exit status or '${ret}' does contain '${value}')${RESTORE}"
-  else
-    echo "${args} ... OK"
-  fi
-}
-
-# rich rules need separate assert methods because of quotation hell
-assert_rich_good() {
-  local operation="${1}"
-  local args="${2}"
-  local command
-
-  if [[ "${operation}" = *add* ]]; then
-    command="--add-rich-rule"
-  elif [[ "${operation}" = *remove* ]]; then
-    command="--remove-rich-rule"
-  elif [[ "${operation}" = *query* ]]; then
-    command="--query-rich-rule"
-  fi
-
-  ${path}firewall-offline-cmd ${command} "${args}" > /dev/null
-  if [[ "$?" -eq 0 ]]; then
-    echo ${command} "${args} ... OK"
-  else
-    ((failures++))
-    echo -e ${command} "${args} ... ${RED}${failures}. FAILED (non-zero exit status)${RESTORE}"
-  fi
-}
-
-assert_rich_bad() {
-  local operation="${1}"
-  local args="${2}"
-  local command
-
-  if [[ "${operation}" = *add* ]]; then
-    command="--add-rich-rule"
-  elif [[ "${operation}" = *remove* ]]; then
-    command="--remove-rich-rule"
-  elif [[ "${operation}" = *query* ]]; then
-    command="--query-rich-rule"
-  fi
-
-  ${path}firewall-offline-cmd ${command} "${args}" > /dev/null
-  if [[ "$?" -ne 0 ]]; then
-    echo ${command} "${args} ... OK"
-  else
-    ((failures++))
-    echo -e ${command} "${args} ... ${RED}${failures}. FAILED (zero exit status)${RESTORE}"
-  fi
-}
-
-test_lokkit_opts() {
-rm -f /etc/firewalld/zones/*
-assert_good "${lokkit_opts}"
-
-assert_cmd_good "systemctl is-enabled firewalld.service"
-assert_good     "--zone=trusted --query-interface=${trusted_iface1}"
-assert_good     "--zone=trusted --query-interface=${trusted_iface2}"
-assert_good     "--query-service ${service1}"
-assert_good     "--query-service ${service2}"
-assert_bad      "--query-service ${service3}"
-assert_good     "--query-icmp-block ${icmp1}"
-assert_good     "--query-icmp-block ${icmp2}"
-assert_good     "--query-forward-port ${fw_port1}"
-assert_good     "--query-forward-port ${fw_port2}"
-}
-
-# MAIN
-failures=0
-
-while true; do
-    read -p "This test overwrites your /etc/firewalld/zones/* and /etc/sysconfig/system-config-firewall. Do you want to continue ?" yn
-    case $yn in
-        [Yy]* ) break;;
-        [Nn]* ) exit;;
-        * ) echo "Please answer yes or no.";;
-    esac
-done
-
-assert_good "-h"
-assert_good "--help"
-assert_good "-V"
-
-trusted_iface1="eth+"
-trusted_iface2="em0"
-service1="dns"
-service2="ftp"
-service3="dhcpv6-client"
-icmp1="router-advertisement"
-icmp2="router-solicitation"
-fw_port1="port=13:proto=tcp:toport=15:toaddr=1.2.3.4"
-fw_port2="port=333:proto=udp:toport=444"
-
-lokkit_opts="--enabled --addmodule=abc --addmodule=efg --removemodule=xyz
- --trust=${trusted_iface1} --trust=${trusted_iface2}
- --masq=tun+ --masq=tap+ --port=7:tcp --port=666:udp
- --custom-rules=ipv4:mangle:/etc/sysconfig/ebtables-config
- --service=${service1} --service=${service2} --remove-service=${service3}
- --block-icmp=${icmp1} --block-icmp=${icmp2}
- --forward-port=if=ippp+:${fw_port1}
- --forward-port=if=ippp+:${fw_port2}"
-test_lokkit_opts
-
-cat << EOF > /etc/sysconfig/system-config-firewall
---enabled
---addmodule=abc
---addmodule=efg
---removemodule=xyz
---trust=${trusted_iface1}
---trust=${trusted_iface2}
---masq=tun+
---masq=tap+
---port=7:tcp
---port=666:udp
---custom-rules=ipv4:mangle:/etc/sysconfig/ebtables-config
---service=${service1}
---service=${service2}
---remove-service=${service3}
---block-icmp=${icmp1}
---block-icmp=${icmp2}
---forward-port=if=ippp+:${fw_port1}
---forward-port=if=ippp+:${fw_port2}
-EOF
-
-# running firewall-offline-cmd without options should import /etc/sysconfig/system-config-firewall
-lokkit_opts=""
-test_lokkit_opts
-
-# disable dns again for later tests
-assert_good --remove-service=${service1}
-
-default_zone=$(${path}firewall-offline-cmd --get-default-zone)
-zone="home"
-assert_good_notempty "--get-default-zone"
-assert_good          "--set-default-zone=${zone}"
-assert_good_equals   "--get-default-zone" "${zone}"
-assert_good          "--set-default-zone=${default_zone}"
-assert_bad           "--set-default-zone" # missing argument
-
-assert_good_notempty "--get-zones"
-assert_good_notempty "--get-services"
-assert_good_notempty "--get-icmptypes"
-
-assert_good             "--list-all-zones"
-assert_good             "--list-all"
-
-iface="dummy0"
-zone="work"
-assert_good          "--zone=${zone} --add-interface=${iface}"
-assert_good_equals   "--get-zone-of-interface=${iface}" "${zone}"
-assert_good          "--zone ${zone} --query-interface=${iface}"
-zone="public"
-assert_good          "--zone=${zone} --change-interface=${iface}"
-assert_good_equals   "--get-zone-of-interface=${iface}" "${zone}"
-zone="dmz"
-assert_good          "--zone=${zone} --change-zone=${iface}"
-assert_good_equals   "--get-zone-of-interface=${iface}" "${zone}"
-assert_good_contains "--zone=${zone} --list-interfaces" "${iface}"
-assert_good          "--zone=${zone} --remove-interface=${iface}"
-assert_bad           "--zone=${zone} --query-interface ${iface}"
-assert_good          "--zone=${zone} --change-interface=${iface}" # should work as add
-assert_good          "--zone=${zone} --query-interface ${iface}"
-assert_good          "--zone=${zone} --remove-interface=${iface}"
-assert_bad           "--zone=${zone} --query-interface ${iface}"
-assert_bad           "--get-zone-of-interface=${iface}" # in no zone
-assert_bad           "--get-zone-of-interface" # missing argument
-assert_bad           "--zone=${zone} --get-zones" # impossible combination
-assert_bad           "--zone=${zone} --get-services" # impossible combination
-assert_bad           "--zone=${zone} --get-default-zone" # impossible combination
-assert_bad           "--zone=${zone} --set-default-zone" # impossible combination
-assert_bad           "--zone=${zone} --get-zone-of-interface" # impossible combination
-
-sources=( "dead:beef::babe" "3ffe:501:ffff::/64" "1.2.3.4" "192.168.1.0/24" )
-for (( i=0;i<${#sources[@]};i++)); do
-  zone="public"
-  source=${sources[${i}]}
-  assert_good          "--zone=${zone} --add-source=${source}"
-  assert_good_equals   "--get-zone-of-source=${source}" "${zone}"
-  assert_good_contains "--zone=${zone} --list-sources" "${source}"
-  assert_good_contains "--zone=${zone} --list-all" "${source}"
-  assert_good          "--zone ${zone} --query-source=${source}"
-  zone="work"
-  assert_good          "--zone=${zone} --change-source=${source}"
-  assert_good_equals   "--get-zone-of-source=${source}" "${zone}"
-  assert_good          "--zone=${zone} --remove-source=${source}"
-  assert_bad           "--zone ${zone} --query-source=${source}"
-  assert_bad           "--get-zone-of-source=${source}" # in no zone
-  assert_bad           "--get-zone-of-source" # missing argument
-done 
-
-assert_good "   --add-service=dns --zone=${default_zone}"
-assert_good " --query-service dns"
-assert_good "--remove-service=dns"
-assert_bad  " --query-service=dns"
-assert_bad  "   --add-service=smtpssssssss" # bad service name
-assert_bad  "   --add-service=dns --add-interface=dummy0" # impossible combination
-
-assert_good "   --add-service=http --add-service=nfs"
-assert_good " --query-service http"
-assert_good " --query-service=nfs --zone=${default_zone}"
-assert_good "--remove-service=nfs --remove-service=http"
-assert_bad  " --query-service http"
-assert_bad  " --query-service nfs"
-
-assert_bad  "   --add-port=666" # no protocol
-assert_bad  "   --add-port=666/dummy" # bad protocol
-assert_good "   --add-port=666/tcp --zone=${default_zone}"
-assert_good "--remove-port=666/tcp"
-assert_good "   --add-port=111-222/udp"
-assert_good " --query-port=111-222/udp --zone=${default_zone}"
-assert_good "--remove-port 111-222/udp"
-assert_bad  " --query-port=111-222/udp"
-
-assert_good "   --add-port=80/tcp --add-port 443-444/udp"
-assert_good " --query-port=80/tcp --zone=${default_zone}"
-assert_good " --query-port=443-444/udp"
-assert_good "--remove-port 80/tcp --remove-port=443-444/udp"
-assert_bad  " --query-port=80/tcp"
-assert_bad  " --query-port=443-444/udp"
-
-assert_bad  "    --add-protocol=dummy" # bad protocol
-assert_good "    --add-protocol=mux"
-assert_good " --remove-protocol=mux     --zone=${default_zone}"
-assert_good "    --add-protocol=dccp --zone=${default_zone}"
-assert_good " --query-protocol=dccp"
-assert_good "--remove-protocol dccp"
-assert_bad  " --query-protocol=dccp"
-
-assert_good "   --add-protocol=ddp --add-protocol gre"
-assert_good " --query-protocol=ddp --zone=${default_zone}"
-assert_good " --query-protocol=gre"
-assert_good "--remove-protocol ddp --remove-protocol=gre"
-assert_bad  " --query-protocol=ddp"
-assert_bad  " --query-protocol=gre"
-
-assert_good "   --add-masquerade --zone=${default_zone}"
-assert_good " --query-masquerade "
-assert_good "--remove-masquerade"
-assert_bad  " --query-masquerade"
-
-assert_bad  "--zone=external    --add-icmp-block=dummyblock" # invalid icmp type
-assert_good "--zone=external    --add-icmp-block=redirect"
-assert_good "--zone=external  --query-icmp-block=redirect"
-assert_good "--zone=external --remove-icmp-block redirect"
-assert_bad  "--zone=external  --query-icmp-block=redirect"
-
-assert_good "--zone=external    --add-icmp-block=echo-reply --add-icmp-block=router-solicitation"
-assert_good "--zone=external  --query-icmp-block=echo-reply"
-assert_good "--zone=external  --query-icmp-block=router-solicitation"
-assert_good "--zone=external --remove-icmp-block echo-reply --remove-icmp-block=router-solicitation"
-assert_bad  "--zone=external  --query-icmp-block=echo-reply"
-assert_bad  "--zone=external  --query-icmp-block=router-solicitation"
-
-assert_bad  "   --add-forward-port=666" # no protocol
-assert_good "   --add-forward-port=port=11:proto=tcp:toport=22"
-assert_good "--remove-forward-port=port=11:proto=tcp:toport=22 --zone=${default_zone}"
-assert_bad  "   --add-forward-port=port=33:proto=tcp:toaddr=4444" # bad address
-assert_good "   --add-forward-port=port=33:proto=tcp:toaddr=4.4.4.4 --zone=${default_zone}"
-assert_good "--remove-forward-port=port=33:proto=tcp:toaddr=4.4.4.4"
-assert_good "   --add-forward-port=port=55:proto=tcp:toport=66:toaddr=7.7.7.7"
-assert_good " --query-forward-port port=55:proto=tcp:toport=66:toaddr=7.7.7.7 --zone=${default_zone}"
-assert_good "--remove-forward-port=port=55:proto=tcp:toport=66:toaddr=7.7.7.7"
-assert_bad  " --query-forward-port=port=55:proto=tcp:toport=66:toaddr=7.7.7.7"
-
-assert_good "   --add-forward-port=port=88:proto=udp:toport=99 --add-forward-port port=100:proto=tcp:toport=200"
-assert_good " --query-forward-port=port=100:proto=tcp:toport=200"
-assert_good " --query-forward-port=port=88:proto=udp:toport=99 --zone=${default_zone}"
-assert_good "--remove-forward-port port=100:proto=tcp:toport=200 --remove-forward-port=port=88:proto=udp:toport=99"
-assert_bad  " --query-forward-port port=100:proto=tcp:toport=200"
-assert_bad  " --query-forward-port=port=88:proto=udp:toport=99"
-
-assert_good_contains "--zone=home --list-services" "ssh"
-assert_good          "--zone home --list-ports"
-assert_good          "--list-icmp-blocks"
-assert_good          "--zone=home --list-forward-ports"
-
-myzone="myzone"
-myservice="myservice"
-myicmp="myicmp"
-
-# create new zone
-assert_good "--new-zone=${myzone}"
-assert_good_contains "--get-zones" "${myzone}"
-# get/set default target
-assert_good_contains "--zone=${myzone} --get-target" "default"
-assert_bad "--zone=${myzone} --set-target=BAD"
-assert_good "--zone=${myzone} --set-target=%%REJECT%%"
-assert_good "--zone=${myzone} --set-target=DROP"
-assert_good "--zone=${myzone} --set-target=ACCEPT"
-assert_good_contains "--zone=${myzone} --get-target" "ACCEPT"
-# create new service and icmptype
-assert_good "--new-service=${myservice}"
-assert_good_contains "--get-services" "${myservice}"
-assert_good "--new-icmptype=${myicmp}"
-assert_good_contains "--get-icmptypes" "${myicmp}"
-# add them to zone
-assert_good "--zone=${myzone} --add-service=${myservice}"
-assert_good "--zone=${myzone} --add-icmp-block=${myicmp}"
-assert_good_contains "--zone=${myzone} --list-services" "${myservice}"
-assert_good_contains "--zone=${myzone} --list-icmp-blocks" "${myicmp}"
-# delete the service and icmptype
-assert_good "--delete-service=${myservice}"
-assert_good "--delete-icmptype=${myicmp}"
-# make sure they were removed also from the zone
-assert_good_empty "--zone=${myzone} --list-services" "${myservice}"
-assert_good_empty "--zone=${myzone} --list-icmp-blocks" "${myicmp}"
-# delete the zone
-assert_good "--delete-zone=${myzone}"
-
-# ipset tests
-ipset="myipset"
-source="ipset:${ipset}"
-zone="public"
-assert_good "--new-ipset=${ipset} --type=hash:ip"
-assert_good_empty "--ipset=${ipset} --get-entries"
-assert_good "--ipset=${ipset} --add-entry=1.2.3.4"
-assert_good_notempty "--ipset=${ipset} --get-entries"
-assert_bad "--ipset=${ipset} --add-entry=1.2.3.400"
-assert_good "--ipset=${ipset} --remove-entry=1.2.3.4"
-assert_good_empty "--ipset=${ipset} --get-entries"
-
-assert_good "--zone=${zone} --add-source=${source}"
-assert_good_contains "--get-zone-of-source=${source}" "${zone}"
-assert_good_contains "--zone=public --list-sources" "${source}"
-assert_good "--zone=${zone} --query-source=${source}"
-assert_good "--zone=${zone} --remove-source=${source}"
-
-assert_good "--delete-ipset=${ipset}"
-
-# ... --direct ...
-assert_bad           "--direct --add-passthrough ipv7 --table filter -A INPUT --in-interface dummy0 --protocol tcp --destination-port 67 --jump ACCEPT" # bad ipv
-assert_good          "--direct --add-passthrough ipv4 --table filter --append INPUT --in-interface dummy0 --protocol tcp --destination-port 67 --jump ACCEPT"
-assert_bad           "--direct --query-passthrough ipv7 --table filter -A INPUT --in-interface dummy0 --protocol tcp --destination-port 67 --jump ACCEPT" # bad ipv
-assert_good          "--direct --query-passthrough ipv4 --table filter --append INPUT --in-interface dummy0 --protocol tcp --destination-port 67 --jump ACCEPT"
-assert_bad           "--direct --remove-passthrough ipv7 --table filter -A INPUT --in-interface dummy0 --protocol tcp --destination-port 67 --jump ACCEPT" # bad ipv
-assert_good          "--direct --remove-passthrough ipv4 --table filter --append INPUT --in-interface dummy0 --protocol tcp --destination-port 67 --jump ACCEPT"
-assert_bad           "--direct --query-passthrough ipv4 --table filter --append INPUT --in-interface dummy0 --protocol tcp --destination-port 67 --jump ACCEPT"
-
-assert_good          "--direct --add-passthrough ipv6 --table filter --append FORWARD --destination fd00:dead:beef:ff0::/64 --in-interface dummy0 --out-interface dummy0 --jump ACCEPT"
-assert_good_contains "--direct --get-passthroughs ipv6" "fd00:dead:beef:ff0::/64"
-assert_good_contains "--direct --get-all-passthroughs" "fd00:dead:beef:ff0::/64"
-assert_good          "--direct --remove-passthrough ipv6 --table filter --append FORWARD --destination fd00:dead:beef:ff0::/64 --in-interface dummy0 --out-interface dummy0 --jump ACCEPT"
-
-assert_good          "--direct --add-chain ipv4 filter mychain"
-assert_good_contains "--direct --get-chains ipv4 filter" "mychain"
-assert_good_contains "--direct --get-all-chains" "ipv4 filter mychain"
-assert_good          "--direct --query-chain ipv4 filter mychain"
-assert_bad           "--direct --add-chain ipv5 filter mychain" # bad ipv
-assert_bad           "--direct --add-chain ipv4 badtable mychain" # bad table name
-
-assert_good          "--direct --add-rule ipv4 filter mychain 3 -j ACCEPT"
-assert_good_contains "--direct --get-rules ipv4 filter mychain" "3 -j ACCEPT"
-assert_good_contains "--direct --get-all-rules" "ipv4 filter mychain 3 -j ACCEPT"
-assert_good          "--direct --query-rule ipv4 filter mychain 3 -j ACCEPT"
-assert_good          "--direct --remove-rule ipv4 filter mychain 3 -j ACCEPT"
-assert_bad           "--direct --query-rule ipv4 filter mychain 3 -j ACCEPT"
-
-assert_good          "--direct --add-rule ipv4 filter mychain 3 -s 192.168.1.1 -j ACCEPT"
-assert_good          "--direct --add-rule ipv4 filter mychain 4 -s 192.168.1.2 -j ACCEPT"
-assert_good          "--direct --add-rule ipv4 filter mychain 5 -s 192.168.1.3 -j ACCEPT"
-assert_good          "--direct --add-rule ipv4 filter mychain 6 -s 192.168.1.4 -j ACCEPT"
-assert_good_contains "--direct --get-rules ipv4 filter mychain" "3 -s 192.168.1.1 -j ACCEPT"
-assert_good_contains "--direct --get-rules ipv4 filter mychain" "4 -s 192.168.1.2 -j ACCEPT"
-assert_good_contains "--direct --get-rules ipv4 filter mychain" "5 -s 192.168.1.3 -j ACCEPT"
-assert_good_contains "--direct --get-rules ipv4 filter mychain" "6 -s 192.168.1.4 -j ACCEPT"
-assert_good          "--direct --remove-rules ipv4 filter mychain"
-assert_bad           "--direct --query-rule ipv4 filter mychain 3 -s 192.168.1.1 -j ACCEPT"
-assert_bad           "--direct --query-rule ipv4 filter mychain 4 -s 192.168.1.2 -j ACCEPT"
-assert_bad           "--direct --query-rule ipv4 filter mychain 5 -s 192.168.1.3 -j ACCEPT"
-assert_bad           "--direct --query-rule ipv4 filter mychain 6 -s 192.168.1.4 -j ACCEPT"
-
-assert_good          "--direct --remove-chain ipv4 filter mychain"
-assert_bad           "--direct --query-chain ipv4 filter mychain"
-
-assert_bad           "--direct --reload" # impossible combination
-assert_bad           "--direct --list-all" # impossible combination
-assert_bad           "--direct --get-services" # impossible combination
-assert_bad           "--direct --get-default-zone" # impossible combination
-assert_bad           "--direct --zone=home --list-services" # impossible combination
-
-# lockdown
-
-cmd="/usr/bin/command"
-ctxt="system_u:system_r:MadDaemon_t:s0"
-uid="6666"
-user="theboss"
-
-assert_good          "--add-lockdown-whitelist-command ${cmd}"
-assert_good          "--query-lockdown-whitelist-command ${cmd}"
-assert_good_contains "--list-lockdown-whitelist-commands" "${cmd}"
-assert_good          "--remove-lockdown-whitelist-command ${cmd}"
-assert_bad           "--query-lockdown-whitelist-command ${cmd}"  # already removed
-
-assert_good          "--add-lockdown-whitelist-context ${ctxt}"
-assert_good          "--query-lockdown-whitelist-context ${ctxt}"
-assert_good_contains "--list-lockdown-whitelist-contexts" "${ctxt}"
-assert_good          "--remove-lockdown-whitelist-context ${ctxt}"
-assert_bad           "--query-lockdown-whitelist-context ${ctxt}"  # already removed
-
-assert_good          "--add-lockdown-whitelist-uid ${uid}"
-assert_good          "--query-lockdown-whitelist-uid ${uid}"
-assert_good_contains "--list-lockdown-whitelist-uids" "${uid}"
-assert_good          "--remove-lockdown-whitelist-uid ${uid}"
-assert_bad           "--query-lockdown-whitelist-uid ${uid}"   # already removed
-assert_bad           "--add-lockdown-whitelist-uid ${uid}x"    # bad uid
-
-assert_good          "--add-lockdown-whitelist-user ${user}"
-assert_good          "--query-lockdown-whitelist-user ${user}"
-assert_good_contains "--list-lockdown-whitelist-users" "${user}"
-assert_good          "--remove-lockdown-whitelist-user ${user}"
-assert_bad           "--query-lockdown-whitelist-user ${user}"  # already removed
-
-
-# rich rules
-
-bad_rules=(
- ''                                                         # empty
- 'family="ipv6" accept'                                     # no 'rule'
- 'name="dns" accept'                                        # no 'rule'
- 'protocol value="ah" reject'                               # no 'rule'
- 'rule protocol value="ah" reject type="icmp-host-prohibited"' # reject type needs specific family
- 'rule family="ipv4" protocol value="ah" reject type="dummy"'  # dummy reject type
- 'rule'                                                     # no element
- 'rule bad_element'                                         # no unknown element
- 'rule family="ipv5"'                                       # bad family
- 'rule name="dns" accept'                                   # name outside of element
- 'rule protocol="ah" accept'                                # bad protocol usage
- 'rule protocol value="ah" accept drop'                     # accept && drop
- 'rule service name="radius" port port="4011" reject'       # service && port
- 'rule service bad_attribute="dns"'                         # bad attribute
- 'rule protocol value="mtp" log level="eror"'               # bad log level
- 'rule source address="1:2:3:4:6::" icmp-block name="redirect" log level="info" limit value="1/2m"'         # bad limit
- 'rule protocol value="esp"'                                # no action/log/audit
-)
-
-for (( i=0;i<${#bad_rules[@]};i++)); do
-  rule=${bad_rules[${i}]}
-  assert_rich_bad           "add"    "${rule}"
-done
-
-good_rules=(
- 'rule service name="ftp" audit limit value="1/m" accept'
- 'rule protocol value="ah" reject'
- 'rule protocol value="esp" accept'
- 'rule protocol value="sctp" log'
- 'rule family="ipv4" source address="192.168.0.0/24" service name="tftp" log prefix="tftp" level="info" limit value="1/m" accept'
- 'rule family="ipv4" source NOT address="192.168.0.0/24" service name="dns" log prefix="dns" level="info" limit value="2/m" drop'
- 'rule family="ipv6" source address="1:2:3:4:6::" service name="radius" log prefix="dns" level="info" limit value="3/m" reject type="icmp6-addr-unreachable" limit value="20/m"'
- 'rule family="ipv6" source address="1:2:3:4:6::" port port="4011" protocol="tcp" log prefix="port 4011/tcp" level="info" limit value="4/m" drop'
- 'rule family="ipv6" source address="1:2:3:4:6::" forward-port port="4011" protocol="tcp" to-port="4012" to-addr="1::2:3:4:7"'
- 'rule family="ipv4" source address="192.168.0.0/24" icmp-block name="source-quench" log prefix="source-quench" level="info" limit value="4/m"'
- 'rule family="ipv6" source address="1:2:3:4:6::" icmp-block name="redirect" log prefix="redirect" level="info" limit value="4/m"'
- 'rule family="ipv4" source address="192.168.1.0/24" masquerade'
- 'rule family="ipv6" masquerade'
- 'rule forward-port port="2222" to-port="22" to-addr="192.168.100.2" protocol="tcp" family="ipv4" source address="192.168.2.100"')
-
-for (( i=0;i<${#good_rules[@]};i++)); do
-  rule=${good_rules[${i}]}
-  assert_rich_good          "add"    "${rule}"
-  assert_rich_good          "query"  "${rule}"
-  assert_rich_good          "remove" "${rule}"
-  assert_rich_bad           "query"  "${rule}"
-done
-
-echo "----------------------------------------------------------------------"
-if [[ "${failures}" -eq 0 ]]; then
-    echo "Everything's OK, you rock :-)"
-    exit 0
-else
-    echo "FAILED (failures=${failures})"
-    exit 2
-fi
diff --git a/src/tests/firewall-offline-cmd_test.sh.in b/src/tests/firewall-offline-cmd_test.sh.in
new file mode 100755
index 0000000..750e66b
--- /dev/null
+++ b/src/tests/firewall-offline-cmd_test.sh.in
@@ -0,0 +1,579 @@
+#!/bin/bash
+
+#readonly path="/usr/bin/"
+readonly path="../"
+
+readonly RED='\033[00;31m'
+readonly GREEN='\033[00;32m'
+readonly RESTORE='\033[0m'
+
+assert_cmd_good() {
+  local args="${1}"
+
+  ${args} > /dev/null
+  if [[ "$?" -eq 0 ]]; then
+    echo "${args} ... OK"
+  else
+    ((failures++))
+    echo -e "${args} ... ${RED}${failures}. FAILED (non-zero exit status)${RESTORE}"
+  fi
+}
+
+assert_good() {
+  local args="${1}"
+
+  ${path}firewall-offline-cmd ${args} > /dev/null
+  if [[ "$?" -eq 0 ]]; then
+    echo "${args} ... OK"
+  else
+    ((failures++))
+    echo -e "${args} ... ${RED}${failures}. FAILED (non-zero exit status)${RESTORE}"
+  fi
+}
+
+assert_good_notempty() {
+  local args="${1}"
+  local ret
+
+  ret=$(${path}firewall-offline-cmd ${args}) > /dev/null
+  if [[ ( "$?" -eq 0 ) && ( -n "${ret}" ) ]]; then
+    echo "${args} ... OK"
+  else
+    ((failures++))
+    echo -e "${args} ... ${RED}${failures}. FAILED (non-zero exit status or empty return value)${RESTORE}"
+  fi
+}
+
+assert_good_empty() {
+  local args="${1}"
+  local ret
+
+  ret=$(${path}firewall-offline-cmd ${args}) > /dev/null
+  if [[ ( "$?" -eq 0 ) && ( -z "${ret}" ) ]]; then
+    echo "${args} ... OK"
+  else
+    ((failures++))
+    echo -e "${args} ... ${RED}${failures}. FAILED (non-zero exit status or non-empty return value)${RESTORE}"
+  fi
+}
+
+assert_good_equals() {
+  local args="${1}"
+  local value="${2}"
+  local ret
+
+  ret=$(${path}firewall-offline-cmd ${args}) > /dev/null
+  if [[ ( "$?" -eq 0 ) && ( "${ret}" = "${value}" ) ]]; then
+    echo "${args} ... OK"
+  else
+    ((failures++))
+    echo -e "${args} ... ${RED}${failures}. FAILED (non-zero exit status or '${ret}' != '${value}')${RESTORE}"
+  fi
+}
+
+assert_good_contains() {
+  local args="${1}"
+  local value="${2}"
+  local ret
+
+  ret=$(${path}firewall-offline-cmd ${args}) > /dev/null
+  if [[ ( "$?" -eq 0 ) && ( "${ret}" = *${value}* ) ]]; then
+    echo "${args} ... OK"
+  else
+    ((failures++))
+    echo -e "${args} ... ${RED}${failures}. FAILED (non-zero exit status or '${ret}' does not contain '${value}')${RESTORE}"
+  fi
+}
+
+assert_bad() {
+  local args="${1}"
+
+  ${path}firewall-offline-cmd ${args} 1> /dev/null 2>&1
+  if [[ "$?" -ne 0 ]]; then
+    echo "${args} ... OK"
+  else
+    ((failures++))
+    echo -e "${args} ... ${RED}${failures}. FAILED (zero exit status)${RESTORE}"
+  fi
+}
+
+assert_bad_contains() {
+  local args="${1}"
+  local value="${2}"
+  local ret
+
+  ret=$(${path}firewall-offline-cmd ${args}) > /dev/null
+  if [[ ( "$?" -ne 0 ) || ( "${ret}" = *${value}* ) ]]; then
+    ((failures++))
+    echo -e "${args} ... ${RED}${failures}. FAILED (non-zero exit status or '${ret}' does contain '${value}')${RESTORE}"
+  else
+    echo "${args} ... OK"
+  fi
+}
+
+# rich rules need separate assert methods because of quotation hell
+assert_rich_good() {
+  local operation="${1}"
+  local args="${2}"
+  local command
+
+  if [[ "${operation}" = *add* ]]; then
+    command="--add-rich-rule"
+  elif [[ "${operation}" = *remove* ]]; then
+    command="--remove-rich-rule"
+  elif [[ "${operation}" = *query* ]]; then
+    command="--query-rich-rule"
+  fi
+
+  ${path}firewall-offline-cmd ${command} "${args}" > /dev/null
+  if [[ "$?" -eq 0 ]]; then
+    echo ${command} "${args} ... OK"
+  else
+    ((failures++))
+    echo -e ${command} "${args} ... ${RED}${failures}. FAILED (non-zero exit status)${RESTORE}"
+  fi
+}
+
+assert_rich_bad() {
+  local operation="${1}"
+  local args="${2}"
+  local command
+
+  if [[ "${operation}" = *add* ]]; then
+    command="--add-rich-rule"
+  elif [[ "${operation}" = *remove* ]]; then
+    command="--remove-rich-rule"
+  elif [[ "${operation}" = *query* ]]; then
+    command="--query-rich-rule"
+  fi
+
+  ${path}firewall-offline-cmd ${command} "${args}" > /dev/null
+  if [[ "$?" -ne 0 ]]; then
+    echo ${command} "${args} ... OK"
+  else
+    ((failures++))
+    echo -e ${command} "${args} ... ${RED}${failures}. FAILED (zero exit status)${RESTORE}"
+  fi
+}
+
+test_lokkit_opts() {
+rm -f /etc/firewalld/zones/*
+assert_good "${lokkit_opts}"
+
+assert_cmd_good "systemctl is-enabled firewalld.service"
+assert_good     "--zone=trusted --query-interface=${trusted_iface1}"
+assert_good     "--zone=trusted --query-interface=${trusted_iface2}"
+assert_good     "--query-service ${service1}"
+assert_good     "--query-service ${service2}"
+assert_bad      "--query-service ${service3}"
+assert_good     "--query-icmp-block ${icmp1}"
+assert_good     "--query-icmp-block ${icmp2}"
+assert_good     "--query-forward-port ${fw_port1}"
+assert_good     "--query-forward-port ${fw_port2}"
+}
+
+# MAIN
+failures=0
+
+while true; do
+    read -p "This test overwrites your /etc/firewalld/zones/* and @SYSCONFIGDIR@/system-config-firewall. Do you want to continue ?" yn
+    case $yn in
+        [Yy]* ) break;;
+        [Nn]* ) exit;;
+        * ) echo "Please answer yes or no.";;
+    esac
+done
+
+assert_good "-h"
+assert_good "--help"
+assert_good "-V"
+
+trusted_iface1="eth+"
+trusted_iface2="em0"
+service1="dns"
+service2="ftp"
+service3="dhcpv6-client"
+icmp1="router-advertisement"
+icmp2="router-solicitation"
+fw_port1="port=13:proto=tcp:toport=15:toaddr=1.2.3.4"
+fw_port2="port=333:proto=udp:toport=444"
+
+lokkit_opts="--enabled --addmodule=abc --addmodule=efg --removemodule=xyz
+ --trust=${trusted_iface1} --trust=${trusted_iface2}
+ --masq=tun+ --masq=tap+ --port=7:tcp --port=666:udp
+ --custom-rules=ipv4:mangle:@SYSCONFIGDIR@/ebtables-config
+ --service=${service1} --service=${service2} --remove-service=${service3}
+ --block-icmp=${icmp1} --block-icmp=${icmp2}
+ --forward-port=if=ippp+:${fw_port1}
+ --forward-port=if=ippp+:${fw_port2}"
+test_lokkit_opts
+
+cat << EOF > @SYSCONFIGDIR@/system-config-firewall
+--enabled
+--addmodule=abc
+--addmodule=efg
+--removemodule=xyz
+--trust=${trusted_iface1}
+--trust=${trusted_iface2}
+--masq=tun+
+--masq=tap+
+--port=7:tcp
+--port=666:udp
+--custom-rules=ipv4:mangle:@SYSCONFIGDIR@/ebtables-config
+--service=${service1}
+--service=${service2}
+--remove-service=${service3}
+--block-icmp=${icmp1}
+--block-icmp=${icmp2}
+--forward-port=if=ippp+:${fw_port1}
+--forward-port=if=ippp+:${fw_port2}
+EOF
+
+# running firewall-offline-cmd without options should import @SYSCONFIGDIR@/system-config-firewall
+lokkit_opts=""
+test_lokkit_opts
+
+# disable dns again for later tests
+assert_good --remove-service=${service1}
+
+default_zone=$(${path}firewall-offline-cmd --get-default-zone)
+zone="home"
+assert_good_notempty "--get-default-zone"
+assert_good          "--set-default-zone=${zone}"
+assert_good_equals   "--get-default-zone" "${zone}"
+assert_good          "--set-default-zone=${default_zone}"
+assert_bad           "--set-default-zone" # missing argument
+
+assert_good_notempty "--get-zones"
+assert_good_notempty "--get-services"
+assert_good_notempty "--get-icmptypes"
+
+assert_good             "--list-all-zones"
+assert_good             "--list-all"
+
+iface="dummy0"
+zone="work"
+assert_good          "--zone=${zone} --add-interface=${iface}"
+assert_good_equals   "--get-zone-of-interface=${iface}" "${zone}"
+assert_good          "--zone ${zone} --query-interface=${iface}"
+zone="public"
+assert_good          "--zone=${zone} --change-interface=${iface}"
+assert_good_equals   "--get-zone-of-interface=${iface}" "${zone}"
+zone="dmz"
+assert_good          "--zone=${zone} --change-zone=${iface}"
+assert_good_equals   "--get-zone-of-interface=${iface}" "${zone}"
+assert_good_contains "--zone=${zone} --list-interfaces" "${iface}"
+assert_good          "--zone=${zone} --remove-interface=${iface}"
+assert_bad           "--zone=${zone} --query-interface ${iface}"
+assert_good          "--zone=${zone} --change-interface=${iface}" # should work as add
+assert_good          "--zone=${zone} --query-interface ${iface}"
+assert_good          "--zone=${zone} --remove-interface=${iface}"
+assert_bad           "--zone=${zone} --query-interface ${iface}"
+assert_bad           "--get-zone-of-interface=${iface}" # in no zone
+assert_bad           "--get-zone-of-interface" # missing argument
+assert_bad           "--zone=${zone} --get-zones" # impossible combination
+assert_bad           "--zone=${zone} --get-services" # impossible combination
+assert_bad           "--zone=${zone} --get-default-zone" # impossible combination
+assert_bad           "--zone=${zone} --set-default-zone" # impossible combination
+assert_bad           "--zone=${zone} --get-zone-of-interface" # impossible combination
+
+sources=( "dead:beef::babe" "3ffe:501:ffff::/64" "1.2.3.4" "192.168.1.0/24" )
+for (( i=0;i<${#sources[@]};i++)); do
+  zone="public"
+  source=${sources[${i}]}
+  assert_good          "--zone=${zone} --add-source=${source}"
+  assert_good_equals   "--get-zone-of-source=${source}" "${zone}"
+  assert_good_contains "--zone=${zone} --list-sources" "${source}"
+  assert_good_contains "--zone=${zone} --list-all" "${source}"
+  assert_good          "--zone ${zone} --query-source=${source}"
+  zone="work"
+  assert_good          "--zone=${zone} --change-source=${source}"
+  assert_good_equals   "--get-zone-of-source=${source}" "${zone}"
+  assert_good          "--zone=${zone} --remove-source=${source}"
+  assert_bad           "--zone ${zone} --query-source=${source}"
+  assert_bad           "--get-zone-of-source=${source}" # in no zone
+  assert_bad           "--get-zone-of-source" # missing argument
+done 
+
+assert_good "   --add-service=dns --zone=${default_zone}"
+assert_good " --query-service dns"
+assert_good "--remove-service=dns"
+assert_bad  " --query-service=dns"
+assert_bad  "   --add-service=smtpssssssss" # bad service name
+assert_bad  "   --add-service=dns --add-interface=dummy0" # impossible combination
+
+assert_good "   --add-service=http --add-service=nfs"
+assert_good " --query-service http"
+assert_good " --query-service=nfs --zone=${default_zone}"
+assert_good "--remove-service=nfs --remove-service=http"
+assert_bad  " --query-service http"
+assert_bad  " --query-service nfs"
+
+assert_bad  "   --add-port=666" # no protocol
+assert_bad  "   --add-port=666/dummy" # bad protocol
+assert_good "   --add-port=666/tcp --zone=${default_zone}"
+assert_good "--remove-port=666/tcp"
+assert_good "   --add-port=111-222/udp"
+assert_good " --query-port=111-222/udp --zone=${default_zone}"
+assert_good "--remove-port 111-222/udp"
+assert_bad  " --query-port=111-222/udp"
+
+assert_good "   --add-port=80/tcp --add-port 443-444/udp"
+assert_good " --query-port=80/tcp --zone=${default_zone}"
+assert_good " --query-port=443-444/udp"
+assert_good "--remove-port 80/tcp --remove-port=443-444/udp"
+assert_bad  " --query-port=80/tcp"
+assert_bad  " --query-port=443-444/udp"
+
+assert_bad  "    --add-protocol=dummy" # bad protocol
+assert_good "    --add-protocol=mux"
+assert_good " --remove-protocol=mux     --zone=${default_zone}"
+assert_good "    --add-protocol=dccp --zone=${default_zone}"
+assert_good " --query-protocol=dccp"
+assert_good "--remove-protocol dccp"
+assert_bad  " --query-protocol=dccp"
+
+assert_good "   --add-protocol=ddp --add-protocol gre"
+assert_good " --query-protocol=ddp --zone=${default_zone}"
+assert_good " --query-protocol=gre"
+assert_good "--remove-protocol ddp --remove-protocol=gre"
+assert_bad  " --query-protocol=ddp"
+assert_bad  " --query-protocol=gre"
+
+assert_good "   --add-masquerade --zone=${default_zone}"
+assert_good " --query-masquerade "
+assert_good "--remove-masquerade"
+assert_bad  " --query-masquerade"
+
+assert_bad  "--zone=external    --add-icmp-block=dummyblock" # invalid icmp type
+assert_good "--zone=external    --add-icmp-block=redirect"
+assert_good "--zone=external  --query-icmp-block=redirect"
+assert_good "--zone=external --remove-icmp-block redirect"
+assert_bad  "--zone=external  --query-icmp-block=redirect"
+
+assert_good "--zone=external    --add-icmp-block=echo-reply --add-icmp-block=router-solicitation"
+assert_good "--zone=external  --query-icmp-block=echo-reply"
+assert_good "--zone=external  --query-icmp-block=router-solicitation"
+assert_good "--zone=external --remove-icmp-block echo-reply --remove-icmp-block=router-solicitation"
+assert_bad  "--zone=external  --query-icmp-block=echo-reply"
+assert_bad  "--zone=external  --query-icmp-block=router-solicitation"
+
+assert_bad  "   --add-forward-port=666" # no protocol
+assert_good "   --add-forward-port=port=11:proto=tcp:toport=22"
+assert_good "--remove-forward-port=port=11:proto=tcp:toport=22 --zone=${default_zone}"
+assert_bad  "   --add-forward-port=port=33:proto=tcp:toaddr=4444" # bad address
+assert_good "   --add-forward-port=port=33:proto=tcp:toaddr=4.4.4.4 --zone=${default_zone}"
+assert_good "--remove-forward-port=port=33:proto=tcp:toaddr=4.4.4.4"
+assert_good "   --add-forward-port=port=55:proto=tcp:toport=66:toaddr=7.7.7.7"
+assert_good " --query-forward-port port=55:proto=tcp:toport=66:toaddr=7.7.7.7 --zone=${default_zone}"
+assert_good "--remove-forward-port=port=55:proto=tcp:toport=66:toaddr=7.7.7.7"
+assert_bad  " --query-forward-port=port=55:proto=tcp:toport=66:toaddr=7.7.7.7"
+
+assert_good "   --add-forward-port=port=88:proto=udp:toport=99 --add-forward-port port=100:proto=tcp:toport=200"
+assert_good " --query-forward-port=port=100:proto=tcp:toport=200"
+assert_good " --query-forward-port=port=88:proto=udp:toport=99 --zone=${default_zone}"
+assert_good "--remove-forward-port port=100:proto=tcp:toport=200 --remove-forward-port=port=88:proto=udp:toport=99"
+assert_bad  " --query-forward-port port=100:proto=tcp:toport=200"
+assert_bad  " --query-forward-port=port=88:proto=udp:toport=99"
+
+assert_good_contains "--zone=home --list-services" "ssh"
+assert_good          "--zone home --list-ports"
+assert_good          "--list-icmp-blocks"
+assert_good          "--zone=home --list-forward-ports"
+
+myzone="myzone"
+myservice="myservice"
+myicmp="myicmp"
+
+# create new zone
+assert_good "--new-zone=${myzone}"
+assert_good_contains "--get-zones" "${myzone}"
+# get/set default target
+assert_good_contains "--zone=${myzone} --get-target" "default"
+assert_bad "--zone=${myzone} --set-target=BAD"
+assert_good "--zone=${myzone} --set-target=%%REJECT%%"
+assert_good "--zone=${myzone} --set-target=DROP"
+assert_good "--zone=${myzone} --set-target=ACCEPT"
+assert_good_contains "--zone=${myzone} --get-target" "ACCEPT"
+# create new service and icmptype
+assert_good "--new-service=${myservice}"
+assert_good_contains "--get-services" "${myservice}"
+assert_good "--new-icmptype=${myicmp}"
+assert_good_contains "--get-icmptypes" "${myicmp}"
+# add them to zone
+assert_good "--zone=${myzone} --add-service=${myservice}"
+assert_good "--zone=${myzone} --add-icmp-block=${myicmp}"
+assert_good_contains "--zone=${myzone} --list-services" "${myservice}"
+assert_good_contains "--zone=${myzone} --list-icmp-blocks" "${myicmp}"
+# delete the service and icmptype
+assert_good "--delete-service=${myservice}"
+assert_good "--delete-icmptype=${myicmp}"
+# make sure they were removed also from the zone
+assert_good_empty "--zone=${myzone} --list-services" "${myservice}"
+assert_good_empty "--zone=${myzone} --list-icmp-blocks" "${myicmp}"
+# delete the zone
+assert_good "--delete-zone=${myzone}"
+
+# ipset tests
+ipset="myipset"
+source="ipset:${ipset}"
+zone="public"
+assert_good "--new-ipset=${ipset} --type=hash:ip"
+assert_good_empty "--ipset=${ipset} --get-entries"
+assert_good "--ipset=${ipset} --add-entry=1.2.3.4"
+assert_good_notempty "--ipset=${ipset} --get-entries"
+assert_bad "--ipset=${ipset} --add-entry=1.2.3.400"
+assert_good "--ipset=${ipset} --remove-entry=1.2.3.4"
+assert_good_empty "--ipset=${ipset} --get-entries"
+
+assert_good "--zone=${zone} --add-source=${source}"
+assert_good_contains "--get-zone-of-source=${source}" "${zone}"
+assert_good_contains "--zone=public --list-sources" "${source}"
+assert_good "--zone=${zone} --query-source=${source}"
+assert_good "--zone=${zone} --remove-source=${source}"
+
+assert_good "--delete-ipset=${ipset}"
+
+# ... --direct ...
+assert_bad           "--direct --add-passthrough ipv7 --table filter -A INPUT --in-interface dummy0 --protocol tcp --destination-port 67 --jump ACCEPT" # bad ipv
+assert_good          "--direct --add-passthrough ipv4 --table filter --append INPUT --in-interface dummy0 --protocol tcp --destination-port 67 --jump ACCEPT"
+assert_bad           "--direct --query-passthrough ipv7 --table filter -A INPUT --in-interface dummy0 --protocol tcp --destination-port 67 --jump ACCEPT" # bad ipv
+assert_good          "--direct --query-passthrough ipv4 --table filter --append INPUT --in-interface dummy0 --protocol tcp --destination-port 67 --jump ACCEPT"
+assert_bad           "--direct --remove-passthrough ipv7 --table filter -A INPUT --in-interface dummy0 --protocol tcp --destination-port 67 --jump ACCEPT" # bad ipv
+assert_good          "--direct --remove-passthrough ipv4 --table filter --append INPUT --in-interface dummy0 --protocol tcp --destination-port 67 --jump ACCEPT"
+assert_bad           "--direct --query-passthrough ipv4 --table filter --append INPUT --in-interface dummy0 --protocol tcp --destination-port 67 --jump ACCEPT"
+
+assert_good          "--direct --add-passthrough ipv6 --table filter --append FORWARD --destination fd00:dead:beef:ff0::/64 --in-interface dummy0 --out-interface dummy0 --jump ACCEPT"
+assert_good_contains "--direct --get-passthroughs ipv6" "fd00:dead:beef:ff0::/64"
+assert_good_contains "--direct --get-all-passthroughs" "fd00:dead:beef:ff0::/64"
+assert_good          "--direct --remove-passthrough ipv6 --table filter --append FORWARD --destination fd00:dead:beef:ff0::/64 --in-interface dummy0 --out-interface dummy0 --jump ACCEPT"
+
+assert_good          "--direct --add-chain ipv4 filter mychain"
+assert_good_contains "--direct --get-chains ipv4 filter" "mychain"
+assert_good_contains "--direct --get-all-chains" "ipv4 filter mychain"
+assert_good          "--direct --query-chain ipv4 filter mychain"
+assert_bad           "--direct --add-chain ipv5 filter mychain" # bad ipv
+assert_bad           "--direct --add-chain ipv4 badtable mychain" # bad table name
+
+assert_good          "--direct --add-rule ipv4 filter mychain 3 -j ACCEPT"
+assert_good_contains "--direct --get-rules ipv4 filter mychain" "3 -j ACCEPT"
+assert_good_contains "--direct --get-all-rules" "ipv4 filter mychain 3 -j ACCEPT"
+assert_good          "--direct --query-rule ipv4 filter mychain 3 -j ACCEPT"
+assert_good          "--direct --remove-rule ipv4 filter mychain 3 -j ACCEPT"
+assert_bad           "--direct --query-rule ipv4 filter mychain 3 -j ACCEPT"
+
+assert_good          "--direct --add-rule ipv4 filter mychain 3 -s 192.168.1.1 -j ACCEPT"
+assert_good          "--direct --add-rule ipv4 filter mychain 4 -s 192.168.1.2 -j ACCEPT"
+assert_good          "--direct --add-rule ipv4 filter mychain 5 -s 192.168.1.3 -j ACCEPT"
+assert_good          "--direct --add-rule ipv4 filter mychain 6 -s 192.168.1.4 -j ACCEPT"
+assert_good_contains "--direct --get-rules ipv4 filter mychain" "3 -s 192.168.1.1 -j ACCEPT"
+assert_good_contains "--direct --get-rules ipv4 filter mychain" "4 -s 192.168.1.2 -j ACCEPT"
+assert_good_contains "--direct --get-rules ipv4 filter mychain" "5 -s 192.168.1.3 -j ACCEPT"
+assert_good_contains "--direct --get-rules ipv4 filter mychain" "6 -s 192.168.1.4 -j ACCEPT"
+assert_good          "--direct --remove-rules ipv4 filter mychain"
+assert_bad           "--direct --query-rule ipv4 filter mychain 3 -s 192.168.1.1 -j ACCEPT"
+assert_bad           "--direct --query-rule ipv4 filter mychain 4 -s 192.168.1.2 -j ACCEPT"
+assert_bad           "--direct --query-rule ipv4 filter mychain 5 -s 192.168.1.3 -j ACCEPT"
+assert_bad           "--direct --query-rule ipv4 filter mychain 6 -s 192.168.1.4 -j ACCEPT"
+
+assert_good          "--direct --remove-chain ipv4 filter mychain"
+assert_bad           "--direct --query-chain ipv4 filter mychain"
+
+assert_bad           "--direct --reload" # impossible combination
+assert_bad           "--direct --list-all" # impossible combination
+assert_bad           "--direct --get-services" # impossible combination
+assert_bad           "--direct --get-default-zone" # impossible combination
+assert_bad           "--direct --zone=home --list-services" # impossible combination
+
+# lockdown
+
+cmd="/usr/bin/command"
+ctxt="system_u:system_r:MadDaemon_t:s0"
+uid="6666"
+user="theboss"
+
+assert_good          "--add-lockdown-whitelist-command ${cmd}"
+assert_good          "--query-lockdown-whitelist-command ${cmd}"
+assert_good_contains "--list-lockdown-whitelist-commands" "${cmd}"
+assert_good          "--remove-lockdown-whitelist-command ${cmd}"
+assert_bad           "--query-lockdown-whitelist-command ${cmd}"  # already removed
+
+assert_good          "--add-lockdown-whitelist-context ${ctxt}"
+assert_good          "--query-lockdown-whitelist-context ${ctxt}"
+assert_good_contains "--list-lockdown-whitelist-contexts" "${ctxt}"
+assert_good          "--remove-lockdown-whitelist-context ${ctxt}"
+assert_bad           "--query-lockdown-whitelist-context ${ctxt}"  # already removed
+
+assert_good          "--add-lockdown-whitelist-uid ${uid}"
+assert_good          "--query-lockdown-whitelist-uid ${uid}"
+assert_good_contains "--list-lockdown-whitelist-uids" "${uid}"
+assert_good          "--remove-lockdown-whitelist-uid ${uid}"
+assert_bad           "--query-lockdown-whitelist-uid ${uid}"   # already removed
+assert_bad           "--add-lockdown-whitelist-uid ${uid}x"    # bad uid
+
+assert_good          "--add-lockdown-whitelist-user ${user}"
+assert_good          "--query-lockdown-whitelist-user ${user}"
+assert_good_contains "--list-lockdown-whitelist-users" "${user}"
+assert_good          "--remove-lockdown-whitelist-user ${user}"
+assert_bad           "--query-lockdown-whitelist-user ${user}"  # already removed
+
+
+# rich rules
+
+bad_rules=(
+ ''                                                         # empty
+ 'family="ipv6" accept'                                     # no 'rule'
+ 'name="dns" accept'                                        # no 'rule'
+ 'protocol value="ah" reject'                               # no 'rule'
+ 'rule protocol value="ah" reject type="icmp-host-prohibited"' # reject type needs specific family
+ 'rule family="ipv4" protocol value="ah" reject type="dummy"'  # dummy reject type
+ 'rule'                                                     # no element
+ 'rule bad_element'                                         # no unknown element
+ 'rule family="ipv5"'                                       # bad family
+ 'rule name="dns" accept'                                   # name outside of element
+ 'rule protocol="ah" accept'                                # bad protocol usage
+ 'rule protocol value="ah" accept drop'                     # accept && drop
+ 'rule service name="radius" port port="4011" reject'       # service && port
+ 'rule service bad_attribute="dns"'                         # bad attribute
+ 'rule protocol value="mtp" log level="eror"'               # bad log level
+ 'rule source address="1:2:3:4:6::" icmp-block name="redirect" log level="info" limit value="1/2m"'         # bad limit
+ 'rule protocol value="esp"'                                # no action/log/audit
+)
+
+for (( i=0;i<${#bad_rules[@]};i++)); do
+  rule=${bad_rules[${i}]}
+  assert_rich_bad           "add"    "${rule}"
+done
+
+good_rules=(
+ 'rule service name="ftp" audit limit value="1/m" accept'
+ 'rule protocol value="ah" reject'
+ 'rule protocol value="esp" accept'
+ 'rule protocol value="sctp" log'
+ 'rule family="ipv4" source address="192.168.0.0/24" service name="tftp" log prefix="tftp" level="info" limit value="1/m" accept'
+ 'rule family="ipv4" source NOT address="192.168.0.0/24" service name="dns" log prefix="dns" level="info" limit value="2/m" drop'
+ 'rule family="ipv6" source address="1:2:3:4:6::" service name="radius" log prefix="dns" level="info" limit value="3/m" reject type="icmp6-addr-unreachable" limit value="20/m"'
+ 'rule family="ipv6" source address="1:2:3:4:6::" port port="4011" protocol="tcp" log prefix="port 4011/tcp" level="info" limit value="4/m" drop'
+ 'rule family="ipv6" source address="1:2:3:4:6::" forward-port port="4011" protocol="tcp" to-port="4012" to-addr="1::2:3:4:7"'
+ 'rule family="ipv4" source address="192.168.0.0/24" icmp-block name="source-quench" log prefix="source-quench" level="info" limit value="4/m"'
+ 'rule family="ipv6" source address="1:2:3:4:6::" icmp-block name="redirect" log prefix="redirect" level="info" limit value="4/m"'
+ 'rule family="ipv4" source address="192.168.1.0/24" masquerade'
+ 'rule family="ipv6" masquerade'
+ 'rule forward-port port="2222" to-port="22" to-addr="192.168.100.2" protocol="tcp" family="ipv4" source address="192.168.2.100"')
+
+for (( i=0;i<${#good_rules[@]};i++)); do
+  rule=${good_rules[${i}]}
+  assert_rich_good          "add"    "${rule}"
+  assert_rich_good          "query"  "${rule}"
+  assert_rich_good          "remove" "${rule}"
+  assert_rich_bad           "query"  "${rule}"
+done
+
+echo "----------------------------------------------------------------------"
+if [[ "${failures}" -eq 0 ]]; then
+    echo "Everything's OK, you rock :-)"
+    exit 0
+else
+    echo "FAILED (failures=${failures})"
+    exit 2
+fi
-- 
2.8.0

